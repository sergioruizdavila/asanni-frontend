{"version":3,"sources":["app/core/util/getDataStaticJson/getDataStaticJson.service.ts"],"names":[],"mappings":"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","file":"../../../../../www/app/core/util/getDataStaticJson/getDataStaticJson.service.js","sourcesContent":["/**\n* getDataStaticJsonService\n* @description - get data from static jsons service\n* @constructor\n*/\n\nmodule app.core.util.getDataStaticJson {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IGetDataStaticJsonService {\n        returnValuei18n: (type: string, code: string) => string;\n        getMonthi18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getSexi18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getCountryi18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getLanguagei18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getDegreei18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getTypeOfImmersioni18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n    }\n\n    export interface IAppTranslate extends angular.translate.ITranslateService {\n        getTranslationTable: () => Object;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class GetDataStaticJsonService implements IGetDataStaticJsonService {\n\n        static serviceId = 'mainApp.core.util.GetDataStaticJsonService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$translate'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $translate: IAppTranslate) {\n            console.log('getDataStaticJsonService service called');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * returnValuei18n\n        * @description - return value based on code from i18n json\n        * @use - this.getDataFromJson.returnValuei18n('country', 'CO');\n        * @function\n        * @return {string} object's key from json i18n (e.g. '%country.CO')\n        */\n        returnValuei18n(type, code): string {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let key = '';\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(type) >= 0) {\n\n                    let regex = new RegExp('%' + type + '.', 'g');\n                    let codeFromJson = element.replace(regex,'');\n                    if(codeFromJson === code){\n                        key = element;\n                    }\n\n                }\n            }\n\n            return key;\n\n        }\n\n\n\n        /**\n        * getMonthi18n\n        * @description - get months texts & codes from i18n json files\n        * @use - this.getDataFromJson.getMonthi18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} months object array\n        */\n        getMonthi18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"month\") >= 0) {\n\n                    let code = element.replace(/%month./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getSexi18n\n        * @description - get user's sex texts & codes from i18n json files\n        * @use - this.getDataFromJson.getSexi18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} sexs object array\n        */\n        getSexi18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"sex\") >= 0) {\n\n                    let code = element.replace(/%sex./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getCountryi18n\n        * @description - get countries texts & codes from i18n json files\n        * @use - this.getDataFromJson.getCountryi18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} countries object array\n        */\n        getCountryi18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"country\") >= 0) {\n\n                    let code = element.replace(/%country./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getLanguagei18n\n        * @description - get languages texts & codes from i18n json files\n        * @use - this.getDataFromJson.getLanguagei18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} languages object array\n        */\n        getLanguagei18n(): Array<app.core.interfaces.IDataFromJsonI18n>Â {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"language\") >= 0) {\n\n                    let code = element.replace(/%language./g,'');\n                    let value = jsonDoc[element];\n                    array.push({value: value, code: code});\n                }\n            }\n\n            return array;\n        }\n\n\n\n        /**\n        * getDegreei18n\n        * @description - get degree texts & codes from i18n json files\n        * @use - this.getDataFromJson.getDegreei18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} degree object array\n        */\n        getDegreei18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"degree\") >= 0) {\n\n                    let code = element.replace(/%degree./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getTypeOfImmersioni18n\n        * @description - get type of immersion texts & codes from i18n json files\n        * @use - this.getDataFromJson.getTypeOfImmersioni18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} typeOfImmersion object array\n        */\n        getTypeOfImmersioni18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"immersion\") >= 0) {\n\n                    let code = element.replace(/%immersion./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n    .module('mainApp.core.util')\n    .service(GetDataStaticJsonService.serviceId, GetDataStaticJsonService);\n\n}\n"]}