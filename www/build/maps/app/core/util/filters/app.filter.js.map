{"version":3,"sources":["app/core/util/filters/app.filter.ts"],"names":[],"mappings":"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","file":"../../../../../www/app/core/util/filters/app.filter.js","sourcesContent":["/**\n * mainApp Filters\n * @description - Set of all mainApp's filters\n */\n\nmodule app.core.util.filters {\n\n    /**********************************/\n    /*      GET I18N VALUE FILTER     */\n    /**********************************/\n\n    /*-- INJECT DEPENDENCIES --*/\n    GetI18nFilter.$inject = ['$filter', 'mainApp.core.util.GetDataStaticJsonService'];\n\n    /**\n    * GetI18nFilter\n    * @description - return value based on code from i18n json\n    * @use - {{ 'CO' | getI18nFilter:'country' }}\n    * @function\n    * @return {string} country translated (e.g. 'Estados Unidos')\n    */\n    export function GetI18nFilter($filter: angular.IFilterService,\n                                  getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService) {\n        return function (value: string, type: string): string {\n            //VARIABLES\n            let valueI18n = getDataFromJson.returnValuei18n(type, value);\n            let translated = $filter('translate')(valueI18n);\n\n            return translated;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    GetTypeOfTeacherFilter.$inject = ['$filter'];\n\n    /**\n    * GetTypeOfTeacherFilter\n    * @description - return the type of teacher text based on teacher type on DB ('H' or 'P')\n    * @use - {{ 'H' | getTypeOfTeacherFilter }}\n    * @function\n    * @return {string} type of teacher text translated\n    */\n    export function GetTypeOfTeacherFilter($filter: angular.IFilterService) {\n        return function (value: string): string {\n            //VARIABLES\n            let translated = '';\n\n            if(value === 'H') {\n                translated = $filter('translate')('%global.teacher.type.hobby.text');\n            } else if (value === 'P') {\n                translated = $filter('translate')('%global.teacher.type.professional.text');\n            }\n\n            return translated;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    AgeFilter.$inject = ['$filter', 'mainApp.core.util.FunctionsUtilService'];\n\n    /**\n    * AgeFilter\n    * @description - return age translated (e.g. '35 a√±os')\n    * @use - {{ '1982' | ageFilter }}\n    * @function\n    * @return {string} user years old\n    */\n    export function AgeFilter(\n        $filter: angular.IFilterService,\n        functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService) {\n        return function (value: string): string {\n\n            let age = functionsUtil.ageFormat(value);\n            let translated = $filter('translate')('%global.age.text');\n\n            return age + ' ' + translated;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    YearMonthFormatFilter.$inject = ['$filter', 'mainApp.core.util.GetDataStaticJsonService'];\n\n    /**\n    * YearMonthFormatFilter\n    * @description - return date formatted as 'September 2017'\n    * @use - {{ date | yearMonthFormatFilter }}\n    * @function\n    * @return {string} date formatted as 'Month YYYY'\n    */\n    export function YearMonthFormatFilter($filter: angular.IFilterService,\n                                          getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService) {\n        return function (value: string): string {\n            let dateString = moment(value).format('YYYY/MM/DD').split('/');\n            let valueI18n = getDataFromJson.returnValuei18n('month', dateString[1]);\n            let translated = $filter('translate')(valueI18n);\n            //Split date to day, month and year\n            let dateFormatted = {\n                month: translated,\n                year: dateString[0]\n            };\n            return dateFormatted.month + ' ' + dateFormatted.year;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    RangeFilter.$inject = ['$filter', 'mainApp.core.util.GetDataStaticJsonService'];\n\n    /**\n    * RangeFilter\n    * @description - Receive a number range (e.g. [-1, 1] or [1, 5]), and return\n    * a list of number in order to show inside a ng-repeat loop.\n    * @use - ng-repeat = \"i in [-1,1] | RangeFilter\"\n    * @function\n    * @return {Array<number>} result - number list to show in ng-repeat loop\n    */\n    export function RangeFilter() {\n        return function (value: Array<number>): Array<number> {\n            let lowBound, highBound;\n            if (value.length == 1) {\n              lowBound = 0;\n              highBound = +value[0] - 1;\n          } else if (value.length == 2) {\n              lowBound = +value[0];\n              highBound = +value[1];\n            }\n            var i = lowBound;\n            var result = [];\n            while (i <= highBound) {\n              result.push(i);\n              i++;\n            }\n            return result;\n        }\n    }\n\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.core.util')\n        .filter('getI18nFilter', GetI18nFilter)\n        .filter('getTypeOfTeacherFilter', GetTypeOfTeacherFilter)\n        .filter('ageFilter', AgeFilter)\n        .filter('yearMonthFormatFilter', YearMonthFormatFilter)\n        .filter('rangeFilter', RangeFilter);\n\n}\n"]}