{"version":3,"sources":["app/core/util/messageUtil/messageUtil.service.ts"],"names":[],"mappings":"AAOA,IAAO,GAAG,CAgET;AAhED,WAAO,GAAG;IAAC,IAAA,IAAI,CAgEd;IAhEU,WAAA,IAAI;QAAC,IAAA,IAAI,CAgEnB;QAhEe,WAAA,IAAI;YAAC,IAAA,WAAW,CAgE/B;YAhEoB,WAAA,WAAW,EAAC,CAAC;gBAE9B,YAAY,CAAC;gBAWb;oBAOI,4BAAoB,OAA+B;wBAA/B,YAAO,GAAP,OAAO,CAAwB;wBAC/C,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,iBAAiB,CAAC;wBACjD,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC;wBAClC,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC;wBAElC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;oBAC/B,CAAC;oBAGD,oCAAO,GAAP,UAAQ,OAAe;wBACnB,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;wBAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAC5B,CAAC;oBAED,kCAAK,GAAL,UAAM,OAAe;wBAEjB,IAAM,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,iCAAiC,CAAC,CAAC;wBAG1F,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;wBAClC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACX,OAAO,GAAG,oBAAoB,CAAC;wBACnC,CAAC;wBACD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAC1B,CAAC;oBAED,iCAAI,GAAJ,UAAK,OAAe;wBAChB,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;wBAClC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;wBAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzB,CAAC;oBAGM,2BAAQ,GAAf,UAAgB,OAA+B;wBAC3C,MAAM,CAAC,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC;oBAC3C,CAAC;oBAzCM,4BAAS,GAAG,sCAAsC,CAAC;oBAGnD,0BAAO,GAAG,CAAC,SAAS,CAAC,CAAC;oBAwCjC,yBAAC;gBAAD,CA7CA,AA6CC,IAAA;gBAED,OAAO;qBACF,MAAM,CAAC,mBAAmB,CAAC;qBAC3B,OAAO,CAAC,kBAAkB,CAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAE5E,CAAC,EAhEoB,WAAW,GAAX,gBAAW,KAAX,gBAAW,QAgE/B;QAAD,CAAC,EAhEe,IAAI,GAAJ,SAAI,KAAJ,SAAI,QAgEnB;IAAD,CAAC,EAhEU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAgEd;AAAD,CAAC,EAhEM,GAAG,KAAH,GAAG,QAgET","file":"../../../../../www/app/core/util/messageUtil/messageUtil.service.js","sourcesContent":["/**\r\n * messageUtilService\r\n * @description - Some description\r\n * @constructor\r\n */\r\n\r\n\r\nmodule app.core.util.messageUtil {\r\n\r\n    'use strict';\r\n\r\n    export interface IMessageUtilService {\r\n        //properties\r\n\r\n        //methods\r\n        success: (message: string) => void;\r\n        error: (message: string) => void;\r\n        info: (message: string) => void;\r\n    }\r\n\r\n    class messageUtilService implements IMessageUtilService {\r\n\r\n        static serviceId = 'mainApp.core.util.messageUtilService';\r\n\r\n        //inject dependencies\r\n        static $inject = ['$filter'];\r\n\r\n        constructor(private $filter: angular.IFilterService) {\r\n            toastr.options.positionClass = \"toast-top-right\";\r\n            toastr.options.showDuration = 300;\r\n            toastr.options.hideDuration = 300;\r\n            //With timeout = 0, doesn't hide until user press close button\r\n            toastr.options.timeOut = 0;\r\n        }\r\n\r\n        //methods\r\n        success(message: string): void {\r\n            toastr.options.timeOut = 2000;\r\n            toastr.success(message);\r\n        }\r\n\r\n        error(message: string): void {\r\n            //CONSTANTS\r\n            const ERROR_SERVER_MESSAGE = this.$filter('translate')('%notification.error.server.text');\r\n            /***************************************/\r\n            //default config\r\n            toastr.options.closeButton = true;\r\n            toastr.options.timeOut = 0;\r\n            if (!message) {\r\n                message = ERROR_SERVER_MESSAGE;\r\n            }\r\n            toastr.error(message);\r\n        }\r\n\r\n        info(message: string): void {\r\n            toastr.options.closeButton = true;\r\n            toastr.options.timeOut = 0;\r\n            toastr.info(message);\r\n        }\r\n\r\n\r\n        static instance($filter: angular.IFilterService): IMessageUtilService {\r\n            return new messageUtilService($filter);\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module('mainApp.core.util')\r\n        .factory(messageUtilService.serviceId, messageUtilService.instance);\r\n\r\n}\r\n"]}