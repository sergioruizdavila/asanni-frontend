{"version":3,"sources":["app/models/school/school.service.ts"],"names":[],"mappings":"AAOA,IAAO,GAAG,CAoGT;AApGD,WAAO,GAAG;IAAC,IAAA,MAAM,CAoGhB;IApGU,WAAA,MAAM;QAAC,IAAA,MAAM,CAoGvB;QApGiB,WAAA,MAAM,EAAC,CAAC;YAEtB,YAAY,CAAC;YAcb;gBAoBI,uBAAoB,OAAkC;oBAAlC,YAAO,GAAP,OAAO,CAA2B;oBAElD,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBAC5C,CAAC;gBAcD,qCAAa,GAAb,UAAc,EAAE;oBAEZ,IAAI,GAAG,GAAG,UAAU,CAAC;oBAErB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAC,CAAC,CAAC,QAAQ;yBAChD,IAAI,CACD,UAAS,IAAI;wBACT,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC,CACJ,CAAC,KAAK,CACH,UAAS,GAAG;wBACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,MAAM,CAAC,GAAG,CAAC;oBACf,CAAC,CACJ,CAAC;gBACV,CAAC;gBAQD,qCAAa,GAAb;oBAEI,IAAI,GAAG,GAAG,UAAU,CAAC;oBAErB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC,GAAG,EAAE,GAAG,EAAC,CAAC,CAAC,QAAQ;yBACzC,IAAI,CACD,UAAS,IAAI;wBACT,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC,CACJ,CAAC,KAAK,CACH,UAAS,GAAG;wBACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,MAAM,CAAC,GAAG,CAAC;oBACf,CAAC,CACJ,CAAC;gBACV,CAAC;gBAzEM,uBAAS,GAAG,qCAAqC,CAAC;gBAUlD,qBAAO,GAAG;oBACb,qCAAqC;iBACxC,CAAC;gBA+DN,oBAAC;YAAD,CA7EA,AA6EC,IAAA;YA7EY,oBAAa,gBA6EzB,CAAA;YAGD,OAAO;iBACF,MAAM,CAAC,uBAAuB,EAAE,EAAE,CAAC;iBACnC,OAAO,CAAC,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAEzD,CAAC,EApGiB,MAAM,GAAN,aAAM,KAAN,aAAM,QAoGvB;IAAD,CAAC,EApGU,MAAM,GAAN,UAAM,KAAN,UAAM,QAoGhB;AAAD,CAAC,EApGM,GAAG,KAAH,GAAG,QAoGT","file":"../../../../www/app/models/school/school.service.js","sourcesContent":["/**\n * SchoolService\n * @description - Services related on School Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.models.school {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ISchoolService {\n        getSchoolById: (id: string) => angular.IPromise<any>;\n        getAllSchools: () => angular.IPromise<any>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SchoolService implements ISchoolService {\n\n        static serviceId = 'mainApp.models.school.SchoolService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private restApi: app.core.restApi.IRestApi) {\n            //LOG\n            console.log('school service instanced');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * getSchoolById\n        * @description - get school by Id\n        * @use - this.SchoolService.getSchoolById('98d667ae');\n        * @function\n        * @params {string} id - school id\n        * @return {angular.IPromise<any>} promise - return school by Id\n        */\n        getSchoolById(id): angular.IPromise<any> {\n            //VARIABLES\n            let url = 'schools/';\n\n            return this.restApi.show({url: url, id: id}).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n        }\n\n        /**\n        * getAllSchools\n        * @description - get all Schools\n        * @function\n        * @return {angular.IPromise<any>} return a promise with schools list\n        */\n        getAllSchools(): angular.IPromise<any> {\n            //VARIABLES\n            let url = 'schools/';\n\n            return this.restApi.query({url: url}).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.models.school', [])\n        .service(SchoolService.serviceId, SchoolService);\n\n}\n"]}