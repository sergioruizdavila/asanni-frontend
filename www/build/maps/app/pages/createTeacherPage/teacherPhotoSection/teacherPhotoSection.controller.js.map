{"version":3,"sources":["app/pages/createTeacherPage/teacherPhotoSection/teacherPhotoSection.controller.ts"],"names":[],"mappings":"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","file":"../../../../../www/app/pages/createTeacherPage/teacherPhotoSection/teacherPhotoSection.controller.js","sourcesContent":[" /**\n * TeacherPhotoSectionController\n * @description - Teacher Photo Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherPhotoSectionController {\n        form: ITeacherPhotoForm;\n        validate: ITeacherPhotoValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherPhotoScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    interface ITeacherPhotoForm {\n        avatar: File;\n        croppedDataUrl: string;\n        thumbnail: string;\n    }\n\n    interface ITeacherPhotoValidate {\n        avatar: app.core.util.functionsUtil.IValid;\n        thumbnail: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherPhotoSectionController implements ITeacherPhotoSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherPhotoSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherPhotoForm;\n        validate: ITeacherPhotoValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        uploading: boolean;\n        STEP7_STATE: string;\n        FINAL_STEP_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.s3Upload.S3UploadService',\n            'mainApp.core.util.messageUtilService',\n            'Upload',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private S3UploadService: app.core.s3Upload.IS3UploadService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private Upload: app.core.interfaces.IUpload,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherPhotoScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP7_STATE = 'page.createTeacherPage.price';\n            this.FINAL_STEP_STATE = 'page.createTeacherPage.finish';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.photo.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.photo.teacher.help_text.description.text');\n            /*********************************/\n\n            // Init upload loading button\n            this.uploading = false;\n\n            // Put title on parent scope\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(8, 9);\n\n            // Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Init form\n            this.form = {\n                avatar: null,\n                croppedDataUrl: '',\n                thumbnail: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                avatar: {valid: true, message: ''},\n                thumbnail: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherPhotoSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n            //VARIABLES\n            let self = this;\n            //Validate data form\n            let formValid = this._validateForm();\n            /****************************************************/\n\n            //If form is valid, save data model\n            if(formValid) {\n\n                this.uploading = true;\n\n                // If this.form.avatar exists, resize and upload image\n                if(this.form.avatar) {\n                    this._resizeImage().then(function(result) {\n\n                        self.uploading = false;\n\n                        if(result.Location) {\n                            // Save teacher model on DB\n                            self._setDataModelFromForm(result.Location);\n                            self.$scope.$emit('Save Profile Data');\n\n                            // GO TO NEXT STEP\n                            self.$state.go(self.FINAL_STEP_STATE, {reload: true});\n                        } else {\n                            self.messageUtil.error('');\n                        }\n\n                    });\n\n                // If this.form.avatar not exists, only go to next step\n                } else {\n                    this.$scope.$emit('Save Profile Data');\n                    // GO TO NEXT STEP\n                    this.$state.go(this.FINAL_STEP_STATE, {reload: true});\n                }\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP7_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - User Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n\n            this.form.thumbnail = data.Avatar;\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const DEFINED_ENUM = app.core.util.functionsUtil.Validation.Defined;\n            const PHOTO_MESSAGE = this.$filter('translate')('%create.teacher.photo.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate photo\n            let avatar_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.avatar = this.functionsUtilService.validator(this.form.avatar, avatar_rules);\n\n            //Validate thumbnail\n            let thumbnail_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.thumbnail = this.functionsUtilService.validator(this.form.thumbnail, thumbnail_rules);\n\n            //If avatar image is not valid\n            if(!this.validate.avatar.valid) {\n                //If thumbnail image is not valid\n                if(!this.validate.thumbnail.valid) {\n                    this.validate.globalValidate.valid = false;\n                    this.validate.globalValidate.message = PHOTO_MESSAGE;\n                    formValid = this.validate.globalValidate.valid;\n                } else {\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n                }\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (photo, immerison)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const AVATAR_TITLE = this.$filter('translate')('%create.teacher.photo.help_text.avatar.title.text');\n            const AVATAR_DESCRIPTION = this.$filter('translate')('%create.teacher.photo.teacher.help_text.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'avatar':\n                    this.helpText.title = AVATAR_TITLE;\n                    this.helpText.description = AVATAR_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _resizeImage\n        * @description - resize image base on defaults parameters\n        * @use - this._resizeImage();\n        * @function\n        * @return {void}\n        */\n        private _resizeImage(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            //New file name\n            let newName = app.core.util.functionsUtil.FunctionsUtilService.generateGuid() + '.jpeg';\n            // Image Options\n            let options= {\n                width: 250,\n                height: 250,\n                quality: 1.0,\n                type: 'image/jpeg',\n                pattern:'.jpg',\n                restoreExif: false\n            };\n            // Build file base on cropped data image\n            let file = this.Upload.dataUrltoBlob(this.form.croppedDataUrl, newName);\n            /****************************************************/\n\n            // Resize image (change extension to jpeg, resize and quality)\n            return this.Upload.resize(file, options).then(function(resizedFile) {\n\n                // Upload resized file to Amazon S3\n                return self._uploadImage(resizedFile).then(function(result) {\n                    return result;\n                });\n\n            });\n\n        }\n\n\n\n        /**\n        * _uploadImage\n        * @description - upload resize image to Amazon S3\n        * @use - this._uploadImage(resizedFile);\n        * @function\n        * @param {File} resizedFile file object\n        * @return {void}\n        */\n        private _uploadImage(resizedFile): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n\n            return this.S3UploadService.upload(resizedFile).then(function (result) {\n\n                return result;\n\n            }, function (error) {\n\n                // Mark the error\n                console.log('error', error);\n                return error;\n\n            });\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(avatar): void {\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.Avatar = avatar;\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this photo subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args: app.models.user.Profile) {\n                    self._fillForm(args);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherPhotoSectionController.controllerId,\n                    TeacherPhotoSectionController);\n\n}\n"]}