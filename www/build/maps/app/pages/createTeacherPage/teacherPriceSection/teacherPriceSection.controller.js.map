{"version":3,"sources":["app/pages/createTeacherPage/teacherPriceSection/teacherPriceSection.controller.ts"],"names":[],"mappings":"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","file":"../../../../../www/app/pages/createTeacherPage/teacherPriceSection/teacherPriceSection.controller.js","sourcesContent":["/**\n * TeacherPriceSectionController\n * @description - Teacher Price Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherPriceSectionController {\n        form: ITeacherPriceForm;\n        validate: ITeacherPriceValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherPriceScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    export interface ITeacherPriceForm {\n        privateClass: app.models.teacher.TypeOfPrice;\n        groupClass: app.models.teacher.TypeOfPrice;\n    }\n\n    interface ITeacherPriceValidate {\n        privateClassActive: app.core.util.functionsUtil.IValid;\n        privateClassPrice: app.core.util.functionsUtil.IValid;\n        groupClassActive: app.core.util.functionsUtil.IValid;\n        groupClassPrice: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherPriceSectionController implements ITeacherPriceSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherPriceSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherPriceForm;\n        validate: ITeacherPriceValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        STEP6_STATE: string;\n        STEP8_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherPriceScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP6_STATE = 'page.createTeacherPage.method';\n            this.STEP8_STATE = 'page.createTeacherPage.photo';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.price.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(7, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Init form\n            this.form = {\n                privateClass: new app.models.teacher.TypeOfPrice,\n                groupClass: new app.models.teacher.TypeOfPrice\n            };\n\n            // Build validate object fields\n            this.validate = {\n                privateClassPrice: {valid: true, message: ''},\n                privateClassActive: {valid: true, message: ''},\n                groupClassPrice: {valid: true, message: ''},\n                groupClassActive: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherPriceSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeStatus\n        * @description - change 'Private Class Switch' or 'Group Class Switch' Status\n        * @function\n        * @return void\n        */\n        changeStatus(type): void {\n            this.form[type].Active = !this.form[type].Active;\n        }\n\n\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP8_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP6_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            this.form.privateClass = data.Price.PrivateClass;\n            this.form.groupClass = data.Price.GroupClass;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const IS_NOT_ZERO_ENUM = app.core.util.functionsUtil.Validation.IsNotZero;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const TRUE_ENUM = app.core.util.functionsUtil.Validation.IsTrue;\n            const GLOBAL_MESSAGE = this.$filter('translate')('%create.teacher.price.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate price per hour If user select 'YES' private class option\n            if(this.form.privateClass.Active) {\n\n                let privateClassPrice_rules = [NULL_ENUM, EMPTY_ENUM, IS_NOT_ZERO_ENUM];\n                this.validate.privateClassPrice = this.functionsUtilService.validator(this.form.privateClass.HourPrice, privateClassPrice_rules);\n                if(!this.validate.privateClassPrice.valid) {\n                    formValid = this.validate.privateClassPrice.valid;\n                }\n\n            }\n\n            //Validate price per hour If user select 'YES' group class option\n            if(this.form.groupClass.Active) {\n\n                let groupClassPrice_rules = [NULL_ENUM, EMPTY_ENUM, IS_NOT_ZERO_ENUM];\n                this.validate.groupClassPrice = this.functionsUtilService.validator(this.form.groupClass.HourPrice, groupClassPrice_rules);\n                if(!this.validate.groupClassPrice.valid) {\n                    formValid = this.validate.groupClassPrice.valid;\n                }\n\n            }\n\n            //Validate If user selected one Type of Class (private classes)\n            let privateClassActive_rules = [TRUE_ENUM];\n            this.validate.privateClassActive = this.functionsUtilService.validator(this.form.privateClass.Active, privateClassActive_rules);\n\n            //Validate If user selected one Type of Class (group classes)\n            let groupClassActive_rules = [TRUE_ENUM];\n            this.validate.groupClassActive = this.functionsUtilService.validator(this.form.groupClass.Active, groupClassActive_rules);\n\n            //Charge a global error message if bith switches are FALSE\n            if(!this.validate.privateClassActive.valid && !this.validate.groupClassActive.valid) {\n                this.validate.globalValidate.valid = false;\n                this.validate.globalValidate.message = GLOBAL_MESSAGE;\n                formValid = this.validate.globalValidate.valid;\n            } else {\n                this.validate.globalValidate.valid = true;\n                this.validate.globalValidate.message = '';\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (price, immerison)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const PRIVATE_CLASS_TITLE = this.$filter('translate')('%create.teacher.price.help_text.private_class.title.text');\n            const PRIVATE_CLASS_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.private_class.description.text');\n            const GROUP_CLASS_TITLE = this.$filter('translate')('%create.teacher.price.help_text.group_class.title.text');\n            const GROUP_CLASS_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.group_class.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'privateClass':\n                    this.helpText.title = PRIVATE_CLASS_TITLE;\n                    this.helpText.description = PRIVATE_CLASS_DESCRIPTION;\n                break;\n\n                case 'groupClass':\n                    this.helpText.title = GROUP_CLASS_TITLE;\n                    this.helpText.description = GROUP_CLASS_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.teacherData.Price.PrivateClass = this.form.privateClass;\n            this.$rootScope.teacherData.Price.GroupClass = this.form.groupClass;\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this price subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form', function(event, args: app.models.teacher.Teacher) {\n\n                self._fillForm(args);\n\n            });\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherPriceSectionController.controllerId,\n                    TeacherPriceSectionController);\n\n}\n"]}