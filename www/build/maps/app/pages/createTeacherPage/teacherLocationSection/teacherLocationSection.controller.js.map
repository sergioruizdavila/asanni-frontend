{"version":3,"sources":["app/pages/createTeacherPage/teacherLocationSection/teacherLocationSection.controller.ts"],"names":[],"mappings":"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","file":"../../../../../www/app/pages/createTeacherPage/teacherLocationSection/teacherLocationSection.controller.js","sourcesContent":["/**\n * TeacherLocationSectionController\n * @description - Teacher Location Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherLocationSectionController {\n        form: ITeacherLocationForm;\n        validate: ITeacherLocationValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherLocationScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n    export interface ITeacherLocationForm {\n        countryLocation: string;\n        addressLocation: string;\n        cityLocation: string;\n        stateLocation: string;\n        zipCodeLocation: string;\n        positionLocation: app.models.user.Position;\n    }\n\n    interface ITeacherLocationValidate {\n        countryLocation: app.core.util.functionsUtil.IValid;\n        addressLocation: app.core.util.functionsUtil.IValid;\n        cityLocation: app.core.util.functionsUtil.IValid;\n        stateLocation: app.core.util.functionsUtil.IValid;\n        zipCodeLocation: app.core.util.functionsUtil.IValid;\n        positionLocation: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherLocationSectionController implements ITeacherLocationSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherLocationSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherLocationForm;\n        validate: ITeacherLocationValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        geocoder: google.maps.Geocoder;\n        mapConfig: components.map.IMapConfig;\n        marker: string;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        STEP1_STATE: string;\n        STEP3_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$timeout'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherLocationScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $timeout: angular.ITimeoutService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP1_STATE = 'page.createTeacherPage.basicInfo';\n            this.STEP3_STATE = 'page.createTeacherPage.language';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.location.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.description.text');\n            /*********************************/\n\n            //Assign maker on map\n            this.marker = 'round';\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(2, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            //Init form\n            this.form = {\n                countryLocation: '',\n                cityLocation: '',\n                stateLocation: '',\n                addressLocation: '',\n                zipCodeLocation: '',\n                positionLocation: new app.models.user.Position()\n            };\n\n            //Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Init Map\n            this.mapConfig = this.functionsUtilService.buildMapConfig(\n                null, 'drag-maker-map', null, null\n            );\n\n            // Build validate object fields\n            this.validate = {\n                countryLocation: {valid: true, message: ''},\n                cityLocation: {valid: true, message: ''},\n                stateLocation: {valid: true, message: ''},\n                addressLocation: {valid: true, message: ''},\n                zipCodeLocation: {valid: true, message: ''},\n                positionLocation: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherLocationSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid){\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Profile Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP3_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP1_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n            this.form.addressLocation = data.Location.Address;\n            this.form.cityLocation = data.Location.City;\n            this.form.stateLocation = data.Location.State;\n            this.form.zipCodeLocation = data.Location.ZipCode;\n            //Charge Country on select List\n            this.countryObject.code = data.Location.Country;\n            //Current Map Position\n            this.form.positionLocation = new app.models.user.Position(data.Location.Position);\n\n            this.mapConfig = this.functionsUtilService.buildMapConfig(\n                [\n                    {\n                        id: this.form.positionLocation.Id,\n                        location: {\n                            position: {\n                                lat: parseFloat(this.form.positionLocation.Lat),\n                                lng: parseFloat(this.form.positionLocation.Lng)\n                            }\n                        }\n                    }\n                ],\n                'drag-maker-map',\n                {lat: parseFloat(this.form.positionLocation.Lat), lng: parseFloat(this.form.positionLocation.Lng)},\n                null\n            );\n\n            /*\n            * Send event to child (MapController) in order to It draws\n            * each Marker on the Map\n            */\n            //LEGACY\n            //this.$scope.$broadcast('BuildMarkers', this.mapConfig);\n            this.$scope.$broadcast('BuildMarkers', {mapConfig: this.mapConfig, typeOfMarker: 'round'});\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Country field\n            let country_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.countryLocation = this.functionsUtilService.validator(this.countryObject.code, country_rules);\n            if(!this.validate.countryLocation.valid) {\n                formValid = this.validate.countryLocation.valid;\n            }\n\n            //Validate City field\n            let city_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.cityLocation = this.functionsUtilService.validator(this.form.cityLocation, city_rules);\n            if(!this.validate.cityLocation.valid) {\n                formValid = this.validate.cityLocation.valid;\n            }\n\n            //Validate State field\n            let state_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.stateLocation = this.functionsUtilService.validator(this.form.stateLocation, state_rules);\n            if(!this.validate.stateLocation.valid) {\n                formValid = this.validate.stateLocation.valid;\n            }\n\n            //Validate Address field\n            let address_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.addressLocation = this.functionsUtilService.validator(this.form.addressLocation, address_rules);\n            if(!this.validate.addressLocation.valid) {\n                formValid = this.validate.addressLocation.valid;\n            }\n\n            //Validate Zip Code field\n            //TODO por ahora no es importante validar el Zip Code, pero si el\n            // usuario no escribe nada, me sale el error como si fuera requerido,\n            // y este campo no es requerido, solucionar eso.\n            /*let zipCode_rules = [NUMBER_ENUM];\n            this.validate.zipCodeLocation = this.functionsUtilService.validator(this.form.zipCodeLocation, zipCode_rules);\n            if(!this.validate.zipCodeLocation.valid) {\n                formValid = this.validate.zipCodeLocation.valid;\n            }*/\n\n            //Validate Position on Map\n            let position_rules = [NULL_ENUM, EMPTY_ENUM];\n            let latValidate= this.functionsUtilService.validator(this.form.positionLocation.Lat, position_rules);\n            let lngValidate = this.functionsUtilService.validator(this.form.positionLocation.Lng, position_rules);\n            if(!latValidate.valid || !lngValidate.valid) {\n                if(!latValidate.valid) {\n                    this.validate.positionLocation = latValidate;\n                    formValid = this.validate.positionLocation.valid;\n                } else if(!lngValidate.valid) {\n                    this.validate.positionLocation = lngValidate;\n                    formValid = this.validate.positionLocation.valid;\n                }\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (firstName, lastName, email, etc)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const COUNTRY_TITLE = this.$filter('translate')('%create.teacher.location.help_text.cntry.title.text');\n            const COUNTRY_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.cntry.description.text');\n            const CITY_TITLE = this.$filter('translate')('%create.teacher.location.help_text.city.title.text');\n            const CITY_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.city.description.text');\n            const STATE_TITLE = this.$filter('translate')('%create.teacher.location.help_text.state.title.text');\n            const STATE_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.state.description.text');\n            const ADDRESS_TITLE = this.$filter('translate')('%create.teacher.location.help_text.address.title.text');\n            const ADDRESS_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.address.description.text');\n            const ZIP_CODE_TITLE = this.$filter('translate')('%create.teacher.location.help_text.zip_code.title.text');\n            const ZIP_CODE_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.zip_code.description.text');\n            const POSITION_TITLE = this.$filter('translate')('%create.teacher.location.help_text.position.title.text');\n            const POSITION_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.position.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'country':\n                    this.helpText.title = COUNTRY_TITLE;\n                    this.helpText.description = COUNTRY_DESCRIPTION;\n                break;\n\n                case 'city':\n                    this.helpText.title = CITY_TITLE;\n                    this.helpText.description = CITY_DESCRIPTION;\n                break;\n\n                case 'state':\n                    this.helpText.title = STATE_TITLE;\n                    this.helpText.description = STATE_DESCRIPTION;\n                break;\n\n                case 'address':\n                    this.helpText.title = ADDRESS_TITLE;\n                    this.helpText.description = ADDRESS_DESCRIPTION;\n                break;\n\n                case 'zipCode':\n                    this.helpText.title = ZIP_CODE_TITLE;\n                    this.helpText.description = ZIP_CODE_DESCRIPTION;\n                break;\n\n                case 'position':\n                    this.helpText.title = POSITION_TITLE;\n                    this.helpText.description = POSITION_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * changeMapPosition\n        * @description -\n        * @use - this.changeMapPosition();\n        * @function\n        * @param {string} - change map position\n        * @return {void}\n        */\n        changeMapPosition(): void {\n            //VARIABLES\n            let self = this;\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryLocation = countryCode;\n\n            let location = {\n                country: this.form.countryLocation,\n                city: this.form.cityLocation,\n                address: this.form.addressLocation\n            };\n            /************************************/\n\n            this.$timeout(function(){\n                self.$scope.$broadcast('CodeAddress', location);\n            });\n\n        }\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            //VARIABLES\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryLocation = countryCode;\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.Location.Country = this.form.countryLocation;\n            this.$rootScope.profileData.Location.Address = this.form.addressLocation;\n            this.$rootScope.profileData.Location.City = this.form.cityLocation;\n            this.$rootScope.profileData.Location.State = this.form.stateLocation;\n            this.$rootScope.profileData.Location.ZipCode = this.form.zipCodeLocation;\n            this.$rootScope.profileData.Location.Position = this.form.positionLocation;\n            //FIXME: Cuando le doy guardar, se me vuelve a poner el\n            // marker en la posicion anterior. Asi que no se si esta linea sea\n            // necesaria. En userEditLocationPage.controller.ts la comente y no\n            // rompio nada.\n            //get position on Map\n            this.changeMapPosition();\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send markers teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form', function(event, args: app.models.user.Profile) {\n                self._fillForm(args);\n            });\n\n            /**\n            * Return Position\n            * @child - MapController\n            * @description - Parent (TeacherLocationSectionController) receive\n                             Child's event (MapController) with new position on\n                             map (lng, lat)\n            * @event\n            */\n            this.$scope.$on('Position', function(event, args) {\n                self.form.positionLocation.Lng = args.lng;\n                self.form.positionLocation.Lat = args.lat;\n            });\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherLocationSectionController.controllerId,\n                    TeacherLocationSectionController);\n\n}\n"]}