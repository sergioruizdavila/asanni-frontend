{"version":3,"sources":["app/pages/createTeacherPage/teacherLanguageSection/teacherLanguageSection.controller.ts"],"names":[],"mappings":"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","file":"../../../../../www/app/pages/createTeacherPage/teacherLanguageSection/teacherLanguageSection.controller.js","sourcesContent":["/**\n * TeacherLanguageSectionController\n * @description - Teacher Location Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherLanguageSectionController {\n        form: ITeacherLanguageForm;\n        validate: ITeacherLanguageValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherLanguageScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    export interface ITeacherLanguageForm {\n        native: Array<app.core.interfaces.IKeyValue>;\n        learn: Array<app.core.interfaces.IKeyValue>;\n        teach: Array<app.core.interfaces.IKeyValue>;\n    }\n\n    interface ITeacherLanguageValidate {\n        native: app.core.util.functionsUtil.IValid;\n        learn: app.core.util.functionsUtil.IValid;\n        teach: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherLanguageSectionController implements ITeacherLanguageSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherLanguageSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherLanguageForm;\n        validate: ITeacherLanguageValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        STEP2_STATE: string;\n        STEP4_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$timeout',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherLanguageScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $timeout: angular.ITimeoutService,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n            //CONSTANTS\n            this.STEP2_STATE = 'page.createTeacherPage.location';\n            this.STEP4_STATE = 'page.createTeacherPage.experience';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtil.progress(3, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            //Init form\n            this.form = {\n                native: [],\n                learn: [],\n                teach: []\n            };\n\n            // Build validate object fields\n            this.validate = {\n                native: {valid: true, message: ''},\n                teach: {valid: true, message: ''},\n                learn: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherLanguageSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Profile Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP4_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP2_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n\n            // Form is already filled (Just take native because it's required has a native language)\n            if(this.form.native.length === 0) {\n\n                let languageArray = this.getDataFromJson.getLanguagei18n();\n                for (let i = 0; i < languageArray.length; i++) {\n\n                    if(data.Languages.Native) {\n                        // Build user native language list\n                        for (let j = 0; j < data.Languages.Native.length; j++) {\n\n                            if(data.Languages.Native[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.native == null) {\n                                    this.form.native = [];\n                                    this.form.native.push(obj);\n                                } else {\n                                    this.form.native.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Learn) {\n                        // Build user learn language list\n                        for (let j = 0; j < data.Languages.Learn.length; j++) {\n\n                            if(data.Languages.Learn[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.learn == null) {\n                                    this.form.learn = [];\n                                    this.form.learn.push(obj);\n                                } else {\n                                    this.form.learn.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Teach) {\n                        // Build user teach language list\n                        for (let j = 0; j < data.Languages.Teach.length; j++) {\n\n                            if(data.Languages.Teach[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.teach == null) {\n                                    this.form.teach = [];\n                                    this.form.teach.push(obj);\n                                } else {\n                                    this.form.teach.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                }\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Native Languages List\n            let native_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.native = this.functionsUtil.validator(this.form.native, native_rules);\n            if(!this.validate.native.valid) {\n                formValid = this.validate.native.valid;\n            }\n\n            //Validate Learn Languages List\n            let learn_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.learn = this.functionsUtil.validator(this.form.learn, learn_rules);\n            if(!this.validate.learn.valid) {\n                formValid = this.validate.learn.valid;\n            }\n\n            //Validate Teach Languages List\n            let teach_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.teach = this.functionsUtil.validator(this.form.teach, teach_rules);\n            if(!this.validate.teach.valid) {\n                formValid = this.validate.teach.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (firstName, lastName, email, etc)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const NATIVE_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.native.title.text');\n            const NATIVE_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.native.description.text');\n            const LEARN_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.learn.title.text');\n            const LEARN_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.learn.description.text');\n            const TEACH_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.teach.title.text');\n            const TEACH_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.teach.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'native':\n                    this.helpText.title = NATIVE_TITLE;\n                    this.helpText.description = NATIVE_DESCRIPTION;\n                break;\n\n                case 'learn':\n                    this.helpText.title = LEARN_TITLE;\n                    this.helpText.description = LEARN_DESCRIPTION;\n                break;\n\n                case 'teach':\n                    this.helpText.title = TEACH_TITLE;\n                    this.helpText.description = TEACH_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addNewLanguages\n        * @description - open Modal in order to add a New Languages on Box\n        * @use - this._addNewLanguages();\n        * @function\n        * @return {void}\n        */\n        private _addNewLanguages(type, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalLanguagesTmpl,\n                controller: 'mainApp.components.modal.ModalLanguageController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            type: type,\n                            list: self.form[type]\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the languages options list\n            modalInstance.result.then(function (newLanguagesList) {\n                self.form[type] = newLanguagesList;\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _removeLanguage\n        * @description - remove a language element of options array\n        * @use - this._removeLanguage(3);\n        * @function\n        * @param {string} key - languages deselected by user\n        * @param {string} type - type of languages list (native, learn, teach)\n        * @return {void}\n        */\n        private _removeLanguage(key, type): void {\n             let newArray = this.form[type].filter(function(el) {\n                 return el.key !== key;\n             });\n\n             this.form[type] = newArray;\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n\n            if(this.form.native) {\n                let native = [];\n                for (let i = 0; i < this.form.native.length; i++) {\n                    native.push(this.form.native[i].key);\n                }\n                this.$rootScope.profileData.Languages.Native = native;\n            }\n\n            if(this.form.learn) {\n                let learn = [];\n                for (let i = 0; i < this.form.learn.length; i++) {\n                    learn.push(this.form.learn[i].key);\n                }\n                this.$rootScope.profileData.Languages.Learn = learn;\n            }\n\n            if(this.form.teach) {\n                let teach = [];\n                for (let i = 0; i < this.form.teach.length; i++) {\n                    teach.push(this.form.teach[i].key);\n                }\n                this.$rootScope.profileData.Languages.Teach = teach;\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send markers teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args: app.models.user.Profile) {\n                    self._fillForm(args);\n                }\n            );\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherLanguageSectionController.controllerId,\n                    TeacherLanguageSectionController);\n\n}\n"]}