{"version":3,"sources":["app/pages/countryProfilePage/countryProfilePage.controller.ts"],"names":[],"mappings":"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","file":"../../../../www/app/pages/countryProfilePage/countryProfilePage.controller.js","sourcesContent":["/**\n * CountryProfilePageController\n * @description - Landing Page Controller\n */\n\nmodule app.pages.countryProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ICountryProfilePageController {\n        activate: () => void;\n    }\n\n    export interface ILandingScope extends angular.IScope {\n\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ICountryParams extends ng.ui.IStateParamsService {\n        id: string;\n        aliasCountry: string;\n    }\n\n    interface ICountryQueryObject {\n        next: string;\n        previous: string;\n        count: number;\n        results: Array<app.models.country.Country>;\n    }\n\n    interface ICountrySchoolsQueryObject {\n        next: string;\n        previous: string;\n        count: number;\n        results: Array<app.models.school.School>;\n    }\n\n    interface ICountryTeachersQueryObject {\n        next: string;\n        previous: string;\n        count: number;\n        results: Array<app.models.teacher.Teacher>;\n    }\n\n    export interface ILandingError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class CountryProfilePageController implements ICountryProfilePageController {\n\n        static controllerId = 'mainApp.pages.countryProfilePage.CountryProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        isAuthenticated: boolean;\n        isTeacher: boolean;\n        data: app.models.country.Country;\n        private _slideout: boolean;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        _schoolsList: Array<app.models.school.School>;\n        _teachersList: Array<app.models.teacher.Teacher>;\n        private _countryContainers: Array<app.models.country.Country>;\n        private _currencyConverted: string;\n        shadowsSchoolLoading: boolean;\n        shadowsTeacherLoading: boolean;\n        noSchoolResult: boolean;\n        noTeacherResult: boolean;\n        loading: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$scope',\n                                 '$state',\n                                 '$stateParams',\n                                 'dataConfig',\n                                 'mainApp.auth.AuthService',\n                                 'mainApp.models.country.CountryService',\n                                 'mainApp.models.school.SchoolService',\n                                 'mainApp.models.teacher.TeacherService',\n                                 'mainApp.core.util.FunctionsUtilService',\n                                 '$rootScope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $scope: angular.IScope,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ICountryParams,\n            private dataConfig: IDataConfig,\n            private AuthService: app.auth.IAuthService,\n            private CountryService: app.models.country.ICountryService,\n            private SchoolService: app.models.school.ISchoolService,\n            private TeacherService: app.models.teacher.ITeacherService,\n            private FunctionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init profile school data\n            this.data = new app.models.country.Country();\n\n            //Init loading\n            this.loading = true;\n\n            //Init shadows school loading\n            this.shadowsSchoolLoading = true;\n\n            //Init shadows teacher loading\n            this.shadowsTeacherLoading = true;\n\n            //Init no school result message\n            this.noSchoolResult = false;\n\n            //Init no teacher result message\n            this.noTeacherResult = false;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Country Profile Page: ' + this.$stateParams.aliasCountry;\n            //VARIABLES\n            let self = this;\n            //LOG\n            DEBUG && console.log('countryProfilePage controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            // Get Country information\n            this.CountryService.getCountryByAlias(this.$stateParams.aliasCountry).then(\n                function(response) {\n                    self.data = new app.models.country.Country(response);\n                    //Build meta tags\n                    //self._buildMetaTags(self.data);\n\n                    // Get currency converted\n                    self._getCurrencyConverted(self.data.CurrencyCode);\n\n                    //Build Schools cards associated to this country\n                    self._buildSchoolCards(self.data);\n\n                    //Build Teachers cards associated to this country\n                    self._buildTeacherCards(self.data);\n\n                    self.loading = false;\n                }\n            );\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * _getResultLoading\n        * @description - this method return specific loading template\n        * based on type result (students, teachers, schools, etc)\n        * @use - this._getResultTemplate('student');\n        * @function\n        * @params {string} type - type of results list (students, teachers, schools, etc)\n        * @return {string} result template path\n        */\n        //TODO: Esta funciona esta repetida en searchPage, deberia crearse un\n        // servicio global, donde se encargue de crear este tipo de shadows\n        private _getResultLoading(type: string): string {\n            //CONSTANTS\n            const STUDENT_TYPE = 'student';\n            const TEACHER_TYPE = 'teacher';\n            const SCHOOL_TYPE = 'school';\n            /*********************************/\n\n            switch (type) {\n                case STUDENT_TYPE:\n                return 'app/pages/searchPage/studentResult/studentResult.html';\n                case TEACHER_TYPE:\n                return 'app/pages/searchPage/teacherLoading/teacherLoading.html';\n                case SCHOOL_TYPE:\n                return 'app/pages/searchPage/schoolLoading/schoolLoading.html';\n            }\n        }\n\n\n        _buildTeacherCards(country: app.models.country.Country): void {\n            //VARIABLES\n            let self = this;\n\n            this.TeacherService.getAllTeachersByCountry(country.Id).then(\n                function(response: ICountryTeachersQueryObject) {\n                    if(response.results.length > 0) {\n                        self._teachersList = response.results;\n                    } else {\n                        self.noTeacherResult = true;\n                    }\n                    self.shadowsTeacherLoading = false;\n                },\n                function(error) {\n                    //CONSTANTS\n                    const ERROR_MESSAGE = 'Error countryProfilePage.controller.js method: _buildTeacherCards ';\n                    Raven.captureMessage(ERROR_MESSAGE, error);\n                    self.shadowsTeacherLoading = false;\n                }\n            );\n        }\n\n\n        _buildSchoolCards(country: app.models.country.Country): void {\n            //VARIABLES\n            let self = this;\n\n            this.SchoolService.getAllSchoolsByCountry(country.Id).then(\n                function(response: ICountrySchoolsQueryObject) {\n                    if(response.results.length > 0) {\n                        self._schoolsList = response.results;\n                    } else {\n                        self.noSchoolResult = true;\n                    }\n\n                    self.shadowsSchoolLoading = false;\n                },\n                function(error) {\n                    //CONSTANTS\n                    const ERROR_MESSAGE = 'Error countryProfilePage.controller.js method: _buildSchoolCards ';\n                    Raven.captureMessage(ERROR_MESSAGE, error);\n                    self.shadowsSchoolLoading = false;\n                }\n            );\n        }\n\n\n\n        _getCurrencyConverted(code: string) {\n            //VARIABLES\n            let self = this;\n\n            this.FunctionsUtil.getCurrencyConverted(code).then(\n                function(response: string) {\n                    self._currencyConverted = response;\n                },\n                function(error) {\n                    //CONSTANTS\n                    const ERROR_MESSAGE = 'Error countryProfilePage.controller.js method: _getCurrencyConverted ';\n                    Raven.captureMessage(ERROR_MESSAGE, error);\n                    self._currencyConverted = '-';\n                }\n            );\n        }\n\n\n\n        /**\n        * _recommendTeacher\n        * @description - user could recommend a known teacher\n        * @use - this._recommendTeacher();\n        * @function\n        * @return {void}\n        */\n\n        _recommendTeacher(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Recommend Teacher from countryProfilePage: ' + this.$stateParams.aliasCountry;\n            //VARIABLES\n            let url = 'https://waysily.typeform.com/to/iAWFeg';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            window.open(url,'_blank');\n        }\n\n\n\n        /**\n        * _recommendSchool\n        * @description - user could recommend a known school\n        * @use - this._recommendTeacher();\n        * @function\n        * @return {void}\n        */\n\n        _recommendSchool(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Recommend School from countryProfilePage: ' + this.$stateParams.aliasCountry;\n            //VARIABLES\n            let url = 'https://waysily.typeform.com/to/q5uT0P';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            window.open(url,'_blank');\n        }\n\n\n\n        /**\n        * _joinAsSchool\n        * @description - user could join as a school\n        * @use - this._joinAsSchool();\n        * @function\n        * @return {void}\n        */\n\n        _joinAsSchool(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Join as a School from countryProfilePage: ' + this.$stateParams.aliasCountry;\n            //VARIABLES\n            let url = 'https://form.jotform.co/71177073983868';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            window.open(url,'_blank');\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.countryProfilePage')\n        .controller(CountryProfilePageController.controllerId, CountryProfilePageController);\n\n}\n"]}