{"version":3,"sources":["app/pages/teacherProfilePage/teacherProfilePage.controller.ts"],"names":[],"mappings":"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","file":"../../../../www/app/pages/teacherProfilePage/teacherProfilePage.controller.js","sourcesContent":["/**\n * TeacherProfilePageController\n * @description - Teacher Profile Page Controller\n */\n\nmodule app.pages.teacherProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherProfilePageController {\n        activate: () => void;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ITeacherParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherProfilePageController implements ITeacherProfilePageController {\n\n        static controllerId = 'mainApp.pages.teacherProfilePage.TeacherProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        mapConfig: components.map.IMapConfig;\n        marker: string;\n        nativeTooltipOptions: app.core.interfaces.ITooltipOptions;\n        isAuthenticated: boolean;\n        data: app.models.teacher.Teacher;\n        loading: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.auth.AuthService',\n            '$uibModal',\n            '$state',\n            '$stateParams',\n            'dataConfig',\n            '$filter'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private TeacherService: app.models.teacher.ITeacherService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private AuthService: app.auth.IAuthService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ITeacherParams,\n            private dataConfig: IDataConfig,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init profile teacher data\n            this.data = new app.models.teacher.Teacher();\n\n            //Init loading\n            this.loading = true;\n\n            //Assign marker map\n            this.marker = 'round';\n\n            //Init native tooltip\n            this._initNativeTooltip();\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Teacher Profile Page Id: ' + this.$stateParams.id;\n            //VARIABLES\n            let self = this;\n            //LOG\n            DEBUG && console.log('teacherProfilePage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            // Get Teacher information\n            this.TeacherService.getTeacherById(this.$stateParams.id).then(\n                function(response) {\n                    self.data = new app.models.teacher.Teacher(response);\n                    self.mapConfig = self.functionsUtil.buildMapConfig(\n                        [\n                            {\n                                id: self.data.Profile.Location.Position.Id,\n                                location: {\n                                    position: {\n                                        lat: parseFloat(self.data.Profile.Location.Position.Lat),\n                                        lng: parseFloat(self.data.Profile.Location.Position.Lng)\n                                    }\n                                }\n                            }\n                        ],\n                        'location-circle-map',\n                        {lat: parseFloat(self.data.Profile.Location.Position.Lat), lng: parseFloat(self.data.Profile.Location.Position.Lng)},\n                        null\n                    );\n                    self.loading = false;\n                }\n            );\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to sign up current user\n        * @use - this._openSignUpModal();\n        * @function\n        * @return {void}\n        */\n\n        private _openSignUpModal(): void {\n            let self = this;\n\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n        }\n\n\n\n        /**\n        * _initNativeTooltip\n        * @description - this method create a default Native Tooltip Option.\n        * @use - this._initNativeTooltip();\n        * @function\n        * @return {void}\n        */\n\n        private _initNativeTooltip(): void {\n            this.nativeTooltipOptions = {\n                placement: 'top',\n                animation: false,\n                class: 'ma-tooltip ma-tooltip--primary ma-tooltip--default'\n            };\n        }\n\n\n\n        /**\n        * goToConfirm\n        * @description - go to book a class with current teacher\n        * @use - this.goToConfirm();\n        * @function\n        * @return {void}\n        */\n\n        goToConfirm(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Book a Class';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL, {\n                \"teacher_id\": this.data.Id,\n                \"teacher_name\": this.data.Profile.FirstName + ' ' + this.data.Profile.LastName\n            });\n\n            //Validate if user is Authenticated\n            this.isAuthenticated = this.AuthService.isAuthenticated();\n\n            if(this.isAuthenticated) {\n                var url = 'https://waysily.typeform.com/to/NDPRAb';\n                window.open(url,'_blank');\n            } else {\n                this._openSignUpModal();\n            }\n\n\n        }\n\n\n\n        /**\n        * _assignNative\n        * @description - this method create a match between native language and\n        * teach language in order to mark it as a Native languages\n        * @use - this._assignNative(language);\n        * @function\n        * @param {string} language - current language on the ng-repeat loop\n        * @return {boolean} isNativeOfThisLanguage - He/She is native of this\n        * language\n        */\n\n        private _assignNative(language: string): boolean {\n            let native = this.data.Profile.Languages.Native;\n            let isNativeOfThisLanguage = false;\n\n            for (let i = 0; i < native.length; i++) {\n                if(language === native[i]) {\n                    isNativeOfThisLanguage = true;\n                    break;\n                }\n            }\n\n            return isNativeOfThisLanguage;\n        }\n\n\n\n        /**\n        * _assignNativeTooltip\n        * @description - this method create a tooltip on teacher native language\n        * @use - this._assignNativeTooltip(language);\n        * @function\n        * @param {string} language - current language on the ng-repeat loop\n        * @return {boolean} tooltipText - return tooltip text\n        */\n\n        private _assignNativeTooltip(language: string): string {\n            //CONSTANTS\n            const TOOLTIP_TEXT = this.$filter('translate')('%profile.teacher.native.lang.tooltip.text');\n            //VARIABLES\n            let firstName = this.data.Profile.FirstName;\n            let tooltipText = null;\n            let isNative = this._assignNative(language);\n\n            if(isNative) {\n                tooltipText = firstName + ' ' + TOOLTIP_TEXT;\n            }\n            return tooltipText;\n        }\n\n\n\n        /**\n        * _ratingTotalAverage\n        * @description - Calculate teacher rating average based on a ratings list given\n        * @use - this._ratingTotalAverage(ratingsArray);\n        * @function\n        * @param {Array<Object>} ratingsArr - list of rating objects\n        * @return {number} average - average value\n        */\n\n        private _ratingTotalAverage(ratingsArr: Array<Object>): number {\n            return this.functionsUtil.teacherRatingAverage(ratingsArr);\n        }\n\n\n\n        /**\n        * _ratingUnitAverage\n        * @description - Calculate teacher rating average per each\n        * criteria (methodology, communication, teaching)\n        * @use - this._ratingUnitAverage(language);\n        * @function\n        * @param {Array<Object>} ratingsArr - list of rating objects\n        * @return {number} average - average of type of criteria\n        */\n\n        private _ratingUnitAverage(ratingsArr: Array<Object>, type): number {\n            //VARIABLES\n            let average = 0;\n            let averageArr = [];\n            let ratings: Array<app.models.teacher.Rating> = [];\n\n            for (let i = 0; i < ratingsArr.length; i++) {\n                ratings.push(new app.models.teacher.Rating(ratingsArr[i]));\n                switch(type) {\n                    case 'methodology':\n                        averageArr.push(ratings[i].MethodologyValue);\n                        break;\n                    case 'communication':\n                        averageArr.push(ratings[i].CommunicationValue);\n                        break;\n                    case 'teaching':\n                        averageArr.push(ratings[i].TeachingValue);\n                        break;\n                }\n\n            }\n\n            average = this.functionsUtil.averageNumbersArray(averageArr);\n\n            return average;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.teacherProfilePage')\n        .controller(TeacherProfilePageController.controllerId, TeacherProfilePageController);\n\n}\n"]}