{"version":3,"sources":["app/pages/editProfile/editProfileMedia/editProfileMedia.controller.ts"],"names":[],"mappings":"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","file":"../../../../../www/app/pages/editProfile/editProfileMedia/editProfileMedia.controller.js","sourcesContent":["/**\n * EditProfileMediaController\n * @description - Edit User Basic info Profile Page Controller\n */\n\nmodule app.pages.editProfileMedia {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IEditProfileMediaController {\n        form: IEditProfileMediaForm;\n        validate: IEditProfileMediaValidate;\n        activate: () => void;\n        goToEditProfile: () => void;\n        goToEditLocation: () => void;\n    }\n\n    interface IEditProfileMediaForm {\n        avatar: File;\n        croppedDataUrl: string;\n        thumbnail: string;\n    }\n\n    interface IEditProfileMediaValidate {\n        avatar: app.core.util.functionsUtil.IValid;\n        thumbnail: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditProfileMediaController implements IEditProfileMediaController {\n\n        static controllerId = 'mainApp.pages.editProfile.EditProfileMediaController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditProfileMediaForm;\n        validate: IEditProfileMediaValidate;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.models.user.UserService',\n            'mainApp.core.s3Upload.S3UploadService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'Upload',\n            '$state',\n            '$filter',\n            '$timeout',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private userService: app.models.user.IUserService,\n            private S3UploadService: app.core.s3Upload.IS3UploadService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private Upload: app.core.interfaces.IUpload,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $timeout: angular.ITimeoutService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            //Init form\n            this.form = {\n                avatar: null,\n                croppedDataUrl: '',\n                thumbnail: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                avatar: {valid: true, message: ''},\n                thumbnail: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditProfileMedia controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Go to edit profile page\n        * @description this method is launched when user press 'Edit Profile'\n        * menu option\n        */\n        goToEditProfile(): void {\n            // Go to next page on calls stack\n            this.$state.go('page.editProfile.basicInfo');\n        }\n\n\n        /*\n        * Go to edit location page\n        * @description this method is launched when user press 'Edit Location' menu\n        * option\n        */\n        goToEditLocation(): void {\n            this.$state.go('page.editProfile.location');\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const DEFINED_ENUM = app.core.util.functionsUtil.Validation.Defined;\n            const PHOTO_MESSAGE = this.$filter('translate')('%create.teacher.photo.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Reset globalValidate\n            this.validate.globalValidate.valid = true;\n            this.validate.globalValidate.message = '';\n\n            //Validate photo\n            let avatar_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.avatar = this.functionsUtil.validator(this.form.avatar, avatar_rules);\n\n            //Validate thumbnail\n            let thumbnail_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.thumbnail = this.functionsUtil.validator(this.form.thumbnail, thumbnail_rules);\n\n            //If avatar image is not valid\n            if(!this.validate.avatar.valid) {\n                //If thumbnail image is not valid\n                if(!this.validate.thumbnail.valid) {\n                    this.validate.globalValidate.valid = false;\n                    this.validate.globalValidate.message = PHOTO_MESSAGE;\n                    formValid = this.validate.globalValidate.valid;\n                } else {\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n                }\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _resizeImage\n        * @description - resize image base on defaults parameters\n        * @use - this._resizeImage();\n        * @function\n        * @return {void}\n        */\n        private _resizeImage(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            //New file name\n            let newName = app.core.util.functionsUtil.FunctionsUtilService.generateGuid() + '.jpeg';\n            // Image Options\n            let options= {\n                width: 250,\n                height: 250,\n                quality: 1.0,\n                type: 'image/jpeg',\n                pattern:'.jpg',\n                restoreExif: false\n            };\n            // Build file base on cropped data image\n            let file = this.Upload.dataUrltoBlob(this.form.croppedDataUrl, newName);\n            /****************************************************/\n\n            // Resize image (change extension to jpeg, resize and quality)\n            return this.Upload.resize(file, options).then(function(resizedFile) {\n\n                // Upload resized file to Amazon S3\n                return self._uploadImage(resizedFile).then(function(result) {\n                    return result;\n                });\n\n            });\n\n        }\n\n\n\n        /**\n        * _uploadImage\n        * @description - upload resize image to Amazon S3\n        * @use - this._uploadImage(resizedFile);\n        * @function\n        * @param {File} resizedFile file object\n        * @return {void}\n        */\n        private _uploadImage(resizedFile): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n\n            return this.S3UploadService.upload(resizedFile).then(function (result) {\n\n                return result;\n\n            }, function (error) {\n\n                // Mark the error\n                DEBUG && console.error('error', error);\n                return error;\n\n            });\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(avatar): void {\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.Avatar = avatar;\n\n        }\n\n\n\n        /**\n        * saveImageSection\n        * @description - Update profile's avatar photo calling to save method\n        * @function\n        * @return void\n        */\n        saveImageSection(): void {\n            //VARIABLES\n            let self = this;\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n\n                this._resizeImage().then(\n                    function(result) {\n\n                        if(result.Location) {\n                            self._setDataModelFromForm(result.Location);\n                            self.$scope.$emit('Save Profile Data');\n                        } else {\n                            self.error = true;\n                        }\n\n                    }\n                );\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes User Basic Info Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n\n            /**\n            * Saved event\n            * @parent - EditProfileController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.form.avatar = self.saved ? null : self.form.avatar;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editProfile')\n        .controller(EditProfileMediaController.controllerId, EditProfileMediaController);\n\n}\n"]}