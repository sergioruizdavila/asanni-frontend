{"version":3,"sources":["app/pages/editProfile/editProfileBasicInfo/editProfileBasicInfo.controller.ts"],"names":[],"mappings":"AAKA,IAAO,GAAG,CAyrBT;AAzrBD,WAAO,GAAG;IAAC,IAAA,KAAK,CAyrBf;IAzrBU,WAAA,KAAK;QAAC,IAAA,oBAAoB,CAyrBpC;QAzrBgB,WAAA,oBAAoB,EAAC,CAAC;YAsDnC;gBAyCI,wCACY,UAAuB,EACvB,WAAyC,EACzC,eAA0E,EAC1E,aAAgE,EAChE,MAA2B,EAC3B,OAA+B,EAC/B,QAAiC,EACjC,SAAwC,EACxC,MAAsB,EACtB,UAAiD;oBATjD,eAAU,GAAV,UAAU,CAAa;oBACvB,gBAAW,GAAX,WAAW,CAA8B;oBACzC,oBAAe,GAAf,eAAe,CAA2D;oBAC1E,kBAAa,GAAb,aAAa,CAAmD;oBAChE,WAAM,GAAN,MAAM,CAAqB;oBAC3B,YAAO,GAAP,OAAO,CAAwB;oBAC/B,aAAQ,GAAR,QAAQ,CAAyB;oBACjC,cAAS,GAAT,SAAS,CAA+B;oBACxC,WAAM,GAAN,MAAM,CAAgB;oBACtB,eAAU,GAAV,UAAU,CAAuC;oBAEzD,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEjB,CAAC;gBAGO,8CAAK,GAAb;oBAEI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAG9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBAGpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBAGnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBAGnB,IAAI,CAAC,aAAa,GAAG,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;oBAG3C,IAAI,CAAC,YAAY,GAAG,EAAC,MAAM,EAAE,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAC,EAAC,CAAC;oBAGlD,IAAI,CAAC,UAAU,GAAG,EAAC,GAAG,EAAC,EAAC,KAAK,EAAC,EAAE,EAAC,EAAE,KAAK,EAAE,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,EAAC,CAAC;oBAGjF,IAAI,CAAC,IAAI,GAAG;wBACR,SAAS,EAAE,EAAE;wBACb,QAAQ,EAAE,EAAE;wBACZ,WAAW,EAAE,EAAE;wBACf,MAAM,EAAE,EAAE;wBACV,SAAS,EAAE,IAAI;wBACf,YAAY,EAAE,EAAE;wBAChB,SAAS,EAAE,EAAE;wBACb,KAAK,EAAE,EAAE;wBACT,MAAM,EAAE,EAAE;wBACV,KAAK,EAAE,EAAE;wBACT,KAAK,EAAE,EAAE;qBACZ,CAAC;oBAGF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;oBAGtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;oBACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAEtE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;oBAG3D,IAAI,CAAC,QAAQ,GAAG;wBACZ,SAAS,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBACrC,QAAQ,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBACpC,WAAW,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBACvC,MAAM,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBAClC,SAAS,EAAE;4BACP,GAAG,EAAC,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;4BAC9B,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;4BACjC,IAAI,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;4BAChC,KAAK,EAAE,IAAI;4BACX,OAAO,EAAE,EAAE;yBACd;wBACD,YAAY,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBACxC,SAAS,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBACrC,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBACjC,MAAM,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBAClC,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;wBACjC,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAC;qBACpC,CAAC;oBAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBAGD,iDAAQ,GAAR;oBAEI,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;oBAGhE,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAG1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;gBAWD,sDAAa,GAAb;oBACI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,wBAAwB,CAAC,CAAC;gBAC7C,CAAC;gBAQD,yDAAgB,GAAhB;oBACI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,2BAA2B,CAAC,CAAC;gBAChD,CAAC;gBAYO,kDAAS,GAAjB,UAAkB,IAA6B;oBAC3C,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACnC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;oBAEzC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;oBAG5C,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACxD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;oBAC/D,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,KAAK,cAAc,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAC7E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;oBAGlE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;oBAC3C,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACpC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBAG7B,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBAE/B,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;wBAC3D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAE5C,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;gCAEvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCAEpD,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wCACnD,IAAI,GAAG,GAAG,EAAC,GAAG,EAAC,IAAI,EAAE,KAAK,EAAC,EAAE,EAAC,CAAC;wCAC/B,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wCAC1C,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wCACnC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;4CAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;4CACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wCAC/B,CAAC;wCAAC,IAAI,CAAC,CAAC;4CACJ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wCAC/B,CAAC;oCACL,CAAC;gCAEL,CAAC;4BACL,CAAC;4BAED,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gCAEtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCAEnD,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wCAClD,IAAI,GAAG,GAAG,EAAC,GAAG,EAAC,IAAI,EAAE,KAAK,EAAC,EAAE,EAAC,CAAC;wCAC/B,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wCAC1C,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wCACnC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;4CACzB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;4CACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wCAC9B,CAAC;wCAAC,IAAI,CAAC,CAAC;4CACJ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wCAC9B,CAAC;oCACL,CAAC;gCAEL,CAAC;4BACL,CAAC;4BAED,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gCAEtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCAEnD,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wCAClD,IAAI,GAAG,GAAG,EAAC,GAAG,EAAC,IAAI,EAAE,KAAK,EAAC,EAAE,EAAC,CAAC;wCAC/B,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wCAC1C,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wCACnC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;4CACzB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;4CACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wCAC9B,CAAC;wCAAC,IAAI,CAAC,CAAC;4CACJ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wCAC9B,CAAC;oCACL,CAAC;gCAEL,CAAC;4BACL,CAAC;wBAEL,CAAC;oBAEL,CAAC;gBAEL,CAAC;gBAWO,+DAAsB,GAA9B;oBAEI,IAAM,SAAS,GAAG,CAA2C,CAAC;oBAC9D,IAAM,QAAQ,GAAG,CAA+C,CAAC;oBACjE,IAAM,UAAU,GAAG,CAA4C,CAAC;oBAChE,IAAM,UAAU,GAAG,CAA4C,CAAC;oBAChE,IAAM,WAAW,GAAG,CAA6C,CAAC;oBAClE,IAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,mEAAmE,CAAC,CAAC;oBAIzH,IAAI,SAAS,GAAG,IAAI,CAAC;oBAGrB,IAAI,WAAW,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;oBACzF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;oBAC9C,CAAC;oBAGD,IAAI,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;oBACtF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC/B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC7C,CAAC;oBAGD,IAAI,iBAAiB,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;oBAC7D,IAAI,OAAO,GAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;oBAC7D,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBAClC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;oBACrF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;wBAClC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;oBAChD,CAAC;oBAGD,IAAI,YAAY,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;oBACjG,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC7B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;oBAC3C,CAAC;oBAGD,IAAI,mBAAmB,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAC5D,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;oBAC3G,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;wBACpC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;wBAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;wBAClE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,iBAAiB,CAAC;oBACxD,CAAC;oBAGD,IAAI,qBAAqB,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBACpD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;oBAChH,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBACtC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;wBAChD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;wBACpE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,iBAAiB,CAAC;oBACxD,CAAC;oBAGD,IAAI,oBAAoB,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAC7D,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;oBAC9G,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACrC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;wBAC/C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;wBACnE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,iBAAiB,CAAC;oBACxD,CAAC;oBAGD,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK;wBACjC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK;wBACnC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;wBACrC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;oBAC5C,CAAC;oBAGD,IAAI,mBAAmB,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBAClD,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;oBACxG,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;wBACnC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;oBACjD,CAAC;oBAGD,IAAI,gBAAgB,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBAC/C,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;oBAC9F,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;oBAC9C,CAAC;oBAGD,IAAI,WAAW,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBAC1C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACjF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;oBAC1C,CAAC;oBAED,MAAM,CAAC,SAAS,CAAC;gBACrB,CAAC;gBAWO,+DAAsB,GAA9B;oBAEI,IAAM,SAAS,GAAG,CAA2C,CAAC;oBAC9D,IAAM,QAAQ,GAAG,CAA+C,CAAC;oBACjE,IAAM,UAAU,GAAG,CAA4C,CAAC;oBAChE,IAAM,UAAU,GAAG,CAA4C,CAAC;oBAChE,IAAM,WAAW,GAAG,CAA6C,CAAC;oBAClE,IAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,mEAAmE,CAAC,CAAC;oBAIzH,IAAI,SAAS,GAAG,IAAI,CAAC;oBAGrB,IAAI,YAAY,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;oBACpF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC7B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;oBAC3C,CAAC;oBAGD,IAAI,WAAW,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;oBAC1C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACjF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;oBAC1C,CAAC;oBAED,MAAM,CAAC,SAAS,CAAC;gBACrB,CAAC;gBAWO,yDAAgB,GAAxB,UAAyB,IAAI,EAAE,MAAM;oBACjC,IAAI,IAAI,GAAG,IAAI,CAAC;oBAEhB,IAAI,OAAO,GAAmC;wBAC1C,SAAS,EAAE,KAAK;wBAChB,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,KAAK;wBACf,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,kBAAkB;wBAC/C,UAAU,EAAE,wDAAwD;wBACpE,OAAO,EAAE;4BAEL,YAAY,EAAE;gCACV,MAAM,CAAC;oCACH,IAAI,EAAE,IAAI;oCACV,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;iCACxB,CAAA;4BACL,CAAC;yBACJ;qBACJ,CAAC;oBAEF,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAGjD,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,gBAAgB;wBAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC;oBACvC,CAAC,EAAE;wBACC,OAAO,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;oBACtD,CAAC,CAAC,CAAC;oBAEH,MAAM,CAAC,cAAc,EAAE,CAAC;gBAC5B,CAAC;gBAaO,wDAAe,GAAvB,UAAwB,GAAG,EAAE,IAAI;oBAC5B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAS,EAAE;wBAC7C,MAAM,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC;oBAC1B,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;gBAChC,CAAC;gBAWO,8DAAqB,GAA7B;oBAEI,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CACvB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EACzB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACpD,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC/C,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBAG1C,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;oBAErC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC1D,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;oBAChE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC;oBAChD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,GAAG,aAAa,CAAC;oBACtD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;oBACjE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBACxD,CAAC;gBAYO,6DAAoB,GAA5B;oBAEI,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAClB,IAAI,MAAM,GAAG,EAAE,CAAC;wBAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBACzC,CAAC;wBACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;oBAC1D,CAAC;oBAED,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjB,IAAI,KAAK,GAAG,EAAE,CAAC;wBACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC9C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBACvC,CAAC;wBACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;oBACxD,CAAC;oBAED,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjB,IAAI,KAAK,GAAG,EAAE,CAAC;wBACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC9C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBACvC,CAAC;wBACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;oBACxD,CAAC;gBACL,CAAC;gBASD,6DAAoB,GAApB;oBAEI,IAAI,IAAI,GAAG,IAAI,CAAC;oBAEhB,IAAI,SAAS,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAE9C,EAAE,CAAA,CAAC,SAAS,CAAC,CAAC,CAAC;wBAEX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,IAAI,CAAC,qBAAqB,EAAE,CAAC;wBAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBAC3C,CAAC;gBACL,CAAC;gBAUD,6DAAoB,GAApB;oBAEI,IAAI,IAAI,GAAG,IAAI,CAAC;oBAGhB,IAAI,SAAS,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAE9C,EAAE,CAAA,CAAC,SAAS,CAAC,CAAC,CAAC;wBAEX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBAC3C,CAAC;gBACL,CAAC;gBAYO,2DAAkB,GAA1B;oBAEI,IAAI,IAAI,GAAG,IAAI,CAAC;oBAShB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,EACpC,UAAS,KAAK,EAAE,IAAI;wBAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACnB,EAAE,CAAA,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;4BAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBACzB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBACtB,CAAC;oBACL,CAAC,CACJ,CAAC;oBASF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EACnB,UAAS,KAAK,EAAE,IAAI;wBAEhB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;wBACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBAElB,IAAI,CAAC,QAAQ,CAAC;4BACV,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACvB,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBAC/B,CAAC,CACJ,CAAC;gBACN,CAAC;gBAxnBM,2CAAY,GAAG,0DAA0D,CAAC;gBAuBnE,sCAAO,GAAG;oBACpB,YAAY;oBACZ,iCAAiC;oBACjC,4CAA4C;oBAC5C,wCAAwC;oBACxC,QAAQ;oBACR,SAAS;oBACT,UAAU;oBACV,WAAW;oBACX,QAAQ;oBACR,YAAY;iBACf,CAAC;gBAwlBN,qCAAC;YAAD,CA5nBA,AA4nBC,IAAA;YA5nBY,mDAA8B,iCA4nB1C,CAAA;YAGD,OAAO;iBACF,MAAM,CAAC,2BAA2B,CAAC;iBACnC,UAAU,CAAC,8BAA8B,CAAC,YAAY,EAAE,8BAA8B,CAAC,CAAC;QAEjG,CAAC,EAzrBgB,oBAAoB,GAApB,0BAAoB,KAApB,0BAAoB,QAyrBpC;IAAD,CAAC,EAzrBU,KAAK,GAAL,SAAK,KAAL,SAAK,QAyrBf;AAAD,CAAC,EAzrBM,GAAG,KAAH,GAAG,QAyrBT","file":"../../../../../www/app/pages/editProfile/editProfileBasicInfo/editProfileBasicInfo.controller.js","sourcesContent":["/**\n * EditProfileBasicInfoController\n * @description - Edit User Basic info Profile Page Controller\n */\n\nmodule app.pages.editProfileBasicInfo {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditProfileBasicInfoController {\n        form: IEditProfileBasicInfoForm;\n        validate: IEditProfileBasicInfoValidate;\n        activate: () => void;\n        goToEditMedia: () => void;\n        goToEditLocation: () => void;\n    }\n\n    interface IGenderForm {\n        gender: app.core.interfaces.IDataFromJsonI18n;\n    }\n\n    interface IBirthdateForm {\n        day: app.core.interfaces.ISelectListElement;\n        month: app.core.interfaces.IDataFromJsonI18n;\n        year: app.core.interfaces.ISelectListElement;\n    }\n\n    interface IEditProfileBasicInfoForm {\n        firstName: string;\n        lastName: string;\n        phoneNumber: string;\n        gender: string;\n        birthDate: string;\n        countryBirth: string;\n        cityBirth: string;\n        about: string;\n        native: Array<app.core.interfaces.IKeyValue>;\n        learn: Array<app.core.interfaces.IKeyValue>;\n        teach: Array<app.core.interfaces.IKeyValue>;\n    }\n\n    interface IEditProfileBasicInfoValidate {\n        firstName: app.core.util.functionsUtil.IValid;\n        lastName: app.core.util.functionsUtil.IValid;\n        phoneNumber: app.core.util.functionsUtil.IValid;\n        gender: app.core.util.functionsUtil.IValid;\n        birthDate: app.core.interfaces.IBirthdateValidate;\n        countryBirth: app.core.util.functionsUtil.IValid;\n        cityBirth: app.core.util.functionsUtil.IValid;\n        about: app.core.util.functionsUtil.IValid;\n        native: app.core.util.functionsUtil.IValid;\n        learn: app.core.util.functionsUtil.IValid;\n        teach: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditProfileBasicInfoController implements IEditProfileBasicInfoController {\n\n        static controllerId = 'mainApp.pages.editProfile.EditProfileBasicInfoController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditProfileBasicInfoForm;\n        validate: IEditProfileBasicInfoValidate;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        listMonths: Array<app.core.interfaces.IDataFromJsonI18n>;\n        listGenders: Array<app.core.interfaces.IDataFromJsonI18n>;\n        listDays: Array<app.core.interfaces.ISelectListElement>;\n        listYears: Array<app.core.interfaces.ISelectListElement>;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        dateObject: IBirthdateForm;\n        genderObject: IGenderForm;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.models.user.UserService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$timeout',\n            '$uibModal',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private userService: app.models.user.IUserService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $timeout: angular.ITimeoutService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            // Gender Select List Structure\n            this.genderObject = {gender: {code:'', value:''}};\n\n            // Birthdate Select List Structure\n            this.dateObject = {day:{value:''}, month: {code:'', value:''}, year: {value:''}};\n\n            //Init form\n            this.form = {\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n                gender: '',\n                birthDate: null,\n                countryBirth: '',\n                cityBirth: '',\n                about: '',\n                native: [],\n                learn: [],\n                teach: []\n            };\n\n            // Build Months, Days and Years select lists\n            this.listMonths = this.getDataFromJson.getMonthi18n();\n            //TODO: podemos optimizar esto ya que en listMonth ya traigo el json,\n            // no es necesario volverlo a traer aqui.\n            this.listGenders = this.getDataFromJson.getSexi18n();\n            this.listDays = this.functionsUtil.buildNumberSelectList(1, 31);\n            this.listYears = this.functionsUtil.buildNumberSelectList(1916, 2017);\n            // Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Build validate object fields\n            this.validate = {\n                firstName: {valid: true, message: ''},\n                lastName: {valid: true, message: ''},\n                phoneNumber: {valid: true, message: ''},\n                gender: {valid: true, message: ''},\n                birthDate: {\n                    day:{valid: true, message: ''},\n                    month: {valid: true, message: ''},\n                    year: {valid: true, message: ''},\n                    valid: true,\n                    message: ''\n                },\n                countryBirth: {valid: true, message: ''},\n                cityBirth: {valid: true, message: ''},\n                about: {valid: true, message: ''},\n                native: {valid: true, message: ''},\n                teach: {valid: true, message: ''},\n                learn: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditProfileBasicInfo controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE USER INFO\n            this._fillForm(this.$rootScope.profileData);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Go to edit media page\n        * @description this method is launched when user press 'Edit Photo' menu\n        * option\n        */\n        goToEditMedia(): void {\n            this.$state.go('page.editProfile.media');\n        }\n\n\n        /*\n        * Go to edit location page\n        * @description this method is launched when user press 'Edit Location' menu\n        * option\n        */\n        goToEditLocation(): void {\n            this.$state.go('page.editProfile.location');\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n            this.form.firstName = data.FirstName;\n            this.form.lastName = data.LastName;\n            this.form.phoneNumber = data.PhoneNumber;\n            //Charge Sex on select List\n            this.genderObject.gender.code = data.Gender;\n\n            //Build birthdate (Charge on select List)\n            let date = this.functionsUtil.splitDate(data.BirthDate);\n            this.dateObject.day.value = date.day ? parseInt(date.day) : '';\n            this.dateObject.month.code = date.month !== 'Invalid date' ? date.month : '';\n            this.dateObject.year.value = date.year ? parseInt(date.year) : '';\n\n            //Charge Country on select List\n            this.countryObject.code = data.BornCountry;\n            this.form.cityBirth = data.BornCity;\n            this.form.about = data.About;\n\n            // Form is already filled (Just take native because it's required has a native language)\n            if(this.form.native.length === 0) {\n\n                let languageArray = this.getDataFromJson.getLanguagei18n();\n                for (let i = 0; i < languageArray.length; i++) {\n\n                    if(data.Languages.Native) {\n                        // Build user native language list\n                        for (let j = 0; j < data.Languages.Native.length; j++) {\n\n                            if(data.Languages.Native[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.native == null) {\n                                    this.form.native = [];\n                                    this.form.native.push(obj);\n                                } else {\n                                    this.form.native.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Learn) {\n                        // Build user learn language list\n                        for (let j = 0; j < data.Languages.Learn.length; j++) {\n\n                            if(data.Languages.Learn[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.learn == null) {\n                                    this.form.learn = [];\n                                    this.form.learn.push(obj);\n                                } else {\n                                    this.form.learn.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Teach) {\n                        // Build user teach language list\n                        for (let j = 0; j < data.Languages.Teach.length; j++) {\n\n                            if(data.Languages.Teach[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.teach == null) {\n                                    this.form.teach = [];\n                                    this.form.teach.push(obj);\n                                } else {\n                                    this.form.teach.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                }\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateBasicInfoForm\n        * @description - Validate each field on basic info's form\n        * @use - this._validateBasicInfoForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateBasicInfoForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate First Name field\n            let first_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.firstName = this.functionsUtil.validator(this.form.firstName, first_rules);\n            if(!this.validate.firstName.valid) {\n                formValid = this.validate.firstName.valid;\n            }\n\n            //Validate Last Name field\n            let last_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.lastName = this.functionsUtil.validator(this.form.lastName, last_rules);\n            if(!this.validate.lastName.valid) {\n                formValid = this.validate.lastName.valid;\n            }\n\n            //Validate Phone Number field\n            let phoneNumber_rules = [NULL_ENUM, EMPTY_ENUM, NUMBER_ENUM];\n            let onlyNum: any = this.form.phoneNumber.replace(/\\D+/g, \"\");\n            onlyNum = parseInt(onlyNum) || '';\n            this.validate.phoneNumber = this.functionsUtil.validator(onlyNum, phoneNumber_rules);\n            if(!this.validate.phoneNumber.valid) {\n                formValid = this.validate.phoneNumber.valid;\n            }\n\n            //Validate Sex field\n            let gender_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.gender = this.functionsUtil.validator(this.genderObject.gender.code, gender_rules);\n            if(!this.validate.gender.valid) {\n                formValid = this.validate.gender.valid;\n            }\n\n            //Validate 'Day' Birth Date fields\n            let day_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.day = this.functionsUtil.validator(this.dateObject.day.value, day_birthdate_rules);\n            if(!this.validate.birthDate.day.valid) {\n                formValid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Month' Birth Date fields\n            let month_birthdate_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.birthDate.month = this.functionsUtil.validator(this.dateObject.month.code, month_birthdate_rules);\n            if(!this.validate.birthDate.month.valid) {\n                formValid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Year' Birth Date fields\n            let year_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.year = this.functionsUtil.validator(this.dateObject.year.value, year_birthdate_rules);\n            if(!this.validate.birthDate.year.valid) {\n                formValid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Clean error message if birthdate is valid\n            if(this.validate.birthDate.day.valid &&\n               this.validate.birthDate.month.valid &&\n               this.validate.birthDate.year.valid) {\n                   this.validate.birthDate.valid = true;\n                   this.validate.birthDate.message = '';\n            }\n\n            //Validate Country Birth field\n            let country_birth_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.countryBirth = this.functionsUtil.validator(this.countryObject.code, country_birth_rules);\n            if(!this.validate.countryBirth.valid) {\n                formValid = this.validate.countryBirth.valid;\n            }\n\n            //Validate City Birth field\n            let city_birth_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.cityBirth = this.functionsUtil.validator(this.form.cityBirth, city_birth_rules);\n            if(!this.validate.cityBirth.valid) {\n                formValid = this.validate.cityBirth.valid;\n            }\n\n            //Validate About me field\n            let about_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.about = this.functionsUtil.validator(this.form.about, about_rules);\n            if(!this.validate.about.valid) {\n                formValid = this.validate.about.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _validateLanguagesForm\n        * @description - Validate each field on languages' form\n        * @use - this._validateLanguagesForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateLanguagesForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Native Languages List\n            let native_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.native = this.functionsUtil.validator(this.form.native, native_rules);\n            if(!this.validate.native.valid) {\n                formValid = this.validate.native.valid;\n            }\n\n            //Validate Learn Languages List\n            let learn_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.learn = this.functionsUtil.validator(this.form.learn, learn_rules);\n            if(!this.validate.learn.valid) {\n                formValid = this.validate.learn.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _addNewLanguages\n        * @description - open Modal in order to add a New Languages on Box\n        * @use - this._addNewLanguages();\n        * @function\n        * @return {void}\n        */\n        private _addNewLanguages(type, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalLanguagesTmpl,\n                controller: 'mainApp.components.modal.ModalLanguageController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            type: type,\n                            list: self.form[type]\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the languages options list\n            modalInstance.result.then(function (newLanguagesList) {\n                self.form[type] = newLanguagesList;\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _removeLanguage\n        * @description - remove a language element of options array\n        * @use - this._removeLanguage(3);\n        * @function\n        * @param {string} key - languages deselected by user\n        * @param {string} type - type of languages list (native, learn, teach)\n        * @return {void}\n        */\n        private _removeLanguage(key, type): void {\n             let newArray = this.form[type].filter(function(el) {\n                 return el.key !== key;\n             });\n\n             this.form[type] = newArray;\n        }\n\n\n\n        /**\n        * _setBasicInfoFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._setBasicInfoFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setBasicInfoFromForm(): void {\n            //VARIABLES\n            let dateFormatted = this.functionsUtil.joinDate(\n                                    this.dateObject.day.value,\n                                    this.dateObject.month.code,\n                                    this.dateObject.year.value);\n            let genderCode = this.genderObject.gender.code;\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryBirth = countryCode;\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.FirstName = this.form.firstName;\n            this.$rootScope.profileData.LastName = this.form.lastName;\n            this.$rootScope.profileData.PhoneNumber = this.form.phoneNumber;\n            this.$rootScope.profileData.Gender = genderCode;\n            this.$rootScope.profileData.BirthDate = dateFormatted;\n            this.$rootScope.profileData.BornCountry = this.form.countryBirth;\n            this.$rootScope.profileData.BornCity = this.form.cityBirth;\n            this.$rootScope.profileData.About = this.form.about;\n        }\n\n\n\n        /**\n        * _setLanguageFromForm\n        * @description - get languages data from form's input\n        * in order to put it on $parent.profileData\n        * @use - this._setLanguageFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setLanguageFromForm(): void {\n\n            if(this.form.native) {\n                let native = [];\n                for (let i = 0; i < this.form.native.length; i++) {\n                    native.push(this.form.native[i].key);\n                }\n                this.$rootScope.profileData.Languages.Native = native;\n            }\n\n            if(this.form.learn) {\n                let learn = [];\n                for (let i = 0; i < this.form.learn.length; i++) {\n                    learn.push(this.form.learn[i].key);\n                }\n                this.$rootScope.profileData.Languages.Learn = learn;\n            }\n\n            if(this.form.teach) {\n                let teach = [];\n                for (let i = 0; i < this.form.teach.length; i++) {\n                    teach.push(this.form.teach[i].key);\n                }\n                this.$rootScope.profileData.Languages.Teach = teach;\n            }\n        }\n\n\n        /**\n        * saveBasicInfoSection\n        * @description - Update profile's basic data calling to save method\n        * @function\n        * @return void\n        */\n        saveBasicInfoSection(): void {\n            //VARIABLES\n            let self = this;\n            //Validate data form\n            let formValid = this._validateBasicInfoForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setBasicInfoFromForm();\n                this.$scope.$emit('Save Profile Data');\n            }\n        }\n\n\n\n        /**\n        * saveLanguagesSection\n        * @description - Update profile's languages data calling to save method\n        * @function\n        * @return void\n        */\n        saveLanguagesSection(): void {\n            //VARIABLES\n            let self = this;\n\n            //Validate data form\n            let formValid = this._validateLanguagesForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setLanguageFromForm();\n                this.$scope.$emit('Save Profile Data');\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes User Basic Info Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - EditUserController\n            * @description - Parent send user profile data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditProfileController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editProfile')\n        .controller(EditProfileBasicInfoController.controllerId, EditProfileBasicInfoController);\n\n}\n"]}