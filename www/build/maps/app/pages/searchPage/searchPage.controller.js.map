{"version":3,"sources":["app/pages/searchPage/searchPage.controller.ts"],"names":[],"mappings":"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","file":"../../../../www/app/pages/searchPage/searchPage.controller.js","sourcesContent":["/**\n * SearchPageController\n * @description - Search Page Controller\n */\n\nmodule app.pages.searchPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface ISearchPageController {\n        error: ISearchPageError;\n        activate: () => void;\n    }\n\n    interface ISearchPageError {\n        message: string;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ISearchPageParams extends ng.ui.IStateParamsService {\n        country: string;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SearchPageController implements ISearchPageController {\n\n        static controllerId = 'mainApp.pages.searchPage.SearchPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        error: ISearchPageError;\n        mapConfig: components.map.IMapConfig;\n        data: Array<app.models.student.Student>;\n        type: string;\n        VALIDATED: string;\n        rightLoading: boolean;\n        leftLoading: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.student.StudentService',\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.models.school.SchoolService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$stateParams',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$timeout'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private StudentService: app.models.student.IStudentService,\n            private TeacherService: app.models.teacher.ITeacherService,\n            private SchoolService: app.models.school.ISchoolService,\n            private FunctionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ISearchPageParams,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $rootScope: angular.IRootScopeService,\n            private $timeout: angular.ITimeoutService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //TODO: Buscar una forma de crear un Enum global, donde no tenga que\n            // hacer esto cada vez que quiera usar un filtro\n            //GLOBAL CONSTANTS\n            this.VALIDATED = 'VA';\n\n            //Init users list\n            this.data = [];\n\n            //Type of results (student, teacher, school)\n            this.type = 'teacher';\n\n            //Init right loading\n            this.rightLoading = true;\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Search Page';\n            //VARIABLES\n            let self = this;\n            //LOG\n            DEBUG && console.log('searchPage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //Get All Teacher of this zone (Default results)\n            this.TeacherService.getAllTeachersByStatus(this.VALIDATED).then(\n                function(response: app.models.teacher.ITeacherQueryObject) {\n\n                    self.type = 'teacher';\n                    self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                        response.results,\n                        'search-map',\n                        null,\n                        6\n                    );\n\n                    /*\n                    * Send event to child (MapController) in order to It draws\n                    * each Marker on the Map\n                    */\n                    //LEGACY\n                    //self.$scope.$broadcast('BuildMarkers', self.mapConfig);\n                    self.$scope.$broadcast('BuildMarkers', {mapConfig: self.mapConfig, typeOfMarker: 'round'});\n\n                    self.data = self.FunctionsUtilService.splitToColumns(response.results, 2);\n\n                    self.$timeout(function(){\n                        self.rightLoading = false;\n                    });\n\n                    //Center Map on Country selected\n                    if(self.$stateParams.country) {\n                        self.$timeout(function(){\n                            self._searchByCountry(self.$stateParams.country);\n                        });\n                    }\n                }\n            );\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _searchByCountry\n        * @description - TODO: Este metodo es temporal, en realidad no deberia\n        * buscar por un pais en particular, sino con la direccion que el user\n        * especifique en el buscador. Dejar este metodo hasta cuando sea necesarios\n        * implementar el buscador completo\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _searchByCountry(country): void {\n            //VARIABLES\n            let self = this;\n\n            if(country == 'Colombia') {\n                let location = {\n                    country: country,\n                    city: 'Medellin',\n                    address: 'Transversal 31Sur #32B-64'\n                };\n                /************************************/\n\n                this.$timeout(function(){\n                    self.$rootScope.$broadcast('PositionCountry', location);\n                });\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Search Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Students event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to get\n                             students list from server\n            * @event\n            */\n\n            this.$scope.$on('Students', function(event, args) {\n                //Get All Users of this zone\n                self.StudentService.getAllStudents().then(\n                    function(response: Array<app.models.student.Student>) {\n\n                        self.type = 'student';\n                        self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                            response,\n                            'search-map',\n                            {lat: 6.175434,lng: -75.583329},\n                            6\n                        );\n\n                        /*\n                        * Send event to child (MapController) in order to It draws\n                        * each Marker on the Map\n                        */\n                        self.$scope.$broadcast('BuildMarkers', {mapConfig: self.mapConfig, typeOfMarker: 'round'});\n\n                        self.data = self.FunctionsUtilService.splitToColumns(response, 2);\n                    }\n                );\n            });\n\n\n            /**\n            * Teachers event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to get\n                             teachers list from server\n            * @event\n            */\n\n            this.$scope.$on('Teachers', function(event, args) {\n\n                //Init left loading\n                self.leftLoading = true;\n\n                //Get All Teachers of this zone\n                self.TeacherService.getAllTeachersByStatus(self.VALIDATED).then(\n                    function(response: app.models.teacher.ITeacherQueryObject) {\n\n                        self.type = 'teacher';\n                        self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                            response.results,\n                            'search-map',\n                            null,\n                            6\n                        );\n\n                        self.leftLoading = false;\n\n                        /*\n                        * Send event to child (MapController) in order to It draws\n                        * each Marker on the Map\n                        */\n                        self.$scope.$broadcast('BuildMarkers', {mapConfig: self.mapConfig, typeOfMarker: 'round'});\n\n                        self.data = self.FunctionsUtilService.splitToColumns(response.results, 2);\n                    }\n                );\n            });\n\n\n            /**\n            * Schools event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to get\n                             schools list from server\n            * @event\n            */\n\n            this.$scope.$on('Schools', function(event, args) {\n\n                //Init left loading\n                self.leftLoading = true;\n\n                //Get All Schools of this zone\n                self.SchoolService.getAllSchools().then(\n                    function(response: app.models.school.ISchoolQueryObject) {\n\n                        self.type = 'school';\n                        self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                            response.results,\n                            'search-map',\n                            {lat: 6.175434,lng: -75.583329},\n                            6\n                        );\n\n                        self.leftLoading = false;\n\n                        /*\n                        * Send event to child (MapController) in order to It draws\n                        * each Marker on the Map\n                        */\n                        self.$scope.$broadcast('BuildMarkers', {mapConfig: self.mapConfig, typeOfMarker: 'long'});\n\n                        self.data = self.FunctionsUtilService.splitToColumns(response.results, 2);\n                    }\n                );\n            });\n\n\n            /**\n            * SelectContainer event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to selected\n                             specific result container\n            * @event\n            */\n\n            this.$scope.$on('SelectContainer', function(event, args) {\n                //CONSTANTS\n                const hoverClass = 'ma-box--border-hover';\n                //VARIABLES\n                let containerId = '#container-' + args;\n\n                let containers = document.getElementsByClassName(hoverClass);\n\n                for (let i = 0; i < containers.length; i++) {\n                    containers[i].classList.remove(hoverClass);\n                }\n\n                let containerClasses = document.querySelector(containerId).classList;\n                containerClasses.add(hoverClass);\n                document.querySelector(containerId).scrollIntoView({ behavior: 'smooth' });\n            });\n\n\n            /**\n            * SearchCountry event\n            * @parent - HeaderController\n            * @description - Parent (HeaderController) send event\n                             (SearchPageController) in order to change map\n                             center position\n            * @event\n            */\n\n            this.$scope.$on('SearchCountry', function(event, args) {\n                self._searchByCountry(args);\n            });\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.searchPage')\n        .controller(SearchPageController.controllerId, SearchPageController);\n\n}\n"]}