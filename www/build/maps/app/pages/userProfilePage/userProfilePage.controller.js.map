{"version":3,"sources":["app/pages/userProfilePage/userProfilePage.controller.ts"],"names":[],"mappings":"AAKA,IAAO,GAAG,CAkJT;AAlJD,WAAO,GAAG;IAAC,IAAA,KAAK,CAkJf;IAlJU,WAAA,KAAK;QAAC,IAAA,eAAe,CAkJ/B;QAlJgB,WAAA,eAAe,EAAC,CAAC;YAmC9B;gBAyBI,mCACY,WAAyC,EACzC,MAA2B,EAC3B,YAAqB,EACrB,OAA+B,EAC/B,MAAyB;oBAJzB,gBAAW,GAAX,WAAW,CAA8B;oBACzC,WAAM,GAAN,MAAM,CAAqB;oBAC3B,iBAAY,GAAZ,YAAY,CAAS;oBACrB,YAAO,GAAP,OAAO,CAAwB;oBAC/B,WAAM,GAAN,MAAM,CAAmB;oBAEjC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEjB,CAAC;gBAGO,yCAAK,GAAb;oBAGI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBAGjB,IAAI,CAAC,IAAI,GAAG;wBACR,QAAQ,EAAE,EAAE;wBACZ,KAAK,EAAE,EAAE;qBACZ,CAAC;oBAEF,IAAI,CAAC,KAAK,GAAG;wBACT,OAAO,EAAE,EAAE;qBACd,CAAC;oBAGF,IAAI,CAAC,SAAS,GAAG;wBACb,IAAI,EAAE,cAAc;wBACpB,IAAI,EAAE,IAAI;qBACb,CAAC;oBAGF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBAGjB,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG;wBAC/B,OAAO,EAAE,MAAM;wBACf,gBAAgB,EAAE,mBAAmB;qBACxC,CAAC;oBAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBAGD,4CAAQ,GAAR;oBAEI,IAAI,IAAI,GAAG,IAAI,CAAC;oBAEhB,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;oBAElD,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAC1D,UAAS,QAAQ;wBACb,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACtD,CAAC,CACJ,CAAC;gBACN,CAAC;gBAMD,6CAAS,GAAT,UAAW,OAAO,EAAE,OAAO;oBACvB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;gBAED,gDAAY,GAAZ,UAAc,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU;oBACvD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;oBACtD,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;gBACrC,CAAC;gBAED,+CAAW,GAAX;oBAGI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,8BAA8B,CAAC,CAAC;gBACnD,CAAC;gBApGM,sCAAY,GAAG,yDAAyD,CAAC;gBAalE,iCAAO,GAAG;oBACpB,iCAAiC;oBACjC,QAAQ;oBACR,cAAc;oBACd,SAAS;oBACT,QAAQ,CAAC,CAAC;gBAoFlB,gCAAC;YAAD,CAxGA,AAwGC,IAAA;YAxGY,yCAAyB,4BAwGrC,CAAA;YAGD,OAAO;iBACF,MAAM,CAAC,+BAA+B,CAAC;iBACvC,UAAU,CAAC,yBAAyB,CAAC,YAAY,EAAE,yBAAyB,CAAC,CAAC;QAEvF,CAAC,EAlJgB,eAAe,GAAf,qBAAe,KAAf,qBAAe,QAkJ/B;IAAD,CAAC,EAlJU,KAAK,GAAL,SAAK,KAAL,SAAK,QAkJf;AAAD,CAAC,EAlJM,GAAG,KAAH,GAAG,QAkJT","file":"../../../../www/app/pages/userProfilePage/userProfilePage.controller.js","sourcesContent":["/**\n * UserProfilePageController\n * @description - User Profile Page Controller\n */\n\nmodule app.pages.userProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IUserProfilePageController {\n        form: IUserProfileForm;\n        error: IUserProfileError;\n        activate: () => void;\n    }\n\n    export interface IUserProfileScope extends angular.IScope {\n        date: any;\n        datetimepickerConfig: any;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n    export interface IUserProfileForm {\n        username: string;\n        email: string;\n    }\n\n    export interface IUserProfileError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserProfilePageController implements IUserProfilePageController {\n\n        static controllerId = 'mainApp.pages.userProfilePage.UserProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IUserProfileForm;\n        error: IUserProfileError;\n        mapConfig: components.map.IMapConfig;\n        data: app.models.user.Profile;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.user.UserService',\n            '$state',\n            '$stateParams',\n            '$filter',\n            '$scope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private UserService: app.models.user.IUserService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: IParams,\n            private $filter: angular.IFilterService,\n            private $scope: IUserProfileScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init user data\n            this.data = null;\n\n            //Init form\n            this.form = {\n                username: '',\n                email: ''\n            };\n\n            this.error = {\n                message: ''\n            };\n\n            // init map config\n            this.mapConfig = {\n                type: 'location-map',\n                data: null\n            };\n\n\n            this.$scope.date;\n\n            //date time picker Config\n            this.$scope.datetimepickerConfig = {\n                minView: 'hour',\n                dropdownSelector: '.my-toggle-select'\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('userProfilePage controller actived');\n            // Get User profile information\n            this.UserService.getUserProfileById(this.$stateParams.id).then(\n                function(response) {\n                    self.data = new app.models.user.Profile(response);\n                }\n            );\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        onTimeSet (newDate, oldDate): void {\n            console.log(newDate);\n            console.log(oldDate);\n        }\n\n        beforeRender ($view, $dates, $leftDate, $upDate, $rightDate): void {\n            var index = Math.floor(Math.random() * $dates.length);\n            $dates[index].selectable = false;\n        }\n\n        goToConfirm (): void {\n            //TODO: Buscar la forma de poder recargar la pagina cuando sea\n            // necesario ya que muchas veces voy a tener que limpiar todo\n            this.$state.go('page.meetingConfirmationPage');\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.userProfilePage')\n        .controller(UserProfilePageController.controllerId, UserProfilePageController);\n\n}\n"]}