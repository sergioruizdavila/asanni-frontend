{"version":3,"sources":["app/pages/teacherLandingPage/teacherLandingPage.controller.ts"],"names":[],"mappings":"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","file":"../../../../www/app/pages/teacherLandingPage/teacherLandingPage.controller.js","sourcesContent":["/**\n * TeacherLandingPageController\n * @description - TeacherLanding Page Controller\n */\n\nmodule app.pages.teacherLandingPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherLandingPageController {\n        activate: () => void;\n    }\n\n    export interface ITeacherLandingScope extends angular.IScope {\n\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n    export interface ITeacherLandingForm {\n        language: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherLandingPageController implements ITeacherLandingPageController {\n\n        static controllerId = 'mainApp.pages.teacherLandingPage.TeacherLandingPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherLandingForm;\n        profileFake: app.models.user.Profile;\n        teacherFake: app.models.teacher.Teacher;\n        isAuthenticated: boolean;\n        TEACHER_FAKE_TMPL: string;\n        private _slideout: boolean;\n        private _hoverDetail: Array<boolean>;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$scope',\n                                 'mainApp.core.util.FunctionsUtilService',\n                                 'mainApp.auth.AuthService',\n                                 '$state',\n                                 'dataConfig',\n                                 '$uibModal',\n                                 '$rootScope',\n                                 'mainApp.localStorageService'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $scope: angular.IScope,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private AuthService: app.auth.IAuthService,\n            private $state: ng.ui.IStateService,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private localStorage) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Validate if user is Authenticated\n            this.isAuthenticated = this.AuthService.isAuthenticated();\n\n            //Init form\n            this.form = {\n                language: this.functionsUtil.getCurrentLanguage() || 'en'\n            };\n\n            //Hide left menu\n            this._slideout = false;\n\n            //Init hoverDetail array\n            this._hoverDetail = [];\n\n            // Init teacher fake data\n            this._buildFakeTeacher();\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Teacher Landing Page';\n            this.TEACHER_FAKE_TMPL = 'app/pages/teacherLandingPage/teacherContainerExample/teacherContainerExample.html';\n            //VARIABLES\n            let self = this;\n\n            //LOG\n            console.log('teacherLandingPage controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * slideNavMenu method\n        * @description - Show or Hide Nav Menu when user press 'menu' button\n        * (small devices)\n        */\n\n        slideNavMenu(): void {\n            this._slideout = !this._slideout;\n        }\n\n\n\n        /**\n        * changeLanguage\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n\n        changeLanguage(): void {\n             this.functionsUtil.changeLanguage(this.form.language);\n        }\n\n\n\n        /**\n        * goToSearch\n        * @description - go to search page\n        * @function\n        * @param {string} target - Section user clicked\n        * @return {void}\n        */\n        goToSearch(target: string): void {\n            //CONSTANTS\n            const SEARCH_PAGE_STATE = 'page.searchPage';\n            const GOTO_MIXPANEL = 'Go to Search from teacherLandingPage';\n            /************************/\n\n            //MIXPANEL\n            mixpanel.track(GOTO_MIXPANEL);\n\n            this.$state.go(SEARCH_PAGE_STATE, {target: target}, {reload: true});\n        }\n\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @param {ng.IAngularEvent} event - to identify if click come from hero and bottom button page\n        * @return {void}\n        */\n\n        private _openSignUpModal(event): void {\n            let self = this;\n            let hasNextStep = false;\n\n            //If user is logged, go to createTeacher page\n            if(this.isAuthenticated){\n                this.goToCreate();\n                return\n            }\n\n            // get if come from create teacher button\n            if(event.target.id === 'hero-go-to-button') {\n                hasNextStep = true;\n            }\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: hasNextStep\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n        }\n\n\n\n        /**\n        * _openLogInModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openLogInModal();\n        * @function\n        * @return {void}\n        */\n\n        private _openLogInModal(): void {\n\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalLogInTmpl,\n                controller: 'mainApp.components.modal.ModalLogInController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            /* When modal is closed,validate if user is Authenticated in order to\n            show current avatar user */\n            modalInstance.result.then(function () {\n                //Validate if user is Authenticated\n                self.$rootScope.$broadcast('Is Authenticated', false);\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n        }\n\n\n\n        /**\n         * logout\n         * @description - Log out current logged user (call AuthService to revoke token)\n         * @use - this.logout();\n         * @function\n         * @return {void}\n        */\n\n        logout(): void {\n            //VARIABLES\n            let self = this;\n\n            this.AuthService.logout().then(\n                function(response) {\n                    // Success\n                    window.location.reload();\n                },\n                function(response) {\n                    // Error\n                    /* This can occur if connection to server is lost or server is down */\n                    DEBUG && console.log('A problem occured while logging you out.');\n                }\n            );\n        }\n\n\n\n        /**\n        * _buildFakeTeacher\n        * @description - this method build fake teacher container example\n        * @use - this._buildFakeTeacher();\n        * @function\n        * @return {void}\n        */\n\n        private _buildFakeTeacher(): void {\n\n            this.profileFake = new app.models.user.Profile();\n            this.teacherFake = new app.models.teacher.Teacher();\n\n            this.profileFake.UserId = '1';\n            this.profileFake.FirstName = 'Dianne';\n            this.profileFake.BornCity = 'New York';\n            this.profileFake.BornCountry = 'United States';\n            this.profileFake.Avatar = 'https://waysily-img.s3.amazonaws.com/b3605bad-0924-4bc1-98c8-676c664acd9d-example.jpeg';\n            this.profileFake.Languages.Native = ['6'];\n            this.profileFake.Languages.Teach = ['6', '8'];\n            this.profileFake.Languages.Learn = ['8','7'];\n            this.teacherFake.Methodology = 'I can customize the lessons to fit your needs. I teach conversational English to intermediate and advanced students with a focus on grammar, pronunciation, vocabulary and clear fluency and Business English with a focus on formal English in a business setting (role-play), business journal articles, and technical, industry based vocabulary';\n            this.teacherFake.TeacherSince = '2013';\n            this.teacherFake.Type = 'H';\n            this.teacherFake.Immersion.Active = true;\n            this.teacherFake.Price.PrivateClass.Active = true;\n            this.teacherFake.Price.PrivateClass.HourPrice = 20.00;\n            this.teacherFake.Price.GroupClass.Active = true;\n            this.teacherFake.Price.GroupClass.HourPrice = 15.00;\n\n        }\n\n\n\n        /**\n        * _hoverEvent\n        * @description - this method is launched  when user launchs\n        * mouseover/mouseleave event on teacher fake container\n        * @use - this._hoverEvent('1', true);\n        * @function\n        * @param {string} id - container result id\n        * @param {boolean} status - mouseover = true / mouseleave = false\n        */\n\n        private _hoverEvent(id: string, status: boolean): void {\n            //VARIABLES\n            let args = {id: id, status: status};\n            this._hoverDetail[id] = status;\n        }\n\n\n\n        /**\n        * _assignNativeClass\n        * @description - this method return if teacher is native or not\n        * result (students, teachers, schools, etc)\n        * @use - this._assignNativeClass(languages);\n        * @function\n        * @param {native Array, learn Array and teach Array} languages\n        * teacher languages (native, teach and learn)\n        * @return {boolean} isNative\n        */\n\n        private _assignNativeClass(languages): boolean {\n            let native = languages.native;\n            let teach = languages.teach;\n            let isNative = false;\n\n            for (let i = 0; i < native.length; i++) {\n                for (let j = 0; j < teach.length; j++) {\n                    if(teach[j] === native[i]) {\n                        isNative = true;\n                    }\n                }\n            }\n\n            return isNative;\n        }\n\n\n\n        /**\n        * goToCreate\n        * @description - go to add/create new teacher\n        * @use - this._buildFakeTeacher();\n        * @function\n        * @return {void}\n        */\n\n        goToCreate(): void {\n            //VARIABLES\n            // params object\n            let params = {\n                type: 'new'\n            };\n            this.$state.go('page.createTeacherPage.start',  params, {reload: true});\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Landing Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Is Authenticated event\n            * @description - Parent (LandingPageController) receive Child's\n                             event in order to know if user is authenticated\n            * @event\n            */\n            this.$scope.$on('Is Authenticated', function(event, args) {\n                //Validate if user is Authenticated\n                self.isAuthenticated = self.AuthService.isAuthenticated();\n                // If user is authenticated, go to create teacher process\n                if(self.isAuthenticated && args) {\n                    self.goToCreate();\n                }\n            });\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.teacherLandingPage')\n        .controller(TeacherLandingPageController.controllerId, TeacherLandingPageController);\n\n}\n"]}