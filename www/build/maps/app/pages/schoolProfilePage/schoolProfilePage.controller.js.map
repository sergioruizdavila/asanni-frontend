{"version":3,"sources":["app/pages/schoolProfilePage/schoolProfilePage.controller.ts"],"names":[],"mappings":"AAKA,IAAO,GAAG,CAwkBT;AAxkBD,WAAO,GAAG;IAAC,IAAA,KAAK,CAwkBf;IAxkBU,WAAA,KAAK;QAAC,IAAA,iBAAiB,CAwkBjC;QAxkBgB,WAAA,iBAAiB,EAAC,CAAC;YAyChC;gBA0CI,qCACY,UAAuB,EACvB,UAAiD,EACjD,cAAkD,EAClD,aAA+C,EAC/C,cAAkD,EAClD,aAAgE,EAChE,WAAkC,EAClC,SAAwC,EACxC,MAA2B,EAC3B,YAA2B,EAC3B,UAA0C,EAC1C,OAA+B;oBAX/B,eAAU,GAAV,UAAU,CAAa;oBACvB,eAAU,GAAV,UAAU,CAAuC;oBACjD,mBAAc,GAAd,cAAc,CAAoC;oBAClD,kBAAa,GAAb,aAAa,CAAkC;oBAC/C,mBAAc,GAAd,cAAc,CAAoC;oBAClD,kBAAa,GAAb,aAAa,CAAmD;oBAChE,gBAAW,GAAX,WAAW,CAAuB;oBAClC,cAAS,GAAT,SAAS,CAA+B;oBACxC,WAAM,GAAN,MAAM,CAAqB;oBAC3B,iBAAY,GAAZ,YAAY,CAAe;oBAC3B,eAAU,GAAV,UAAU,CAAgC;oBAC1C,YAAO,GAAP,OAAO,CAAwB;oBAEvC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEjB,CAAC;gBAGO,2CAAK,GAAb;oBAGI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;oBAG3C,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;oBAGhD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAGpB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBAGjC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;oBAGlC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAG5B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAG7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBAErB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBAGD,8CAAQ,GAAR;oBAEI,IAAM,cAAc,GAAG,iCAAiC,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;oBACzF,IAAM,YAAY,GAAG,2BAA2B,CAAC;oBACjD,IAAM,cAAc,GAAG,8BAA8B,CAAC;oBAEtD,IAAI,IAAI,GAAG,IAAI,CAAC;oBAGhB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;oBAGhE,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;oBAE7D,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;oBAG/B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAChC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;4BACb,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;wBAC1E,CAAC,CAAC,CAAC;oBACP,CAAC;oBAGD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CACnE,UAAS,QAAQ;wBACb,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBAEnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAG/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAC9C;4BACI;gCACI,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gCAClC,QAAQ,EAAE;oCACN,QAAQ,EAAE;wCACN,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;wCAChD,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC;qCACnD;iCACJ;6BACJ;yBACJ,EACD,qBAAqB,EACrB,EAAC,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC,EACpG,IAAI,CACP,CAAC;wBAGF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAG1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAG3C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAExC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACzB,CAAC,CACJ,CAAC;gBACN,CAAC;gBAmBO,uDAAiB,GAAzB,UAA0B,IAAY;oBAElC,IAAM,YAAY,GAAG,SAAS,CAAC;oBAC/B,IAAM,YAAY,GAAG,SAAS,CAAC;oBAC/B,IAAM,WAAW,GAAG,QAAQ,CAAC;oBAG7B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACX,KAAK,YAAY;4BACjB,MAAM,CAAC,uDAAuD,CAAC;wBAC/D,KAAK,YAAY;4BACjB,MAAM,CAAC,yDAAyD,CAAC;wBACjE,KAAK,WAAW;4BAChB,MAAM,CAAC,uDAAuD,CAAC;oBACnE,CAAC;gBACL,CAAC;gBAcO,oDAAc,GAAtB,UAAwB,MAAgC;oBAEpD,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBAE5D,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;oBACvC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;oBACnD,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;oBACzC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC3C,CAAC;gBAYD,wDAAkB,GAAlB,UAAmB,SAAiB;oBAEhC,IAAM,KAAK,GAAG,CAAC,CAAC;oBAChB,IAAM,MAAM,GAAG,CAAC,CAAC;oBAEjB,IAAI,IAAI,GAAG,IAAI,CAAC;oBAEhB,IAAI,CAAC,cAAc,CAAC,+BAA+B,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAC9E,UAAS,QAAqC;wBAC1C,EAAE,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC7B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC;wBAC1C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;wBAChC,CAAC;wBACD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;oBACvC,CAAC,EACD,UAAS,KAAK;wBAEV,IAAM,aAAa,GAAG,mEAAmE,CAAC;wBAC1F,KAAK,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;wBACpD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;oBACvC,CAAC,CACJ,CAAC;gBACN,CAAC;gBAYD,uDAAiB,GAAjB,UAAkB,SAAiB;oBAE/B,IAAM,KAAK,GAAG,CAAC,CAAC;oBAChB,IAAM,MAAM,GAAG,CAAC,CAAC;oBAEjB,IAAI,IAAI,GAAG,IAAI,CAAC;oBAEhB,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAC5E,UAAS,QAAoC;wBACzC,EAAE,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC;wBACzC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC/B,CAAC;wBAED,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBACtC,CAAC,EACD,UAAS,KAAK;wBAEV,IAAM,aAAa,GAAG,kEAAkE,CAAC;wBACzF,KAAK,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;wBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBACtC,CAAC,CACJ,CAAC;gBACN,CAAC;gBAWD,qDAAe,GAAf,UAAgB,SAAiB;oBAE7B,IAAI,IAAI,GAAG,IAAI,CAAC;oBAEhB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAC9C,UAAS,QAAQ;wBACb,EAAE,CAAA,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;4BACb,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;wBAC5D,CAAC;oBACL,CAAC,EACD,UAAS,KAAK;wBAEV,IAAM,aAAa,GAAG,gEAAgE,CAAC;wBACvF,KAAK,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;wBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBACtC,CAAC,CACJ,CAAC;gBACN,CAAC;gBAaD,8CAAQ,GAAR,UAAU,GAAW;oBAEjB,IAAM,WAAW,GAAG,yJAAyJ,CAAC;oBAE9K,EAAE,CAAA,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACvB,GAAG,GAAG,SAAS,GAAG,GAAG,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC;oBAED,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;wBACL,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;oBAC9B,CAAC;gBACL,CAAC;gBAYO,sDAAgB,GAAxB;oBACI,IAAI,IAAI,GAAG,IAAI,CAAC;oBAGhB,IAAI,OAAO,GAAmC;wBAC1C,SAAS,EAAE,KAAK;wBAChB,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,KAAK;wBACf,IAAI,EAAE,IAAI;wBACV,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,eAAe;wBAC5C,UAAU,EAAE,sDAAsD;wBAClE,OAAO,EAAE;4BAEL,YAAY,EAAE;gCACV,MAAM,CAAC;oCACH,WAAW,EAAE,KAAK;iCACrB,CAAA;4BACL,CAAC;yBACJ;qBACJ,CAAC;oBAEF,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAErD,CAAC;gBAYD,iDAAW,GAAX;oBAEI,IAAM,cAAc,GAAG,gCAAgC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBAEzE,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;oBAG/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;oBAE1D,EAAE,CAAA,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBACtB,IAAI,GAAG,GAAG,wCAAwC,CAAC;wBACnD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;oBAC9B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC5B,CAAC;gBAEL,CAAC;gBAcD,6DAAuB,GAAvB,UAAyB,QAAgB;oBAErC,IAAM,IAAI,GAAG,OAAO,CAAC;oBAErB,IAAI,mBAAmB,GAAG,kBAAkB,GAAE,IAAI,GAAE,IAAI,CAAC;oBACzD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;oBAErE,MAAM,CAAC,mBAAmB,GAAG,SAAS,CAAC;gBAC3C,CAAC;gBAaD,0EAAoC,GAApC,UAAsC,QAAgB;oBAElD,IAAM,IAAI,GAAG,OAAO,CAAC;oBAErB,IAAI,mBAAmB,GAAG,kBAAkB,GAAE,IAAI,GAAE,IAAI,CAAC;oBACzD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,oCAAoC,CAAC,QAAQ,CAAC,CAAC;oBAElF,MAAM,CAAC,mBAAmB,GAAG,SAAS,CAAC;gBAC3C,CAAC;gBAcD,mEAA6B,GAA7B,UAA+B,MAA4B;oBAEvD,IAAI,SAAS,GAAG,oCAAoC,GAAG,MAAM,CAAC,KAAK,CAAC;oBACpE,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;oBAG1C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAClC,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;4BACtB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;wBAC5B,CAAC;oBACL,CAAC;oBAGD,EAAE,CAAA,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACjB,SAAS,GAAG,SAAS,GAAG,qCAAqC,CAAC;oBAClE,CAAC;oBAED,MAAM,CAAC,SAAS,CAAC;gBACrB,CAAC;gBAYO,2DAAqB,GAA7B,UAA8B,MAAM;oBAChC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;gBACjE,CAAC;gBAcO,mEAA6B,GAArC;oBAEI,IAAM,OAAO,GAAG;wBACZ;4BACI,GAAG,EAAE,GAAG;4BACR,KAAK,EAAE,MAAM;4BACb,IAAI,EAAE,MAAM;4BACZ,QAAQ,EAAE,IAAI;yBACjB;wBACD;4BACI,GAAG,EAAE,GAAG;4BACR,KAAK,EAAE,YAAY;4BACnB,IAAI,EAAE,YAAY;4BAClB,QAAQ,EAAE,IAAI;yBACjB;wBACD;4BACI,GAAG,EAAE,GAAG;4BACR,KAAK,EAAE,kBAAkB;4BACzB,IAAI,EAAE,kBAAkB;4BACxB,QAAQ,EAAE,IAAI;yBACjB;wBACD;4BACI,GAAG,EAAE,GAAG;4BACR,KAAK,EAAE,QAAQ;4BACf,IAAI,EAAE,QAAQ;4BACd,QAAQ,EAAE,IAAI;yBACjB;wBACD;4BACI,GAAG,EAAE,GAAG;4BACR,KAAK,EAAE,MAAM;4BACb,IAAI,EAAE,MAAM;4BACZ,QAAQ,EAAE,IAAI;yBACjB;qBACJ,CAAC;oBAEF,MAAM,CAAC,OAAO,CAAC;gBACnB,CAAC;gBAphBM,wCAAY,GAAG,6DAA6D,CAAC;gBAuBtE,mCAAO,GAAG;oBACpB,YAAY;oBACZ,YAAY;oBACZ,uCAAuC;oBACvC,qCAAqC;oBACrC,uCAAuC;oBACvC,wCAAwC;oBACxC,0BAA0B;oBAC1B,WAAW;oBACX,QAAQ;oBACR,cAAc;oBACd,YAAY;oBACZ,SAAS,CAAC,CAAC;gBAmfnB,kCAAC;YAAD,CAxhBA,AAwhBC,IAAA;YAxhBY,6CAA2B,8BAwhBvC,CAAA;YAGD,OAAO;iBACF,MAAM,CAAC,iCAAiC,CAAC;iBACzC,UAAU,CAAC,2BAA2B,CAAC,YAAY,EAAE,2BAA2B,CAAC,CAAC;QAE3F,CAAC,EAxkBgB,iBAAiB,GAAjB,uBAAiB,KAAjB,uBAAiB,QAwkBjC;IAAD,CAAC,EAxkBU,KAAK,GAAL,SAAK,KAAL,SAAK,QAwkBf;AAAD,CAAC,EAxkBM,GAAG,KAAH,GAAG,QAwkBT","file":"../../../../www/app/pages/schoolProfilePage/schoolProfilePage.controller.js","sourcesContent":["/**\n * SchoolProfilePageController\n * @description - School Profile Page Controller\n */\n\nmodule app.pages.schoolProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ISchoolProfilePageController {\n        activate: () => void;\n    }\n\n    export interface IPaymentMethodsClass {\n        key: string;\n        value: string;\n        name: string;\n        disabled?: boolean;\n    }\n\n    interface ICountryTeachersQueryObject {\n        next: string;\n        previous: string;\n        count: number;\n        results: Array<app.models.teacher.Teacher>;\n    }\n\n    interface ICountrySchoolsQueryObject {\n        next: string;\n        previous: string;\n        count: number;\n        results: Array<app.models.school.School>;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ISchoolParams extends ng.ui.IStateParamsService {\n        aliasSchool: string;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SchoolProfilePageController implements ISchoolProfilePageController {\n\n        static controllerId = 'mainApp.pages.schoolProfilePage.SchoolProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        isAuthenticated: boolean;\n        mapConfig: components.map.IMapConfig;\n        marker: string;\n        private _isMobile: angular.matchmedia.IScreenSize;\n        private _paymentMethodsList: Array<IPaymentMethodsClass>;\n        data: app.models.school.School;\n        country: app.models.country.Country;\n        private _teachersList: Array<app.models.teacher.Teacher>;\n        private _schoolsList: Array<app.models.school.School>;\n        loading: boolean;\n        shadowsSchoolLoading: boolean;\n        shadowsTeacherLoading: boolean;\n        noTeacherResult: boolean;\n        noSchoolResult: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            '$rootScope',\n            'mainApp.models.country.CountryService',\n            'mainApp.models.school.SchoolService',\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.auth.AuthService',\n            '$uibModal',\n            '$state',\n            '$stateParams',\n            'screenSize',\n            '$filter'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private CountryService: app.models.country.ICountryService,\n            private SchoolService: app.models.school.ISchoolService,\n            private TeacherService: app.models.teacher.ITeacherService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private AuthService: app.auth.IAuthService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ISchoolParams,\n            private screenSize: angular.matchmedia.IScreenSize,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init profile school data\n            this.data = new app.models.school.School();\n\n            //Init country data\n            this.country = new app.models.country.Country();\n\n            //Init loading\n            this.loading = true;\n\n            //Init shadows school loading\n            this.shadowsSchoolLoading = true;\n\n            //Init shadows teacher loading\n            this.shadowsTeacherLoading = true;\n\n            //Init no school result message\n            this.noSchoolResult = false;\n\n            //Init no teacher result message\n            this.noTeacherResult = false;\n\n            //Assign marker map\n            this.marker = 'long';\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: School Profile Page Id: ' + this.$stateParams.aliasSchool;\n            const SCROLL_TO_ID = 'schoolProfile-information';\n            const AVERAGE_RATING = 'schoolProfile-average-rating';\n            //VARIABLES\n            let self = this;\n\n            //Build Payment Methods List\n            this._paymentMethodsList = this._buildPaymentMethodsClassList();\n\n            //LOG\n            DEBUG && console.log('schoolProfilePage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //Assign to rating block the stick effect when is not mobile\n            if (!this.screenSize.is('xs, sm')) {\n                $(window).scroll(function() {\n                    self.functionsUtil.stickContainer(this, SCROLL_TO_ID, AVERAGE_RATING);\n                });\n            }\n\n            // Get School information\n            this.SchoolService.getSchoolByAlias(this.$stateParams.aliasSchool).then(\n                function(response) {\n                    self.data = new app.models.school.School(response);\n                    //Build meta tags\n                    self._buildMetaTags(self.data);\n\n                    //Build location map\n                    self.mapConfig = self.functionsUtil.buildMapConfig(\n                        [\n                            {\n                                id: self.data.Location.Position.Id,\n                                location: {\n                                    position: {\n                                        lat: parseFloat(self.data.Location.Position.Lat),\n                                        lng: parseFloat(self.data.Location.Position.Lng)\n                                    }\n                                }\n                            }\n                        ],\n                        'location-marker-map',\n                        {lat: parseFloat(self.data.Location.Position.Lat), lng: parseFloat(self.data.Location.Position.Lng)},\n                        null\n                    );\n\n                    //Build similar schools suggestions\n                    self._buildSchoolCards(self.data.Country);\n\n                    //Build teachers suggestions\n                    self._buildTeacherCards(self.data.Country);\n\n                    //Get country information\n                    self._getCountryInfo(self.data.Country);\n\n                    self.loading = false;\n                }\n            );\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _getResultLoading\n        * @description - this method return specific loading template\n        * based on type result (students, teachers, schools, etc)\n        * @use - this._getResultTemplate('student');\n        * @function\n        * @param {string} type - type of results list (students, teachers, schools, etc)\n        * @return {string} result template path\n        */\n        //TODO: Esta funciona esta repetida en searchPage, countryPage, deberia\n        // crearse un servicio global, donde se encargue de crear este tipo de shadows\n        private _getResultLoading(type: string): string {\n            //CONSTANTS\n            const STUDENT_TYPE = 'student';\n            const TEACHER_TYPE = 'teacher';\n            const SCHOOL_TYPE = 'school';\n            /*********************************/\n\n            switch (type) {\n                case STUDENT_TYPE:\n                return 'app/pages/searchPage/studentResult/studentResult.html';\n                case TEACHER_TYPE:\n                return 'app/pages/searchPage/teacherLoading/teacherLoading.html';\n                case SCHOOL_TYPE:\n                return 'app/pages/searchPage/schoolLoading/schoolLoading.html';\n            }\n        }\n\n\n\n        /**\n        * _buildMetaTags\n        * @description - this method is launched when user press some url school button\n        * @use - this.FunctionsUtilService.goToSite('http://www.school.com');\n        * @function\n        * @param {string} url - School urls such as: facebook, twitter, instagram,\n        * email, website, etc.\n        * @return {void}\n        */\n\n        private _buildMetaTags (school: app.models.school.School): void {\n            //VARIABLES\n            let metaTags = this.SchoolService.buildMetaTagValue(school);\n\n            this.$rootScope.title = metaTags.title;\n            this.$rootScope.description = metaTags.description;\n            this.$rootScope.url = metaTags.url;\n            this.$rootScope.robots = metaTags.robots;\n            this.$rootScope.image = metaTags.image;\n        }\n\n\n\n        /**\n        * _buildTeacherCards\n        * @description - this method build teacher cards associated to country\n        * @use - this._buildTeacherCards(country);\n        * @function\n        * @param {number} countryId - country id\n        * @return {void}\n        */\n        _buildTeacherCards(countryId: number): void {\n            //CONSTANTS\n            const LIMIT = 3;\n            const OFFSET = 0;\n            //VARIABLES\n            let self = this;\n\n            this.TeacherService.getAllTeachersByCountryAndRange(countryId, LIMIT, OFFSET).then(\n                function(response: ICountryTeachersQueryObject) {\n                    if(response.results.length > 0) {\n                        self._teachersList = response.results;\n                    } else {\n                        self.noTeacherResult = true;\n                    }\n                    self.shadowsTeacherLoading = false;\n                },\n                function(error) {\n                    //CONSTANTS\n                    const ERROR_MESSAGE = 'Error schoolProfilePage.controller.js method: _buildTeacherCards ';\n                    DEBUG && Raven.captureMessage(ERROR_MESSAGE, error);\n                    self.shadowsTeacherLoading = false;\n                }\n            );\n        }\n\n\n\n        /**\n        * _buildSchoolCards\n        * @description - this method build school cards associated to country\n        * @use - this._buildSchoolCards(country);\n        * @function\n        * @param {number} countryId - country id\n        * @return {void}\n        */\n        _buildSchoolCards(countryId: number): void {\n            //CONSTANTS\n            const LIMIT = 3;\n            const OFFSET = 0;\n            //VARIABLES\n            let self = this;\n\n            this.SchoolService.getAllSchoolsByCountryAndRange(countryId, LIMIT, OFFSET).then(\n                function(response: ICountrySchoolsQueryObject) {\n                    if(response.results.length > 0) {\n                        self._schoolsList = response.results;\n                    } else {\n                        self.noSchoolResult = true;\n                    }\n\n                    self.shadowsSchoolLoading = false;\n                },\n                function(error) {\n                    //CONSTANTS\n                    const ERROR_MESSAGE = 'Error schoolProfilePage.controller.js method: _buildSchoolCards ';\n                    DEBUG && Raven.captureMessage(ERROR_MESSAGE, error);\n                    self.shadowsSchoolLoading = false;\n                }\n            );\n        }\n\n\n        /**\n        * _getCountryInfo\n        * @description - this method build school cards associated to country\n        * @use - this._getCountryInfo(countryId);\n        * @function\n        * @param {number} countryId - country id\n        * @return {void}\n        */\n        _getCountryInfo(countryId: number): void {\n            //VARIABLES\n            let self = this;\n\n            this.CountryService.getCountryById(countryId).then(\n                function(response) {\n                    if(response.id) {\n                        self.country = new app.models.country.Country(response);\n                    }\n                },\n                function(error) {\n                    //CONSTANTS\n                    const ERROR_MESSAGE = 'Error schoolProfilePage.controller.js method: _getCountryInfo ';\n                    DEBUG && Raven.captureMessage(ERROR_MESSAGE, error);\n                    self.shadowsSchoolLoading = false;\n                }\n            );\n        }\n\n\n        /**\n        * goToSite\n        * @description - this method is launched when user press some url school button\n        * @use - this.FunctionsUtilService.goToSite('http://www.school.com');\n        * @function\n        * @param {string} url - School urls such as: facebook, twitter, instagram,\n        * email, website, etc.\n        * @return {void}\n        */\n\n        goToSite (url: string): void {\n            //CONSTANTS\n            const EMAIL_REGEX = /(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/;\n\n            if(EMAIL_REGEX.test(url)) {\n                url = 'mailto:' + url;\n                window.open(url);\n            }\n\n            if(url) {\n                window.open(url,'_blank');\n            }\n        }\n\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to sign up current user\n        * @use - this._openSignUpModal();\n        * @function\n        * @return {void}\n        */\n\n        private _openSignUpModal(): void {\n            let self = this;\n\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n        }\n\n\n\n        /**\n        * goToConfirm\n        * @description - go to book a class with current school\n        * @use - this.goToConfirm();\n        * @function\n        * @return {void}\n        */\n\n        goToConfirm(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Book a Class on School:' + this.data.Name;\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            //Validate if user is Authenticated\n            this.isAuthenticated = this.AuthService.isAuthenticated();\n\n            if(this.isAuthenticated) {\n                var url = 'https://waysily.typeform.com/to/NDPRAb';\n                window.open(url,'_blank');\n            } else {\n                this._openSignUpModal();\n            }\n\n        }\n\n\n\n        /**\n        * assignAmenitieIconClass\n        * @description - build amenities icons class\n        * (e.g. ma-liner-icons--default--wifi, ma-liner-icons--default--tv)\n        * @use - this.FunctionsUtilService.assignAmenitieIconClass('2');\n        * @function\n        * @param {string} amenitie - amenitie key value (e.g. '3')\n        * @return {void}\n        */\n\n        assignAmenitieIconClass (amenitie: string): string {\n            //CONSTANTS\n            const size = 'small';\n            //VARIABLES\n            let amenitiePrefixClass = 'ma-liner-icons--'+ size +'--';\n            let iconClass = this.functionsUtil.assignAmenitieIconClass(amenitie);\n\n            return amenitiePrefixClass + iconClass;\n        }\n\n\n        /**\n        * assignAccommodationAmenitieIconClass\n        * @description - build accommodation amenities icons class\n        * (e.g. ma-liner-icons--default--wifi, ma-liner-icons--default--tv)\n        * @use - this.FunctionsUtilService.assignAccommodationAmenitieIconClass('2');\n        * @function\n        * @param {string} amenitie - amenitie key value (e.g. '3')\n        * @return {void}\n        */\n\n        assignAccommodationAmenitieIconClass (amenitie: string): string {\n            //CONSTANTS\n            const size = 'small';\n            //VARIABLES\n            let amenitiePrefixClass = 'ma-liner-icons--'+ size +'--';\n            let iconClass = this.functionsUtil.assignAccommodationAmenitieIconClass(amenitie);\n\n            return amenitiePrefixClass + iconClass;\n        }\n\n\n\n        /**\n        * assignPaymentMethodsIconClass\n        * @description - build payment methods icons class\n        * (e.g. ma-liner-icons--medium--mastercard, ma-liner-icons--medium--visa)\n        * @use - this.FunctionsUtilService.assignPaymentMethodsIconClass('4');\n        * @function\n        * @param {string} method - Payment Method key value (e.g. '2')\n        * @return {void}\n        */\n\n        assignPaymentMethodsIconClass (method: IPaymentMethodsClass): string {\n            //VARIABLES\n            let iconClass = 'ma-payment-methods-icons--medium--' + method.value;\n            let arr = this.data.PaymentMethod.Methods;\n\n            // Assign disable value to method that's not includes in PaymentMethod\n            for (let i = 0; i < arr.length; i++) {\n                if(arr[i] == method.key) {\n                    method.disabled = false;\n                }\n            }\n\n            // if method is not included in the PaymentMethod list, disable it\n            if(method.disabled) {\n                iconClass = iconClass + ' ma-payment-methods-icons--disabled';\n            }\n\n            return iconClass;\n        }\n\n\n\n        /**\n        * _ratingFeatureAverage\n        * @description - Calculate school rating feature average\n        * @use - this._ratingFeatureAverage();\n        * @function\n        * @return {number} average - average value\n        */\n\n        private _ratingFeatureAverage(school): number {\n            return this.SchoolService.schoolFeatureRatingAverage(school);\n        }\n\n\n\n        /**\n        * _buildPaymentMethodsClassList\n        * @description - build payment methods list to show on view\n        * @use - this.FunctionsUtilService._buildPaymentMethodsClassList();\n        * @function\n        * @return {Array<IPaymentMethodsClass>} options - Payment Methods Options\n        */\n        //TODO: Mover esta lista de opcion de aqui, y llevar a un archivo global,\n        // (almacene variables globales) donde podamos llamar esta lista siempre\n        // que la necesite.\n        private _buildPaymentMethodsClassList(): Array<IPaymentMethodsClass> {\n            //CONSTANTS\n            const options = [\n                {\n                    key: '1',\n                    value: 'visa',\n                    name: 'Visa',\n                    disabled: true\n                },\n                {\n                    key: '2',\n                    value: 'mastercard',\n                    name: 'MasterCard',\n                    disabled: true\n                },\n                {\n                    key: '3',\n                    value: 'american-express',\n                    name: 'American Express',\n                    disabled: true\n                },\n                {\n                    key: '4',\n                    value: 'paypal',\n                    name: 'Paypal',\n                    disabled: true\n                },\n                {\n                    key: '5',\n                    value: 'cash',\n                    name: 'Cash',\n                    disabled: true\n                }\n            ];\n\n            return options;\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.schoolProfilePage')\n        .controller(SchoolProfilePageController.controllerId, SchoolProfilePageController);\n\n}\n"]}