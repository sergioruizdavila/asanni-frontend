{"version":3,"sources":["app/pages/schoolProfilePage/schoolProfilePage.controller.ts"],"names":[],"mappings":"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","file":"../../../../www/app/pages/schoolProfilePage/schoolProfilePage.controller.js","sourcesContent":["/**\n * SchoolProfilePageController\n * @description - School Profile Page Controller\n */\n\nmodule app.pages.schoolProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ISchoolProfilePageController {\n        activate: () => void;\n    }\n\n    export interface IPaymentMethodsClass {\n        key: string;\n        value: string;\n        name: string;\n        disabled?: boolean;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ISchoolParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SchoolProfilePageController implements ISchoolProfilePageController {\n\n        static controllerId = 'mainApp.pages.schoolProfilePage.SchoolProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        mapConfig: components.map.IMapConfig;\n        private _paymentMethodsList: Array<IPaymentMethodsClass>;\n        data: app.models.school.School;\n        loading: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.school.SchoolService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$stateParams',\n            '$filter'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private SchoolService: app.models.school.ISchoolService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ISchoolParams,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init profile school data\n            this.data = new app.models.school.School();\n\n            //Init loading\n            this.loading = true;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: School Profile Page';\n            //VARIABLES\n            let self = this;\n\n            //Build Payment Methods List\n            this._paymentMethodsList = this._buildPaymentMethodsClassList();\n\n            //LOG\n            DEBUG && console.log('schoolProfilePage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            // Get School information\n            this.SchoolService.getSchoolById(this.$stateParams.id).then(\n                function(response) {\n                    self.data = new app.models.school.School(response);\n                    //Build location map\n                    self.mapConfig = self.functionsUtil.buildMapConfig(\n                        [\n                            {\n                                id: self.data.Location.Position.Id,\n                                location: {\n                                    position: {\n                                        lat: parseFloat(self.data.Location.Position.Lat),\n                                        lng: parseFloat(self.data.Location.Position.Lng)\n                                    }\n                                }\n                            }\n                        ],\n                        'location-marker-map',\n                        {lat: parseFloat(self.data.Location.Position.Lat), lng: parseFloat(self.data.Location.Position.Lng)},\n                        null\n                    );\n                    self.loading = false;\n                }\n            );\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * goToSite\n        * @description - this method is launched when user press some url school button\n        * @use - this.FunctionsUtilService.goToSite('http://www.school.com');\n        * @function\n        * @param {string} url - School urls such as: facebook, twitter, instagram,\n        * email, website, etc.\n        * @return {void}\n        */\n\n        goToSite (url: string): void {\n            //CONSTANTS\n            const EMAIL_REGEX = /(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/;\n\n            if(EMAIL_REGEX.test(url)) {\n                url = 'mailto:' + url;\n                window.open(url);\n            }\n\n            if(url) {\n                window.open(url,'_blank');\n            }\n        }\n\n\n\n        /**\n        * assignAmenitieIconClass\n        * @description - build amenities icons class\n        * (e.g. ma-liner-icons--default--wifi, ma-liner-icons--default--tv)\n        * @use - this.FunctionsUtilService.assignAmenitieIconClass('2');\n        * @function\n        * @param {string} amenitie - amenitie key value (e.g. '3')\n        * @return {void}\n        */\n\n        assignAmenitieIconClass (amenitie: string): string {\n            //VARIABLES\n            let amenitiePrefixClass = 'ma-liner-icons--default--';\n            let iconClass = this.functionsUtil.assignAmenitieIconClass(amenitie);\n\n            return amenitiePrefixClass + iconClass;\n        }\n\n\n        /**\n        * assignAccomoAmenitieIconClass\n        * @description - build accommodation amenities icons class\n        * (e.g. ma-liner-icons--default--wifi, ma-liner-icons--default--tv)\n        * @use - this.FunctionsUtilService.assignAccomoAmenitieIconClass('2');\n        * @function\n        * @param {string} amenitie - amenitie key value (e.g. '3')\n        * @return {void}\n        */\n\n        assignAccomoAmenitieIconClass (amenitie: string): string {\n            //VARIABLES\n            let amenitiePrefixClass = 'ma-liner-icons--default--';\n            let iconClass = this.functionsUtil.assignAccommodationAmenitieIconClass(amenitie);\n\n            return amenitiePrefixClass + iconClass;\n        }\n\n\n\n        /**\n        * assignPaymentMethodsIconClass\n        * @description - build payment methods icons class\n        * (e.g. ma-liner-icons--medium--mastercard, ma-liner-icons--medium--visa)\n        * @use - this.FunctionsUtilService.assignPaymentMethodsIconClass('4');\n        * @function\n        * @param {string} method - Payment Method key value (e.g. '2')\n        * @return {void}\n        */\n\n        assignPaymentMethodsIconClass (method: IPaymentMethodsClass): string {\n            //VARIABLES\n            let iconClass = 'ma-payment-methods-icons--medium--' + method.value;\n            let arr = this.data.PaymentMethod.Methods;\n\n            // Assign disable value to method that's not includes in PaymentMethod\n            for (let i = 0; i < arr.length; i++) {\n                if(arr[i] == method.key) {\n                    method.disabled = false;\n                }\n            }\n\n            // if method is not included in the PaymentMethod list, disable it\n            if(method.disabled) {\n                iconClass = iconClass + ' ma-payment-methods-icons--disabled';\n            }\n\n            return iconClass;\n        }\n\n\n\n        /**\n        * _buildPaymentMethodsClassList\n        * @description - build payment methods list to show on view\n        * @use - this.FunctionsUtilService._buildPaymentMethodsClassList();\n        * @function\n        * @return {Array<IPaymentMethodsClass>} options - Payment Methods Options\n        */\n        //TODO: Mover esta lista de opcion de aqui, y llevar a un archivo global,\n        // (almacene variables globales) donde podamos llamar esta lista siempre\n        // que la necesite.\n        private _buildPaymentMethodsClassList(): Array<IPaymentMethodsClass> {\n            //CONSTANTS\n            const options = [\n                {\n                    key: '1',\n                    value: 'visa',\n                    name: 'Visa',\n                    disabled: true\n                },\n                {\n                    key: '2',\n                    value: 'mastercard',\n                    name: 'MasterCard',\n                    disabled: true\n                },\n                {\n                    key: '3',\n                    value: 'american-express',\n                    name: 'American Express',\n                    disabled: true\n                },\n                {\n                    key: '4',\n                    value: 'paypal',\n                    name: 'Paypal',\n                    disabled: true\n                },\n                {\n                    key: '5',\n                    value: 'cash',\n                    name: 'Cash',\n                    disabled: true\n                }\n            ];\n\n            return options;\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.schoolProfilePage')\n        .controller(SchoolProfilePageController.controllerId, SchoolProfilePageController);\n\n}\n"]}