{"version":3,"sources":["app/app.core.module.ts","app/app.module.ts","app/app.run.ts","app/app.values.ts","app/account/account.service.ts","app/auth/auth.service.ts","app/core/interfaces/interfaces.ts","app/core/restApi/restApi.config.ts","app/core/restApi/restApi.service.ts","app/core/s3Upload/s3Upload.service.ts","app/core/util/filters/app.filter.ts","app/core/util/functionsUtil/functionsUtil.service.ts","app/core/util/getDataStaticJson/getDataStaticJson.service.ts","app/core/util/messageUtil/messageUtil.service.ts","app/models/feedback/feedback.model.ts","app/models/feedback/feedback.service.ts","app/models/school/school.model.ts","app/models/school/school.service.ts","app/models/student/student.model.ts","app/models/student/student.service.ts","app/models/teacher/teacher.model.ts","app/models/teacher/teacher.service.ts","app/models/user/user.model.ts","app/models/user/user.service.ts","app/pages/createTeacherPage/createTeacherPage.config.ts","app/pages/createTeacherPage/createTeacherPage.controller.ts","app/pages/createTeacherPage/teacherEducationSection/teacherEducationSection.config.ts","app/pages/createTeacherPage/teacherEducationSection/teacherEducationSection.controller.ts","app/pages/createTeacherPage/teacherExperienceSection/teacherExperienceSection.config.ts","app/pages/createTeacherPage/teacherExperienceSection/teacherExperienceSection.controller.ts","app/pages/createTeacherPage/teacherFinishSection/teacherFinishSection.config.ts","app/pages/createTeacherPage/teacherFinishSection/teacherFinishSection.controller.ts","app/pages/createTeacherPage/teacherInfoSection/teacherInfoSection.config.ts","app/pages/createTeacherPage/teacherInfoSection/teacherInfoSection.controller.ts","app/pages/createTeacherPage/teacherLanguageSection/teacherLanguageSection.config.ts","app/pages/createTeacherPage/teacherLanguageSection/teacherLanguageSection.controller.ts","app/pages/createTeacherPage/teacherLocationSection/teacherLocationSection.config.ts","app/pages/createTeacherPage/teacherLocationSection/teacherLocationSection.controller.ts","app/pages/createTeacherPage/teacherMethodSection/teacherMethodSection.config.ts","app/pages/createTeacherPage/teacherMethodSection/teacherMethodSection.controller.ts","app/pages/createTeacherPage/teacherPhotoSection/teacherPhotoSection.config.ts","app/pages/createTeacherPage/teacherPhotoSection/teacherPhotoSection.controller.ts","app/pages/createTeacherPage/teacherPriceSection/teacherPriceSection.config.ts","app/pages/createTeacherPage/teacherPriceSection/teacherPriceSection.controller.ts","app/pages/createTeacherPage/teacherWelcomeSection/teacherWelcomeSection.config.ts","app/pages/createTeacherPage/teacherWelcomeSection/teacherWelcomeSection.controller.ts","app/pages/editProfile/editProfile.config.ts","app/pages/editProfile/editProfile.controller.ts","app/pages/editProfile/editProfileBasicInfo/editProfileBasicInfo.config.ts","app/pages/editProfile/editProfileBasicInfo/editProfileBasicInfo.controller.ts","app/pages/editProfile/editProfileLocation/editProfileLocation.config.ts","app/pages/editProfile/editProfileLocation/editProfileLocation.controller.ts","app/pages/editProfile/editProfileMedia/editProfileMedia.config.ts","app/pages/editProfile/editProfileMedia/editProfileMedia.controller.ts","app/pages/editProfile/userEditAgendaPage/userEditAgendaPage.config.ts","app/pages/editProfile/userEditAgendaPage/userEditAgendaPage.controller.ts","app/pages/editTeacher/editTeacher.config.ts","app/pages/editTeacher/editTeacher.controller.ts","app/pages/editTeacher/editTeacherEducation/editTeacherEducation.config.ts","app/pages/editTeacher/editTeacherEducation/editTeacherEducation.controller.ts","app/pages/editTeacher/editTeacherExperience/editTeacherExperience.config.ts","app/pages/editTeacher/editTeacherExperience/editTeacherExperience.controller.ts","app/pages/editTeacher/editTeacherMethodology/editTeacherMethodology.config.ts","app/pages/editTeacher/editTeacherMethodology/editTeacherMethodology.controller.ts","app/pages/editTeacher/editTeacherPrice/editTeacherPrice.config.ts","app/pages/editTeacher/editTeacherPrice/editTeacherPrice.controller.ts","app/pages/editTeacher/editTeacherTeach/editTeacherTeach.config.ts","app/pages/editTeacher/editTeacherTeach/editTeacherTeach.controller.ts","app/pages/landingPage/landingPage.config.ts","app/pages/landingPage/landingPage.controller.ts","app/pages/landingPage/landingPage.service.ts","app/pages/main/main.config.ts","app/pages/main/main.controller.ts","app/pages/meetingConfirmationPage/meetingConfirmationPage.config.ts","app/pages/meetingConfirmationPage/meetingConfirmationPage.controller.ts","app/pages/resetPasswordPage/resetPasswordPage.config.ts","app/pages/resetPasswordPage/resetPasswordPage.controller.ts","app/pages/schoolProfilePage/schoolProfilePage.config.ts","app/pages/schoolProfilePage/schoolProfilePage.controller.ts","app/pages/searchPage/searchPage.config.ts","app/pages/searchPage/searchPage.controller.ts","app/pages/searchPage/teacherResult/teacherResult.directive.ts","app/pages/studentLandingPage/studentLandingPage.config.ts","app/pages/studentLandingPage/studentLandingPage.controller.ts","app/pages/studentLandingPage/studentLandingPage.service.ts","app/pages/teacherLandingPage/teacherLandingPage.config.ts","app/pages/teacherLandingPage/teacherLandingPage.controller.ts","app/pages/teacherProfilePage/teacherProfilePage.config.ts","app/pages/teacherProfilePage/teacherProfilePage.controller.ts","app/pages/userInboxDetailsPage/userInboxDetailsPage.config.ts","app/pages/userInboxDetailsPage/userInboxDetailsPage.controller.ts","app/pages/userInboxPage/userInboxPage.config.ts","app/pages/userInboxPage/userInboxPage.controller.ts","app/pages/userProfilePage/userProfilePage.config.ts","app/pages/userProfilePage/userProfilePage.controller.ts","app/register/register.service.ts","components/floatMessageBar/floatMessageBar.config.ts","components/floatMessageBar/floatMessageBar.directive.ts","components/footer/footer.config.ts","components/footer/footer.directive.ts","components/header/header.config.ts","components/header/header.directive.ts","components/map/map.config.ts","components/map/map.directive.ts","components/meter/meter.config.ts","components/meter/meter.directive.ts","components/modal/modal.config.ts","components/modal/modalCertificate/modalCertificate.controller.ts","components/modal/modalCreateUser/modalBasicInfo/modalBasicInfo.controller.ts","components/modal/modalCreateUser/modalBorn/modalBorn.controller.ts","components/modal/modalCreateUser/modalFinish/modalFinish.controller.ts","components/modal/modalCreateUser/modalPhoto/modalPhoto.controller.ts","components/modal/modalCreateUser/modalWelcome/modalWelcome.controller.ts","components/modal/modalEducation/modalEducation.controller.ts","components/modal/modalExperience/modalExperience.controller.ts","components/modal/modalForgotPassword/modalForgotPassword.controller.ts","components/modal/modalLanguages/modalLanguages.controller.ts","components/modal/modalLogIn/modalLogIn.controller.ts","components/modal/modalMeetingPoint/modalMeetingPoint.controller.ts","components/modal/modalRecommendTeacher/modalRecommendTeacher.controller.ts","components/modal/modalSignUp/modalSignUp.controller.ts","components/rating/rating.config.ts","components/rating/rating.directive.ts","components/sideMenu/sideMenu.config.ts","components/sideMenu/sideMenu.directive.ts"],"names":[],"mappings":"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","file":"../www/app.js","sourcesContent":["/**\n * module() Here inject dependencies of Angular Modules and 3rd Party\n *\n * @param {none}\n * @return {void}\n */\n\n(function (): void {\n    'use strict';\n\n    angular.module('mainApp.core', [\n        /*Angular Modules*/\n        /*'ngRaven',*/\n        'ngResource',\n        'ngCookies',\n        'ui.router',\n        'angular-oauth2',\n        /*3rd Party*/\n        'pascalprecht.translate',\n        'ui.bootstrap',\n        'ui.calendar',\n        'ui.bootstrap.datetimepicker',\n        'ngFileUpload',\n        'ngImgCrop'\n    ]);\n\n})();\n","/**\r\n * module() Here inject dependencies of App modules and components,\r\n * such as controllers, service, directive, etc\r\n * config() Here define the main state, routes, http interceptor\r\n *\r\n * @param {angular.ui.IUrlRouterProvider} $urlRouterProvider\r\n * @return {void}\r\n */\r\n\r\n(function (): void {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mainApp', [\r\n            'mainApp.core',\r\n            'mainApp.core.util',\r\n            'mainApp.localStorage',\r\n            'mainApp.core.restApi',\r\n            'mainApp.core.s3Upload',\r\n            'mainApp.auth',\r\n            'mainApp.register',\r\n            'mainApp.account',\r\n            'mainApp.models.feedback',\r\n            'mainApp.models.user',\r\n            'mainApp.models.student',\r\n            'mainApp.models.teacher',\r\n            'mainApp.models.school',\r\n            'mainApp.pages.main',\r\n            'mainApp.pages.studentLandingPage',\r\n            'mainApp.pages.teacherLandingPage',\r\n            'mainApp.pages.landingPage',\r\n            'mainApp.pages.resetPasswordPage',\r\n            'mainApp.pages.searchPage',\r\n            'mainApp.pages.createTeacherPage',\r\n            'mainApp.pages.teacherProfilePage',\r\n            'mainApp.pages.editProfile',\r\n            'mainApp.pages.userEditAgendaPage',\r\n            'mainApp.pages.editTeacher',\r\n            'mainApp.pages.userInboxPage',\r\n            'mainApp.pages.userInboxDetailsPage',\r\n            'mainApp.pages.meetingConfirmationPage',\r\n            'mainApp.pages.schoolProfilePage',\r\n            'mainApp.components.header',\r\n            'mainApp.components.sideMenu',\r\n            'mainApp.components.rating',\r\n            'mainApp.components.meter',\r\n            'mainApp.components.map',\r\n            'mainApp.components.modal',\r\n            'mainApp.components.footer',\r\n            'mainApp.components.floatMessageBar'\r\n        ])\r\n\r\n        /* Configuration for angular-oauth2 */\r\n\r\n        .config(['OAuthProvider', 'dataConfig',\r\n            function(\r\n                    OAuthProvider,\r\n                    dataConfig: IDataConfig) {\r\n\r\n                OAuthProvider.configure({\r\n                    baseUrl: dataConfig.baseUrl,\r\n                    clientId: dataConfig.localOAuth2Key,\r\n                    grantPath: '/oauth2/token/',\r\n                    revokePath: '/oauth2/revoke_token/'\r\n                });\r\n\r\n            }\r\n        ])\r\n\r\n        .config(['OAuthTokenProvider', 'dataConfig',\r\n            function(\r\n                    OAuthTokenProvider,\r\n                    dataConfig: IDataConfig) {\r\n\r\n                OAuthTokenProvider.configure({\r\n                    name: dataConfig.cookieName,\r\n                    options: {\r\n                        secure: dataConfig.https,\r\n                    }\r\n                });\r\n\r\n            }\r\n        ])\r\n\r\n        /* Default Configuration */\r\n\r\n        .config(config);\r\n\r\n    function config($locationProvider: angular.ILocationProvider,\r\n                    $urlRouterProvider: angular.ui.IUrlRouterProvider,\r\n                    $translateProvider: angular.translate.ITranslateProvider) {\r\n\r\n        //Turn on/off Sentry alerting catcher\r\n        //FIXME: No he podido inyectar ravenProvider, lo comento por ahora.\r\n        //$ravenProvider.development(DEBUG);\r\n\r\n        $locationProvider.html5Mode(true);\r\n        //$locationProvider.hashPrefix('!');\r\n\r\n        $urlRouterProvider.otherwise('/page/main');\r\n        //$urlRouterProvider.otherwise('/page/landing/student');\r\n\r\n        /* Translate Provider */\r\n        let prefix = 'assets/i18n/';\r\n        let suffix = '.json';\r\n\r\n        $translateProvider.useStaticFilesLoader({\r\n            prefix: prefix,\r\n            suffix: suffix\r\n        });\r\n\r\n        $translateProvider.preferredLanguage('es');\r\n\r\n        //Save language on cookie Storage\r\n        $translateProvider.useCookieStorage();\r\n\r\n    }\r\n\r\n})();\r\n","/**\n * run() run low-level functionality\n * such as authorization, get user info, roles, etc.\n *\n * @return {void}\n */\n\n(function (): void {\n\n    'use strict';\n\n    angular\n        .module('mainApp')\n        .run(run);\n\n    run.$inject = [\n                '$rootScope',\n                '$state',\n                'dataConfig',\n                'mainApp.auth.AuthService',\n                'mainApp.models.user.UserService',\n                'mainApp.localStorageService'\n            ];\n\n    function run($rootScope: app.core.interfaces.IMainAppRootScope,\n                 $state: ng.ui.IStateService,\n                 dataConfig: IDataConfig,\n                 AuthService: app.auth.IAuthService,\n                 userService: app.models.user.IUserService,\n                 localStorage): void {\n\n        //VARIABLES\n        let productionHost = dataConfig.domain;\n        let mixpanelTokenDEV = dataConfig.mixpanelTokenDEV;\n        let mixpanelTokenPRD = dataConfig.mixpanelTokenPRD;\n\n        //Change MixPanel Environment dynamically\n        if (window.location.hostname.toLowerCase().search(productionHost) < 0) {\n            mixpanel.init(mixpanelTokenDEV);\n        } else {\n            mixpanel.init(mixpanelTokenPRD, {\n                loaded: function(mixpanel) {\n                    let first_visit = mixpanel.get_property(\"First visit\");\n                    let current_date = moment().format('MMMM Do YYYY, h:mm:ss a');\n                    if(first_visit == null) {\n                        mixpanel.register_once({ \"First visit\": current_date });\n                        mixpanel.track(\"Visit\");\n                    }\n                }\n            });\n        }\n\n        //Get current authenticated user data from localStorage\n        if (AuthService.isAuthenticated()) {\n            //VARIABLES\n            let userAccountInfo = JSON.parse(localStorage.getItem(dataConfig.userDataLocalStorage));\n            $rootScope.userData = userAccountInfo;\n            //Get user profile data and save in $rootScope\n            userService.getUserProfileById($rootScope.userData.id).then(\n                function(response) {\n                    if(response.userId) {\n                        $rootScope.profileData = new app.models.user.Profile(response);\n                    }\n                }\n            );\n        }\n\n        //Validate each state if require login\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n\n            if(toState.data.requireLogin && !AuthService.isAuthenticated()) {\n                /* Unauthenticated request to a route requiring auth is\n                   redirected to main page (page.landingPage) */\n                event.preventDefault();\n                $state.go('page.landingPage');\n            }\n        });\n    }\n\n})();\n\n\n/* localStorage Service */\n\n(function (angular) {\n\n  function localStorageServiceFactory($window) {\n    if($window.localStorage){\n      return $window.localStorage;\n    }\n    throw new Error('Local storage support is needed');\n  }\n\n  // Inject dependencies\n  localStorageServiceFactory.$inject = ['$window'];\n\n  // Export\n  angular\n    .module('mainApp.localStorage', [])\n    .factory('mainApp.localStorageService', localStorageServiceFactory);\n\n})(angular);\n"," /**\n * values() Here we define each core variables\n * such as user logged Id, end points, etc\n *\n * @param {IDataConfig} dataConfig\n * @return {void}\n */\n\n declare var DEBUG: boolean;\n /* This must be false in production */\n DEBUG = true;\n /************************************/\n\n\n/*--  INTERFACE --*/\ninterface IDataConfig {\n    currentYear: string;\n    baseUrl: string;\n    domain: string;\n    https: boolean;\n    autoRefreshTokenIntervalSeconds: number;\n    usernameMinLength: number;\n    usernameMaxLength: number;\n    passwordMinLength: number;\n    passwordMaxLength: number;\n    localOAuth2Key: string;\n    googleMapKey: string;\n    mixpanelTokenPRD: string;\n    mixpanelTokenDEV: string;\n    modalWelcomeTmpl: string;\n    modalPhotoTmpl: string;\n    modalBornTmpl: string;\n    modalBasicInfoTmpl: string;\n    modalFinishTmpl: string;\n    modalMeetingPointTmpl: string;\n    modalLanguagesTmpl: string;\n    modalExperienceTmpl: string;\n    modalEducationTmpl: string;\n    modalCertificateTmpl: string;\n    modalSignUpTmpl: string;\n    modalLogInTmpl: string;\n    modalForgotPasswordTmpl: string;\n    modalRecommendTeacherTmpl: string;\n    bucketS3: string;\n    regionS3: string;\n    accessKeyIdS3: string;\n    secretAccessKeyS3: string;\n    userId: string;\n    userDataLocalStorage: string;\n    teacherDataLocalStorage: string;\n    earlyIdLocalStorage: string;\n    cookieName: string;\n}\n\n/*--  MAIN FUNCTION --*/\n(function (): void {\n\n    'use strict';\n\n    let BASE_URL = 'https://waysily-server-production.herokuapp.com/api/v1/';\n    let BUCKETS3 = 'waysily-img/profile-avatar-prd';\n\n    /* Assign Environment values */\n    if(DEBUG) {\n        BASE_URL = 'http://127.0.0.1:8000/api/v1/';\n        BUCKETS3 = 'waysily-img/profile-avatar-dev';\n    }\n\n    // DEV Fake\n    // baseUrl: 'http://localhost:3000/'\n    // Use: command - json-server --watch db.json\n    // DEV Local\n    // baseUrl: 'http://127.0.0.1:8000/api/v1/'\n    // bucketS3: 'waysily-img/teachers-avatar-dev'\n    // DEV Heroku\n    // baseUrl: 'https://waysily-server-dev.herokuapp.com/api/v1/'\n    // bucketS3: 'waysily-img/teachers-avatar-dev'\n    // Staging Heroku\n    // baseUrl: 'https://waysily-server-staging.herokuapp.com/api/v1/'\n    // bucketS3: 'waysily-img/teachers-avatar-prd'\n    // PRD Heroku\n    // baseUrl: 'https://waysily-server.herokuapp.com/api/v1/'\n    // bucketS3: 'waysily-img/teachers-avatar-prd'\n    var dataConfig: IDataConfig = {\n        currentYear: '2017',\n        baseUrl: BASE_URL,\n        domain: 'www.waysily.com',\n        https: false,\n        autoRefreshTokenIntervalSeconds: 300,\n        usernameMinLength: 8,\n        usernameMaxLength: 80,\n        passwordMinLength: 8,\n        passwordMaxLength: 80,\n        localOAuth2Key: 'fCY4EWQIPuixOGhA9xRIxzVLNgKJVmG1CVnwXssq',\n        googleMapKey: 'AIzaSyD-vO1--MMK-XmQurzNQrxW4zauddCJh5Y',\n        mixpanelTokenPRD: '86a48c88274599c662ad64edb74b12da',\n        mixpanelTokenDEV: 'eda475bf46e7f01e417a4ed1d9cc3e58',\n        modalWelcomeTmpl: 'components/modal/modalCreateUser/modalWelcome/modalWelcome.html',\n        modalBornTmpl: 'components/modal/modalCreateUser/modalBorn/modalBorn.html',\n        modalPhotoTmpl: 'components/modal/modalCreateUser/modalPhoto/modalPhoto.html',\n        modalBasicInfoTmpl: 'components/modal/modalCreateUser/modalBasicInfo/modalBasicInfo.html',\n        modalFinishTmpl: 'components/modal/modalCreateUser/modalFinish/modalFinish.html',\n        modalMeetingPointTmpl: 'components/modal/modalMeetingPoint/modalMeetingPoint.html',\n        modalLanguagesTmpl: 'components/modal/modalLanguages/modalLanguages.html',\n        modalExperienceTmpl: 'components/modal/modalExperience/modalExperience.html',\n        modalEducationTmpl: 'components/modal/modalEducation/modalEducation.html',\n        modalCertificateTmpl: 'components/modal/modalCertificate/modalCertificate.html',\n        modalSignUpTmpl: 'components/modal/modalSignUp/modalSignUp.html',\n        modalLogInTmpl: 'components/modal/modalLogIn/modalLogIn.html',\n        modalForgotPasswordTmpl: 'components/modal/modalForgotPassword/modalForgotPassword.html',\n        modalRecommendTeacherTmpl: 'components/modal/modalRecommendTeacher/modalRecommendTeacher.html',\n        bucketS3: BUCKETS3,\n        regionS3: 'us-east-1',\n        accessKeyIdS3: 'AKIAIHKBYIUQD4KBIRLQ',\n        secretAccessKeyS3: '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',\n        userId: '',\n        userDataLocalStorage: 'waysily.userData',\n        teacherDataLocalStorage: 'waysily.teacherData',\n        earlyIdLocalStorage: 'waysily.early_id',\n        cookieName: 'token'\n    };\n\n\n    angular\n        .module('mainApp')\n        .constant('dataConfig', dataConfig);\n\n})();\n","/**\n * AccountService\n * @description - Services related on User's Account.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.account {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IAccountService {\n        getAccount:() => angular.IPromise<any>;\n        getUsername:(email: string) => angular.IPromise<any>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class AccountService implements IAccountService {\n\n        static serviceId = 'mainApp.account.AccountService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        ACCOUNT_URI: string;\n        ACCOUNT_GET_USERNAME_URI: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$q',\n            'mainApp.core.restApi.restApiService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $q: angular.IQService,\n                    private restApi: app.core.restApi.IRestApi) {\n            //LOG\n            DEBUG && console.log('account service instanced');\n\n            //CONSTANTS\n            this.ACCOUNT_URI = 'account';\n            this.ACCOUNT_GET_USERNAME_URI = 'account/username';\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * getAccount\n        * @description - get account information\n        * @use - this.AccountService.getAccount();\n        * @function\n        * @return {angular.IPromise<any>} promise - return user's account data\n        */\n\n        getAccount(): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.ACCOUNT_URI;\n\n            return this.restApi.show({url: url}).$promise\n                .then(\n                    function(response) {\n                        return response;\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        return error;\n                    }\n                );\n        }\n\n\n        /**\n        * getUsername\n        * @description - Getting an username with a given email\n        * @use - this.AccountService.getUsername();\n        * @function\n        * @param {string} email - user's email\n        * @return {angular.IPromise<any>} promise\n        */\n\n        getUsername(email): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.ACCOUNT_GET_USERNAME_URI;\n            let deferred = this.$q.defer();\n            let data = {\n                email: email\n            };\n\n            this.restApi.create({url: url}, data).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n\n                    function(error) {\n                        DEBUG && console.error(error);\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.account', [])\n        .service(AccountService.serviceId, AccountService);\n\n}\n","/**\n * AuthService\n * @description - AuthService uses `angular-oauth2` module to provide\n * authentication functionality, as well as automatic refresh of access tokens.\n * @function\n */\n\nmodule app.auth {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IAuthService {\n        isAuthenticated:() => boolean;\n        login:(user: app.core.interfaces.IUserDataAuth) => angular.IPromise<any>;\n        logout:() => angular.IPromise<any>;\n        resetPassword:(email: string) => angular.IPromise<any>;\n        confirmResetPassword: (uid: string,\n                               token: string,\n                               newPassword1: string,\n                               newPassword2: string) => angular.IPromise<any>\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class AuthService implements IAuthService {\n\n        static serviceId = 'mainApp.auth.AuthService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        AUTH_RESET_PASSWORD_URI: string;\n        AUTH_CONFIRM_RESET_PASSWORD_URI: string;\n        autoRefreshTokenInterval: number;\n        refreshNeeded: boolean;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$q',\n                          '$timeout',\n                          '$cookies',\n                          'OAuth',\n                          'mainApp.core.restApi.restApiService',\n                          'dataConfig',\n                          'mainApp.localStorageService'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $q: angular.IQService,\n                    private $timeout: angular.ITimeoutService,\n                    private $cookies: angular.cookies.ICookiesService,\n                    private OAuth: angular.oauth2.IOAuth,\n                    private restApi: app.core.restApi.IRestApi,\n                    private dataConfig: IDataConfig,\n                    private localStorage) {\n            //LOG\n            DEBUG && console.log('auth service called');\n\n            //CONSTANTS\n            this.AUTH_RESET_PASSWORD_URI = 'rest-auth/password/reset/';\n            this.AUTH_CONFIRM_RESET_PASSWORD_URI = 'rest-auth/password/reset/confirm/';\n\n            this.autoRefreshTokenInterval = dataConfig.autoRefreshTokenIntervalSeconds * 1000;\n            this.refreshNeeded = true;\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n         * isAuthenticated\n         * @description - Verifies if user is authenticated or not based\n         * on the `token` cookie.\n         * @use - this.AuthService.isAuthenticated();\n         * @function\n         * @return {boolean} boolean - User is authenticated or not\n         */\n\n        isAuthenticated(): boolean {\n            return this.OAuth.isAuthenticated();\n        }\n\n\n\n        /**\n         * forceLogout\n         * @description - If logout cannot be performed (if server is down,\n         * for example), force logout by removing the `token` cookie.\n         * @use - this.AuthService.isAuthenticated();\n         * @function\n         * @return {void}\n         */\n\n        forceLogout(): void {\n          DEBUG && console.log(\"Forcing logout\");\n          this.$cookies.remove(this.dataConfig.cookieName);\n          //Clean localStorage Values\n          this.localStorage.removeItem(this.dataConfig.userDataLocalStorage);\n          this.localStorage.removeItem(this.dataConfig.teacherDataLocalStorage);\n          window.location.reload();\n        }\n\n\n\n        /**\n         * resetPassword\n         * @description - reset password given a email value\n         * @use - this.AuthService.resetPassword('sergio@gmail.com');\n         * @function\n         * @return {angular.IPromise<any>} promise - return http request with\n         * Status Code 200 OK\n        */\n\n        resetPassword(email): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.AUTH_RESET_PASSWORD_URI;\n            let deferred = this.$q.defer();\n            let data = {\n                email: email\n            };\n\n            this.restApi.create({url: url}, data).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n\n                    function(error) {\n                        DEBUG && console.error(error);\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n         * confirmResetPassword\n         * @description - send confirmation to reset password given a new password\n         * @use - this.AuthService.confirmResetPassword({\n                    uid: 'MQ',\n                    token: '4jf-2632ecc2e516fc2686bc',\n                    new_password1: 'test2017',\n                    new_password2: 'test2017'\n                  });\n         * @function\n         * @return {angular.IPromise<any>} promise - return http request with\n         * Status Code 200 OK\n        */\n\n        confirmResetPassword(uid, token, newPassword1, newPassword2): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.AUTH_CONFIRM_RESET_PASSWORD_URI;\n            let deferred = this.$q.defer();\n            let data = {\n                uid: uid,\n                token: token,\n                new_password1: newPassword1,\n                new_password2: newPassword2\n            };\n\n            this.restApi.create({url: url}, data).$promise\n                .then(\n                    function(response) {\n                        DEBUG && console.error(response);\n                        deferred.resolve(response.detail);\n                    },\n\n                    function(error) {\n                        DEBUG && console.error(error);\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n         * login\n         * @description - Tries to login a user by obtaining access and\n         * refresh tokens and stores them in a cookie.\n         * @use - this.AuthService.login(user);\n         * @function\n         * @param  {app.core.IUserDataAuth} user - Object with 'username'\n         * and 'password' properties.\n         * @return {angular.IPromise<any>} promise - return http response with\n         * access token information (access_token, expire_in, refresh_token)\n         */\n\n        login(user): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let deferred = this.$q.defer();\n\n            //NOTE This method can't change to $promise structure, keep this structure\n            this.OAuth.getAccessToken(user, {}).then(\n                function(response) {\n                    DEBUG && console.info(\"Logged in successfuly!\");\n                    deferred.resolve(response);\n                },\n                function(error) {\n                    DEBUG && console.error(\"Error while logging in!\");\n                    deferred.reject(error);\n                }\n            );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n         * logout\n         * @description - Revokes the 'token' and removes the stored 'token'\n         * from cookies.\n         * @use - this.AuthService.logout();\n         * @function\n         * @return {angular.IPromise<any>} promise - return http request with\n         * Status Code 200 OK\n        */\n\n        logout(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let deferred = this.$q.defer();\n\n            //NOTE This method can't change to $promise structure, keep this structure\n            this.OAuth.revokeToken().then(\n                function(response) {\n                    DEBUG && console.info(\"Logged out successfuly!\");\n                    //Clean localStorage Values\n                    self.localStorage.removeItem(self.dataConfig.userDataLocalStorage);\n                    self.localStorage.removeItem(self.dataConfig.teacherDataLocalStorage);\n                    window.location.reload();\n                    deferred.resolve(response);\n                },\n                function(response) {\n                    DEBUG && console.error(\"Error while logging you out!\");\n                    // Force logout\n                    self.forceLogout();\n                    deferred.reject(response);\n                }\n            );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n         * refreshToken\n         * @description - Gets a new access token. Should not be called directly,\n         * as autoRefreshToken() is used to manage it.\n         * @use - this.AuthService.autoRefreshToken();\n         * @function\n         * @return {angular.IPromise<any>} promise - return http request with\n         * Status Code 200 OK\n         */\n\n        refreshToken(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let deferred = this.$q.defer();\n\n            if (!this.isAuthenticated()) {\n                DEBUG && console.error('Cannot refresh token if Unauthenticated');\n                deferred.reject();\n                return deferred.promise;\n            }\n\n            //NOTE This method can't change to $promise structure, keep this structure\n            this.OAuth.getRefreshToken().then(\n                function(response) {\n                    // Success\n                    DEBUG && console.info(\"Access token refreshed\");\n                    deferred.resolve(response);\n                },\n                function(response) {\n                    DEBUG && console.error(\"Error refreshing token \");\n                    DEBUG && console.error(response);\n                    deferred.reject(response);\n                }\n            );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n         * autoRefreshToken\n         * @description - A function to automatically refresh the access token as needed.\n         * It is called before a route change which requires authentication\n         * using ngRoute's resolve property and stalls the initialization\n         * of the view until the promise is resolved.\n         *\n         * Additionally, once called it recursively calls itself every\n         * 'autoRefreshTokenInterval' milliseconds to handle situations\n         * where an access token might expire and cause a 401, while\n         * the route doesn't change.\n         * @use - this.autoRefreshToken();\n         * @function\n         * @return {angular.IPromise<any>} promise\n         */\n\n        autoRefreshToken(): any {\n            //VARIABLES\n            let self = this;\n            var deferred = this.$q.defer();\n\n            // If we don't have to refresh the access token, simply resolve the promise\n            if (!this.refreshNeeded) {\n                deferred.resolve();\n                return deferred.promise;\n            }\n\n            //NOTE This method can't change to $promise structure, keep this structure\n            this.refreshToken().then(\n                function(response) {\n                    self.refreshNeeded = false;\n                    deferred.resolve(response);\n                },\n                function(response) {\n                    deferred.reject(response);\n                }\n            );\n\n            this.$timeout(function() {\n                /* Since autoRefreshTokenInterval milliseconds have passed\n                   since we refreshed the access token, we need to refresh\n                   it again. */\n                if (self.isAuthenticated()) {\n                    self.refreshNeeded = true;\n                    self.autoRefreshToken();\n                }\n            }, self.autoRefreshTokenInterval);\n\n            return deferred.promise;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n    .module('mainApp.auth', [])\n    .service(AuthService.serviceId, AuthService);\n\n}\n","/**\n * Specifies the Interfaces throughout App\n */\n\nmodule app.core.interfaces {\n\n    /*******************************/\n    /*     ROOTSCOPE INTERFACE     */\n    /*******************************/\n    export interface IMainAppRootScope extends angular.IRootScopeService {\n        userData: IUserData;\n        profileData: app.models.user.Profile;\n        teacher_id: string;\n        teacherData: app.models.teacher.Teacher;\n        language_doc: angular.translate.ITranslateProvider;\n        activeHeader: boolean;\n        activeFooter: boolean;\n        activeMessageBar: boolean;\n    }\n\n    /***********************************/\n    /*         USER DATA MODEL         */\n    /***********************************/\n    export interface IUserData {\n        id: string;\n        username: string;\n        email: string;\n        password: string;\n        firstName: string;\n        lastName: string;\n        groups: Array<string>;\n    }\n\n    /*******************************/\n    /*   USER DATA AUTH INTERFACE  */\n    /*******************************/\n    export interface IUserDataAuth {\n        username: string;\n        email: string;\n        password: string;\n    }\n\n    /*******************************/\n    /*   DATE SPLITTED INTERFACE  */\n    /*******************************/\n    export interface IDateSplitted {\n        day: string;\n        month: string;\n        year: string;\n    }\n\n    /********************************************/\n    /*    DATA OBJECT OBTAINED FROM I18N JSON   */\n    /********************************************/\n    export interface IDataFromJsonI18n {\n        value: string;\n        code: string;\n    }\n\n    /********************************************/\n    /*      KEY - VALUE OBJECT INTERFACE        */\n    /********************************************/\n    export interface IKeyValue {\n        key: any;\n        value: any;\n    }\n\n    /****************************************/\n    /*    SELECT LIST ELEMENT INTERFACES    */\n    /****************************************/\n    export interface ISelectListElement {\n        value: any;\n    }\n\n    /*******************************************/\n    /*    HELP TEXT OF EACH STEP INTERFACES    */\n    /*******************************************/\n    export interface IHelpTextStep {\n        title: string;\n        description: string;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IStateParamsData extends ng.ui.IStateParamsService {\n        type?: string;\n    }\n\n    /************************************/\n    /*    TOOLTIP OPTIONS INTERFACES    */\n    /************************************/\n    export interface ITooltipOptions extends ng.ui.bootstrap.ITooltipOptions {\n        class: string;\n    }\n\n    /************************************/\n    /*  SIGNUP AND LOGIN DATASET MODAL  */\n    /************************************/\n    export interface IDataSet {\n        hasNextStep: boolean;\n    }\n\n    /************************************/\n    /*      UPLOAD FILE INTERFACE       */\n    /************************************/\n    export interface IUpload extends angular.angularFileUpload.IUploadService {\n        dataUrltoBlob: (dataUrl: string, name: string) => File;\n        urlToBlob: (url: string) => angular.IPromise<any>;\n    }\n\n\n    /////////////////////////////////\n\n\n    /********************************/\n    /*      POPUPS INTERFACES       */\n    /********************************/\n    export interface IPopup {\n        subtitle?: string;\n        textsList?: Array<string>;\n    }\n\n\n    /********************************/\n    /*    BIRTHDATE VALIDATE FORM   */\n    /********************************/\n    export interface IBirthdateValidate {\n        day: app.core.util.functionsUtil.IValid,\n        month: app.core.util.functionsUtil.IValid,\n        year: app.core.util.functionsUtil.IValid,\n        valid: boolean,\n        message: string\n    }\n\n}\n\n\n\n/******************************************************************************/\n\n\n/**\n * Nowday there is not a angular-oauth2 definition, here is a basic\n * created by cskiwi on gitHub\n * @reference https://github.com/oauthjs/angular-oauth2/issues/91\n */\n\ndeclare namespace angular.oauth2 {\n    /*\n     * IOAuth\n     */\n\n     interface IOAuthConfig {\n        baseUrl: string;\n        clientId: string;\n        clientSecret?: string;\n        grantPath?: string;\n        revokePath?: string;\n    }\n    interface IOAuthProvider {\n        configure(params: IOAuthConfig): IOAuthConfig;\n    }\n\n    interface IData {\n        username: string;\n        password: string;\n    }\n\n    interface IOAuth {\n        isAuthenticated(): boolean;\n        getAccessToken(data: IData, options?: any): angular.IPromise<string>;\n        getRefreshToken(data?: IData, options?: any): angular.IPromise<string>;\n        revokeToken(data?: IData, options?: any): angular.IPromise<string>;\n    }\n\n    /*\n     * IOAuthToken\n     */\n    interface IOAuthTokenConfig {\n        name: string;\n        options: IOAuthTokenOptions;\n    }\n\n    interface IOAuthTokenOptions {\n        secure: boolean;\n    }\n\n    interface IOAuthTokenProvider {\n        configure(params: IOAuthTokenConfig): IOAuthTokenConfig;\n    }\n}\n","/**\n* config()\n* @description - Rest API config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.core.restApi', [])\n        .config(config);\n\n\n        function config() {\n        }\n\n})();\n","/**\n * RestApiService\n * @description - Rest Api Service\n */\n\nmodule app.core.restApi {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IRestApi extends ng.resource.IResource<any> {\n        show: any;\n        query: any;\n        queryObject: any;\n        create: any;\n        update: any;\n        remove: any;\n    }\n\n    /**********************************/\n    /*         CLASS DEFINITION       */\n    /**********************************/\n    export class RestApiService {\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        static serviceId = 'mainApp.core.restApi.restApiService';\n\n\n        /*-- INJECT DEPENDENCIES--*/\n        static $inject = [\n            '$resource',\n            'dataConfig'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $resource: ng.resource.IResourceService,\n                    dataConfig: IDataConfig) {\n        }\n\n        /**********************************/\n        /*               API              */\n        /**********************************/\n        public static Api($resource, dataConfig: IDataConfig): IRestApi {\n\n            var resource = $resource(dataConfig.baseUrl + ':url/:id', { url: '@url'},\n            {\n                show: { method: 'GET', params: {id: '@id'} },\n                query: { method: 'GET', isArray: true },\n                queryObject: { method: 'GET', isArray: false },\n                create: { method: 'POST' },\n                update: { method: 'PUT', params: { id: '@id' } },\n                remove: { method: 'DELETE', params: { id: '@id' } }\n            });\n\n            return <IRestApi>resource;\n\n        }\n\n    }\n\n    angular\n        .module('mainApp.core.restApi')\n        .factory(RestApiService.serviceId, RestApiService.Api)\n        .factory('customHttpInterceptor', customHttpInterceptor)\n        .config(configApi);\n\n        configApi.$inject = ['$httpProvider'];\n        customHttpInterceptor.$inject = ['$q', 'mainApp.core.util.messageUtilService'];\n\n        function configApi($httpProvider) {\n            $httpProvider.interceptors.push('customHttpInterceptor');\n        }\n\n        function customHttpInterceptor(\n                    $q: angular.IQService,\n                    messageUtil: app.core.util.messageUtil.IMessageUtilService) {\n\n            return {\n                request: function(req) {\n                    req.url = decodeURIComponent(req.url);\n                    return req;\n                },\n                requestError: function (rejection) {\n                    return rejection;\n                },\n                response: function (res) {\n                    return res;\n                }\n            }\n\n        }\n\n\n}\n","/**\n * S3Upload Service\n * @description - Services related on upload files on Amazon AWS S3.\n * @constructor\n */\n\nmodule app.core.s3Upload {\n\n    'use strict';\n\n    declare const AWS: any;\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IS3UploadService {\n        upload: (file: File) => angular.IPromise<any>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class S3UploadService implements IS3UploadService {\n\n        static serviceId = 'mainApp.core.s3Upload.S3UploadService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bucket: any;\n        REGION: string;\n        ACCESS_KEY_ID: string;\n        SECRET_ACCESS_KEY: string;\n        BUCKET: string;\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$q', 'dataConfig'];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $q: ng.IQService, private dataConfig: IDataConfig) {\n            //LOG\n            console.log('S3Upload service instanced');\n            //CONSTANTS\n            this.REGION = this.dataConfig.regionS3;\n            this.ACCESS_KEY_ID = this.dataConfig.accessKeyIdS3;\n            this.SECRET_ACCESS_KEY = this.dataConfig.secretAccessKeyS3;\n            this.BUCKET = this.dataConfig.bucketS3;\n            /*********************************/\n\n            // Init AWS S3\n            AWS.config.region = this.REGION;\n            AWS.config.update({\n                accessKeyId: this.ACCESS_KEY_ID,\n                secretAccessKey: this.SECRET_ACCESS_KEY\n            });\n            this.bucket = new AWS.S3({\n                params: { Bucket: this.BUCKET, maxRetries: 10 },\n                httpOptions: { timeout: 360000 }\n            });\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * upload\n        * @description - upload file on Amazon AWS S3\n        * @use - this.S3UploadService.upload(file);\n        * @function\n        * @param {File} file file object\n        * @return {angular.IPromise<any>} promise\n        */\n\n        upload(file): angular.IPromise<any> {\n            //VARIABLES\n            var deferred = this.$q.defer();\n            var params = {\n                Bucket: this.BUCKET,\n                Key: file.name,\n                ContentType: file.type,\n                Body: file\n            };\n            var options = {\n                // Part Size of 10mb\n                partSize: 10 * 1024 * 1024,\n                queueSize: 1,\n                // Give the owner of the bucket full control\n                ACL: 'bucket-owner-full-control'\n            };\n            /*********************************************/\n\n            // Upload file to Amazon S3 Service\n            var uploader = this.bucket.upload(params, options, function (err, data) {\n                if (err) {\n                    deferred.reject(err);\n                }\n                deferred.resolve(data);\n            });\n\n            // Notify Upload process in order to show a loading bar or loading gif\n            /*uploader.on('httpUploadProgress', function (event) {\n                deferred.notify(event);\n            });*/\n\n            return deferred.promise;\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.core.s3Upload', [])\n        .service(S3UploadService.serviceId, S3UploadService);\n\n}\n","/**\n * mainApp Filters\n * @description - Set of all mainApp's filters\n */\n\nmodule app.core.util.filters {\n\n    /**********************************/\n    /*      GET I18N VALUE FILTER     */\n    /**********************************/\n\n    /*-- INJECT DEPENDENCIES --*/\n    GetI18nFilter.$inject = ['$filter', 'mainApp.core.util.GetDataStaticJsonService'];\n\n    /**\n    * GetI18nFilter\n    * @description - return value based on code from i18n json\n    * @use - {{ 'CO' | getI18nFilter:'country' }}\n    * @function\n    * @return {string} country translated (e.g. 'Estados Unidos')\n    */\n    export function GetI18nFilter($filter: angular.IFilterService,\n                                  getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService) {\n        return function (value: string, type: string): string {\n            //VARIABLES\n            let valueI18n = getDataFromJson.returnValuei18n(type, value);\n            let translated = $filter('translate')(valueI18n);\n\n            return translated;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    GetTypeOfTeacherFilter.$inject = ['$filter'];\n\n    /**\n    * GetTypeOfTeacherFilter\n    * @description - return the type of teacher text based on teacher type on DB ('H' or 'P')\n    * @use - {{ 'H' | getTypeOfTeacherFilter }}\n    * @function\n    * @return {string} type of teacher text translated\n    */\n    export function GetTypeOfTeacherFilter($filter: angular.IFilterService) {\n        return function (value: string): string {\n            //VARIABLES\n            let translated = '';\n\n            if(value === 'H') {\n                translated = $filter('translate')('%global.teacher.type.hobby.text');\n            } else if (value === 'P') {\n                translated = $filter('translate')('%global.teacher.type.professional.text');\n            }\n\n            return translated;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    AgeFilter.$inject = ['$filter', 'mainApp.core.util.FunctionsUtilService'];\n\n    /**\n    * AgeFilter\n    * @description - return age translated (e.g. '35 años')\n    * @use - {{ '1982' | ageFilter }}\n    * @function\n    * @return {string} user years old\n    */\n    export function AgeFilter(\n        $filter: angular.IFilterService,\n        functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService) {\n        return function (value: string): string {\n\n            let age = functionsUtil.ageFormat(value);\n            let translated = $filter('translate')('%global.age.text');\n\n            return age + ' ' + translated;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    YearMonthFormatFilter.$inject = ['$filter', 'mainApp.core.util.GetDataStaticJsonService'];\n\n    /**\n    * YearMonthFormatFilter\n    * @description - return date formatted as 'September 2017'\n    * @use - {{ date | yearMonthFormatFilter }}\n    * @function\n    * @return {string} date formatted as 'Month YYYY'\n    */\n    export function YearMonthFormatFilter($filter: angular.IFilterService,\n                                          getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService) {\n        return function (value: string): string {\n            let dateString = moment(value).format('YYYY/MM/DD').split('/');\n            let valueI18n = getDataFromJson.returnValuei18n('month', dateString[1]);\n            let translated = $filter('translate')(valueI18n);\n            //Split date to day, month and year\n            let dateFormatted = {\n                month: translated,\n                year: dateString[0]\n            };\n            return dateFormatted.month + ' ' + dateFormatted.year;\n        }\n    }\n\n\n\n    /*-- INJECT DEPENDENCIES --*/\n    RangeFilter.$inject = ['$filter', 'mainApp.core.util.GetDataStaticJsonService'];\n\n    /**\n    * RangeFilter\n    * @description - Receive a number range (e.g. [-1, 1] or [1, 5]), and return\n    * a list of number in order to show inside a ng-repeat loop.\n    * @use - ng-repeat = \"i in [-1,1] | RangeFilter\"\n    * @function\n    * @return {Array<number>} result - number list to show in ng-repeat loop\n    */\n    export function RangeFilter() {\n        return function (value: Array<number>): Array<number> {\n            let lowBound, highBound;\n            if (value.length == 1) {\n              lowBound = 0;\n              highBound = +value[0] - 1;\n          } else if (value.length == 2) {\n              lowBound = +value[0];\n              highBound = +value[1];\n            }\n            var i = lowBound;\n            var result = [];\n            while (i <= highBound) {\n              result.push(i);\n              i++;\n            }\n            return result;\n        }\n    }\n\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.core.util')\n        .filter('getI18nFilter', GetI18nFilter)\n        .filter('getTypeOfTeacherFilter', GetTypeOfTeacherFilter)\n        .filter('ageFilter', AgeFilter)\n        .filter('yearMonthFormatFilter', YearMonthFormatFilter)\n        .filter('rangeFilter', RangeFilter);\n\n}\n","/**\r\n* functionsUtilService\r\n* @description - Service with util functions used accross the whole application\r\n* @constructor\r\n*/\r\n\r\nmodule app.core.util.functionsUtil {\r\n    'use strict';\r\n\r\n    /**********************************/\r\n    /*           INTERFACES           */\r\n    /**********************************/\r\n    export interface IFunctionsUtilService {\r\n        normalizeString: (value: string) => string;\r\n        splitToColumns: (arr: Array<any>, size: number) => Array<any>;\r\n        buildMapConfig: (dataSet: Array<any>,\r\n                        mapType: string,\r\n                        position: components.map.IPosition,\r\n                        zoom: number) =>  components.map.IMapConfig;\r\n        generateRangesOfNumbers: (from: number, to:number) => Array<number>;\r\n        buildNumberSelectList: (from: number, to:number) => Array<app.core.interfaces.ISelectListElement>;\r\n        dateFormat: (date: string) => string;\r\n        ageFormat: (date: any) => string;\r\n        getCurrentLanguage: () => string;\r\n        generateUsername: (firstName: string, lastName: string) => string;\r\n        changeLanguage: (language: string) => angular.IPromise<string> ;\r\n        joinDate: (day:string, month:string, year:string) => string;\r\n        splitDate: (date:string) => app.core.interfaces.IDateSplitted;\r\n        progress: (currentStep: number, totalSteps: number) => string;\r\n        validator: (value: any, validations: Array<Validation>) => IValid;\r\n        averageNumbersArray: (values: Array<number>) => number;\r\n        teacherRatingAverage: (ratingsArr: Array<Object>) => number;\r\n        addUserIndentifyMixpanel: (userId: string) => void;\r\n        setUserMixpanel: (userData: app.models.user.Profile) => void;\r\n        setPropertyMixpanel: (property: Object) => void;\r\n        assignAmenitieIconClass: (type: string) => string;\r\n    }\r\n\r\n    export interface IValid {\r\n        valid: boolean;\r\n        message: string;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n    /*      ENUM VALIDATION DEFINITION      */\r\n    /****************************************/\r\n\r\n    export const enum Validation {\r\n        Email = 0,\r\n        String = 1,\r\n        Null = 2,\r\n        Empty = 3,\r\n        Number = 4,\r\n        IsNotZero = 5,\r\n        Defined = 6,\r\n        IsTrue = 7,\r\n        IsNotNaN = 8\r\n    }\r\n\r\n\r\n    /****************************************/\r\n    /*           CLASS DEFINITION           */\r\n    /****************************************/\r\n\r\n    export class FunctionsUtilService implements IFunctionsUtilService {\r\n\r\n        static serviceId = 'mainApp.core.util.FunctionsUtilService';\r\n\r\n        /**********************************/\r\n        /*           PROPERTIES           */\r\n        /**********************************/\r\n\r\n        // --------------------------------\r\n\r\n        /*-- INJECT DEPENDENCIES --*/\r\n        public static $inject = ['$filter',\r\n                                 'dataConfig',\r\n                                 '$translate'];\r\n\r\n        /**********************************/\r\n        /*           CONSTRUCTOR          */\r\n        /**********************************/\r\n        constructor(private $filter: angular.IFilterService,\r\n                    private dataConfig: IDataConfig,\r\n                    private $translate: angular.translate.ITranslateService) {\r\n            DEBUG && console.log('functionsUtil 2 service called');\r\n        }\r\n\r\n\r\n        /**********************************/\r\n        /*            METHODS             */\r\n        /**********************************/\r\n\r\n\r\n        /**\r\n        * normalizeString\r\n        * @description - replace special characters from a string\r\n        * @use - this.FunctionsUtilService.normalizeString('Fábula Niño');\r\n        * @function\r\n        * @param {string} str - string to parse\r\n        * @return {string} string parsed (e.g. Fabula Nino)\r\n        */\r\n        normalizeString(str): string {\r\n            //VARIABLES\r\n            let from = \"ÃÀÁÄÂÈÉËÊÌÍÏÎÒÓÖÔÙÚÜÛãàáäâèéëêìíïîòóöôùúüûÑñÇç\";\r\n            let to = \"AAAAAEEEEIIIIOOOOUUUUaaaaaeeeeiiiioooouuuunncc\";\r\n            let mapping = {};\r\n\r\n            for(var i = 0; i < from.length; i++ )\r\n              mapping[ from.charAt(i) ] = to.charAt(i);\r\n\r\n            var ret = [];\r\n            for( var i = 0; i < str.length; i++ ) {\r\n                var c = str.charAt(i);\r\n                if(mapping.hasOwnProperty(str.charAt(i)))\r\n                    ret.push(mapping[c]);\r\n                else\r\n                    ret.push(c);\r\n            }\r\n\r\n            return ret.join( '' );\r\n\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * generateGuid\r\n        * @description - generate Guid id string\r\n        * @function\r\n        * @return {string} guid - Returns an Guid Id string.\r\n        */\r\n        public static generateGuid(): string {\r\n            var fmt = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n            var guid = fmt.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n            return guid;\r\n        }\r\n\r\n\r\n        /**\r\n        * dateFormat\r\n        * @description - format a date to 'YYYY-MM-DD'\r\n        * @use - this.FunctionsUtilService.dateFormat('June 10, 2016');\r\n        * @function\r\n        * @params {string} date - date to format\r\n        * @return {string} dateFormatted - date formatted.\r\n        */\r\n        dateFormat(date: string): string {\r\n            //CONSTANTS\r\n            const DEFAULT_DJANGO_DATE_FORMAT = 'YYYY-MM-DD';\r\n            //Safari issue with 'YYYY-MM-DD' format\r\n            const TEMPORAL_FORMAT = 'MM/DD/YYYY';\r\n            /*****************************/\r\n\r\n            let dateTemporalFormatted = moment(date).format(TEMPORAL_FORMAT);\r\n            let dateFormattedSplit = this.splitDate(dateTemporalFormatted);\r\n            let dateFormatted = this.joinDate(dateFormattedSplit.day, dateFormattedSplit.month, dateFormattedSplit.year);\r\n\r\n            return dateFormatted;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * ageFormat\r\n        * @description - return the current age\r\n        * @use - this.FunctionsUtilService.ageFormat('1987');\r\n        * @function\r\n        * @params {any} year - birth year\r\n        * @return {string} age - age of user.\r\n        */\r\n        ageFormat(year): string {\r\n            //VARIABLES\r\n            let currentYear = parseInt(this.dataConfig.currentYear);\r\n            let birthYear = parseInt(year);\r\n            let age = currentYear - birthYear;\r\n\r\n            return age.toString();\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * getCurrentLanguage\r\n        * @description - get current site language\r\n        * @use - this.FunctionsUtilService.getCurrentLanguage();\r\n        * @function\r\n        * @return {string} currentLanguage - current site language code (e.g. 'es', 'en')\r\n        */\r\n        getCurrentLanguage(): string {\r\n             let currentLanguage = this.$translate.use();\r\n             return currentLanguage;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * dateFormat\r\n        * @description - format a date to 'YYYY-MM-DD'\r\n        * @use - this.FunctionsUtilService.dateFormat('June 10, 2016');\r\n        * @function\r\n        * @param {string} firstName - entity first name\r\n        * @param {string} lastName - entity last name\r\n        * @return {string} username - username generated\r\n        */\r\n        generateUsername(firstName, lastName): string {\r\n            //VARIABLES\r\n            let alias = '';\r\n            let username = '';\r\n            let randomCode = '';\r\n            let minLength = this.dataConfig.usernameMinLength;\r\n            let maxLength = this.dataConfig.usernameMaxLength;\r\n\r\n            //CONSTANTS\r\n            let ALPHABET = '0123456789';\r\n            let ID_LENGTH = 7;\r\n            let REMAINDER = maxLength - ID_LENGTH;\r\n            let EXTRAS = 2;\r\n\r\n            //Replace characters special\r\n            firstName = this.normalizeString(firstName);\r\n            //remove space and other characters to firstName\r\n            firstName = firstName.replace(/[^\\w\\s]/gi, '').replace(/\\s/g, '');\r\n\r\n            //Replace characters special\r\n            lastName = this.normalizeString(lastName);\r\n            //remove space and other characters to lastName\r\n            lastName = lastName.replace(/[^\\w\\s]/gi, '').replace(/\\s/g, '');\r\n\r\n            /* Validate if firstname is longer than\r\n               REMAINDER - EXTRAS (1 lastName letter + '-' character)*/\r\n            if(firstName.length > REMAINDER - EXTRAS) {\r\n                firstName = firstName.substring(0, REMAINDER - EXTRAS);\r\n            }\r\n\r\n            // Create Alias value\r\n            alias = (firstName + lastName.substring(0,1)).toLowerCase();\r\n\r\n            //Generate random code\r\n            for (var i = 0; i < ID_LENGTH; i++) {\r\n                randomCode += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\r\n            }\r\n\r\n            //build username\r\n            username = alias + '-' + randomCode;\r\n\r\n            return username;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * changeLanguage\r\n        * @description - change site language\r\n        * @use - this.FunctionsUtilService.changeLanguage('es');\r\n        * @function\r\n        * @params {angular.IPromise<string>} language - language code\r\n        * @return {void}\r\n        */\r\n        changeLanguage(language): angular.IPromise<string> {\r\n            return this.$translate.use(language).then(\r\n                function(data) {\r\n                    return data;\r\n                }\r\n            );\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * joinDate\r\n        * @description - join separate values (day, month and year) and formatting\r\n        * a date to 'YYYY-MM-DD'\r\n        * @use - this.FunctionsUtilService.joinDate(obj);\r\n        * @function\r\n        * @params {string} day - day value\r\n        * @params {string} month - month value\r\n        * @params {string} year - year value\r\n        * @return {string} dateFormatted - date formatted.\r\n        */\r\n        joinDate(day, month, year): string {\r\n            let newDate = year + '-' + month + '-' + day;\r\n            //let dateFormatted = moment(newDate).format('YYYY-MM-DD');\r\n            return newDate;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * splitDate\r\n        * @description - Split Date in 3 parts: day, month and year\r\n        * @use - this.FunctionsUtilService.splitDate(date);\r\n        * @function\r\n        * @params {string} date - date value\r\n        * @return {app.core.interfaces.IDateSplitted} dateFormatted - date formatted.\r\n        */\r\n        splitDate(date): app.core.interfaces.IDateSplitted {\r\n            //CONSTANTS\r\n            //Safari issue with 'YYYY-MM-DD' format\r\n            const TEMPORAL_FORMAT = 'MM/DD/YYYY';\r\n            /*****************************/\r\n\r\n            let dateString = moment(date).format(TEMPORAL_FORMAT).split('/');\r\n            //Split date to day, month and year\r\n            let dateFormatted = {\r\n                day: dateString[1],\r\n                month: dateString[0],\r\n                year: dateString[2]\r\n            };\r\n\r\n            return dateFormatted;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * splitToColumns\r\n        * @description - split an array on one parent array with X arrays\r\n        * @use - this.FunctionsUtilService.splitToColumns(array, 2);\r\n        * @function\r\n        * @params {Array<any>} arr - array\r\n        * @params {number} size - size of new array\r\n        * @return {Array<any>} newArr - parent array with X arrays inside.\r\n        */\r\n        splitToColumns(arr, size) {\r\n            var newArr = [];\r\n            for (var i = 0; i < arr.length; i += size) {\r\n                newArr.push(arr.slice(i, i+size));\r\n            }\r\n            return newArr;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * buildMapConfig\r\n        * @description - build each marker on a specific map (based on a dataSet)\r\n        * @use - this.FunctionsUtilService.buildMapConfig(response,\r\n                                                          'search-map',\r\n                                                          {lat: 6.175434,lng: -75.583329});\r\n        * @function\r\n        * TODO: Asignar un tipo de datos al Array, ya que esta muy complicado entender que es dataSet\r\n        * @param {Array<any>} dataSet - dataSet array\r\n        * @param {string} mapType - map type\r\n        * @param {components.map.IPosition} position - position on map (lat and lng)\r\n        * @param {number} zoom - zoom on the mapa\r\n        * @return {components.map.IMapConfig} mapConfig - google map config.\r\n        */\r\n        buildMapConfig(dataSet, mapType, position, zoom): components.map.IMapConfig {\r\n            //VARIABLES\r\n            let mapConfig = {\r\n                type: mapType,\r\n                data: {\r\n                    position: position || {lat: 6.175434,lng: -75.583329},\r\n                    markers: [],\r\n                    zoom: zoom\r\n                }\r\n            };\r\n\r\n            if(dataSet) {\r\n                for (let i = 0; i < dataSet.length; i++) {\r\n\r\n                    let markerPosition = null;\r\n\r\n                    if(dataSet[i].profile) {\r\n                        markerPosition = new app.models.user.Position(dataSet[i].profile.location.position);\r\n                    } else if(dataSet[i].location) {\r\n                        markerPosition = new app.models.user.Position(dataSet[i].location.position);\r\n                    }\r\n\r\n                    mapConfig.data.markers.push({\r\n                        id: dataSet[i].id,\r\n                        position: markerPosition\r\n                    });\r\n\r\n                }\r\n            }\r\n\r\n            return mapConfig;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * generateRangesOfNumbers\r\n        * @description - generate a range of numbers (i.e from 3 until 34)\r\n        * @use - this.FunctionsUtilService.generateRangesOfNumbers(1, 31);\r\n        * @function\r\n        * @params {number} from - start number\r\n        * @params {number} to - finish number\r\n        * @return {Array<number>} array - range of numbers array.\r\n        */\r\n        generateRangesOfNumbers(from, to): Array<number> {\r\n            var array = [];\r\n            for (var i = from; i <= to; i++) {\r\n                array.push(i);\r\n            }\r\n            return array;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * buildNumberSelectList\r\n        * @description - buil numbers (days, years, etc) select list\r\n        * @use - this.FunctionsUtilService.buildNumberSelect(1, 31);\r\n        * @function\r\n        * @params {number} from - start number\r\n        * @params {number} to - finish number\r\n        * @return {Array<app.core.interfaces.ISelectList>} list - list format\r\n        * to use on one select list element\r\n        */\r\n        buildNumberSelectList(from, to): Array<app.core.interfaces.ISelectListElement> {\r\n            let dayRange = this.generateRangesOfNumbers(from, to);\r\n            let list = [];\r\n            for (let i = 0; i < dayRange.length; i++) {\r\n                list.push({value: dayRange[i]});\r\n            }\r\n\r\n            return list;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * progress\r\n        * @description - increase or reduce progress bar width\r\n        * @param {number} currentStep - current step\r\n        * @param {number} totalSteps - total steps\r\n        * @function\r\n        * @return void\r\n        */\r\n        progress(currentStep, totalSteps): string {\r\n            let percent = (100 / totalSteps) * (currentStep);\r\n            return percent + '%';\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * validator\r\n        * @description - All form's field validate rules\r\n        * @use - this.FunctionsUtilService.validator('sergioruizdavila@gmail.com',\r\n                                                     [Validation.Null, Validation.Email]);\r\n        * @function\r\n        * @param {any} value - value to validate (string, number, object, etc)\r\n        * @param {Array<Validation>} validations - list of validations required:\r\n        * (e.g. Null, String, Email, Number, Empty, etc)\r\n        * @return {IValid} obj - object with validation result: valid and message\r\n        */\r\n        //TODO: Hacer un refactor ya que voy a necesitar validar por min y max,\r\n        // asi que voy a tener que enviar el min y el max para que aqui lo valide.\r\n        validator(value, validations = []): IValid {\r\n            //CONSTANTS\r\n            const NULL_MESSAGE = this.$filter('translate')('%global.validation.null.message.text');\r\n            const EMPTY_MESSAGE = this.$filter('translate')('%global.validation.empty.message.text');\r\n            const DEFINED_MESSAGE = this.$filter('translate')('%global.validation.null.message.text');\r\n            const IS_NOT_ZERO_MESSAGE = this.$filter('translate')('%global.validation.is_not_zero.message.text');\r\n            const STRING_MESSAGE = this.$filter('translate')('%global.validation.string.message.text');\r\n            const NUMBER_MESSAGE = this.$filter('translate')('%global.validation.number.message.text');\r\n            const EMAIL_MESSAGE = this.$filter('translate')('%global.validation.email.message.text');\r\n            const TRUE_MESSAGE = this.$filter('translate')('%global.validation.true.message.text');\r\n            const NAN_MESSAGE = this.$filter('translate')('%global.validation.number.message.text');\r\n            /*******************************/\r\n            //VARIABLES\r\n            let obj = {valid: true, message: 'ok'};\r\n            /*******************************/\r\n\r\n            for (let i = 0; i < validations.length; i++) {\r\n\r\n                switch (validations[i]) {\r\n\r\n                    case Validation.Email:\r\n                        let pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                        obj.valid = pattern.test(value);\r\n                        if(obj.valid == false) {\r\n                            obj.message = EMAIL_MESSAGE;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.String:\r\n                        if(typeof value !== 'string') {\r\n                            obj.message = STRING_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.Null:\r\n                        if(value == null) {\r\n                            obj.message = NULL_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.Empty:\r\n                        if(value == '') {\r\n                            obj.message = EMPTY_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.Number:\r\n                        if(typeof value !== 'number') {\r\n                            obj.message = NUMBER_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.IsNotZero:\r\n                        if(parseInt(value) == 0) {\r\n                            obj.message = IS_NOT_ZERO_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.Defined:\r\n                        if(value === undefined) {\r\n                            obj.message = DEFINED_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.IsTrue:\r\n                        if(value !== true) {\r\n                            obj.message = TRUE_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                    case Validation.IsNotNaN:\r\n                        if(isNaN(value)){\r\n                            obj.message = NAN_MESSAGE;\r\n                            obj.valid = false;\r\n                        }\r\n                        break;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return obj;\r\n\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * External Function: extractCountriesFromHtml\r\n        * @external\r\n        * @description Get Countries and Codes from HTML (assets/schemas/countries/countries.html)\r\n        * @use 1. You have to paste countries html in one app template (i.e. studentPage.html)\r\n               2. On Dev Console Chrome put:\r\n        * var countriesList = app.core.util.functionsUtil.FunctionsUtilService.extractCountriesFromHtml()\r\n        * return on console: countries list Object formatted to i18n json\r\n        */\r\n        public static extractCountriesFromHtml(): any {\r\n            // VARIABLES\r\n            let countries_json = {};\r\n            let language = 'EN'; //Change to specific language (ES, EN, etc)\r\n            let html:any = document.getElementById(\"countriesList.\" + language);\r\n\r\n\r\n            for (let i = 0; i < html.length; i++) {\r\n                let countryText = html[i].innerText;\r\n                let countryCode = html[i].attributes[0].nodeValue;\r\n                countries_json[\"%country.\" + countryCode] = countryText;\r\n            }\r\n\r\n            console.log(JSON.stringify(countries_json));\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * averageNumbersArray\r\n        * @description - Calculate numbers array average\r\n        * @use - this.FunctionsUtilService.averageNumbersArray([1,4,4,5]);\r\n        * @function\r\n        * @param {Array<number>} values - list of numbers\r\n        * @return {number} average - average value\r\n        */\r\n        averageNumbersArray(values): number {\r\n            //VARIABLES\r\n            let total = 0;\r\n            let average = 0;\r\n            let amountValues = values.length;\r\n            /***************************/\r\n\r\n            for (let i = 0; i < values.length; i++) {\r\n                total = values[i] + total;\r\n            }\r\n\r\n            average = Math.round(total / amountValues);\r\n\r\n            return average;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * teacherRatingAverage\r\n        * @description - Calculate teacher rating average based on a ratings list given\r\n        * @use - this.FunctionsUtilService.teacherRatingAverage(ratingsArray);\r\n        * @function\r\n        * @param {Array<Object>} ratingsArr - list of rating objects\r\n        * @return {number} average - average value\r\n        */\r\n        //TODO: Analizar por que puse Array<Object> en vez de Array<Rating>\r\n        // y solucionar\r\n        teacherRatingAverage(ratingsArr: Array<Object>): number {\r\n            //VARIABLES\r\n            let average = 0;\r\n            let averageArr = [];\r\n            let ratings: Array<app.models.teacher.Rating> = [];\r\n\r\n            for (let i = 0; i < ratingsArr.length; i++) {\r\n\r\n                ratings.push(new app.models.teacher.Rating(ratingsArr[i]));\r\n\r\n                let newArr = [\r\n                    ratings[i].MethodologyValue,\r\n                    ratings[i].TeachingValue,\r\n                    ratings[i].CommunicationValue\r\n                ];\r\n\r\n                averageArr.push(this.averageNumbersArray(newArr));\r\n\r\n            }\r\n\r\n            average = this.averageNumbersArray(averageArr);\r\n\r\n            return average;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * addUserIndentifyMixpanel\r\n        * @description - Assign a Identify number to your user on MixPanel\r\n        * @use - this.FunctionsUtilService.addUserIndentifyMixpanel('1');\r\n        * @function\r\n        * @param {app.models.user.Profile} userData - user profile information\r\n        * @return {void}\r\n        */\r\n        addUserIndentifyMixpanel(userId: string): void {\r\n            mixpanel.identify(userId);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * setUserMixpanel\r\n        * @description - Set User on MixPanel service in order to track his behavior\r\n        * @use - this.FunctionsUtilService.setUserMixpanel(userObject);\r\n        * @function\r\n        * @param {app.models.user.Profile} userData - user profile information\r\n        * @return {void}\r\n        */\r\n        setUserMixpanel(userData: app.models.user.Profile): void {\r\n            mixpanel.people.set({\r\n                'username': userData.Username,\r\n                '$name': userData.FirstName + ' ' + userData.LastName,\r\n                'gender': userData.Gender,\r\n                '$email': userData.Email,\r\n                '$created': userData.DateJoined,\r\n                '$last_login': new Date()\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n        * setPropertyMixpanel\r\n        * @description - Set new property on user's MixPanel service\r\n        * @use - this.FunctionsUtilService.setPropertyMixpanel({key: 'value'});\r\n        * @function\r\n        * @param {Object} property - new property\r\n        * @return {void}\r\n        */\r\n        //TODO: Probar ya que nunca se uso.\r\n        setPropertyMixpanel(property: Object): void {\r\n            let arr = [];\r\n            arr.push(property);\r\n            let setData = {};\r\n            _.mapKeys(arr, function(value, key) {\r\n                setData[key] = value;\r\n            });\r\n\r\n            mixpanel.people.set(setData);\r\n        }\r\n\r\n\r\n        /**\r\n        * assignAmenitieIconClass\r\n        * @description - Assign icon class based on a type of amenities\r\n        * @use - this.FunctionsUtilService.assignIconClass('2');\r\n        * @function\r\n        * @param {Object} property - new property\r\n        * @return {void}\r\n        */\r\n        assignAmenitieIconClass(amenitie: string): string {\r\n\r\n            //VARIABLES\r\n            let iconClass = '';\r\n            //CONSTANTS\r\n            const options = [\r\n                {\r\n                    key: '1',\r\n                    value: 'wifi'\r\n                },\r\n                {\r\n                    key: '2',\r\n                    value: 'laptop'\r\n                },\r\n                {\r\n                    key: '3',\r\n                    value: 'air-conditing'\r\n                },\r\n                {\r\n                    key: '4',\r\n                    value: 'heating'\r\n                },\r\n                {\r\n                    key: '5',\r\n                    value: 'breakfast'\r\n                },\r\n                {\r\n                    key: '6',\r\n                    value: 'lunch'\r\n                },\r\n                {\r\n                    key: '7',\r\n                    value: 'dinner'\r\n                },\r\n                {\r\n                    key: '8',\r\n                    value: 'snack'\r\n                },\r\n                {\r\n                    key: '9',\r\n                    value: 'coffee'\r\n                },\r\n                {\r\n                    key: '10',\r\n                    value: 'tea'\r\n                },\r\n                {\r\n                    key: '11',\r\n                    value: 'hammock'\r\n                },\r\n                {\r\n                    key: '12',\r\n                    value: 'classroom'\r\n                },\r\n                {\r\n                    key: '13',\r\n                    value: 'computer'\r\n                },\r\n                {\r\n                    key: '14',\r\n                    value: 'video-projector'\r\n                },\r\n                {\r\n                    key: '15',\r\n                    value: 'lounge'\r\n                }\r\n            ];\r\n\r\n            for (let i = 0; i < options.length; i++) {\r\n                if(options[i].key === amenitie) {\r\n                    iconClass = options[i].value;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return iconClass;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /*-- MODULE DEFINITION --*/\r\n    angular\r\n    .module('mainApp.core.util', [])\r\n    .service(FunctionsUtilService.serviceId, FunctionsUtilService);\r\n\r\n\r\n}\r\n","/**\n* getDataStaticJsonService\n* @description - get data from static jsons service\n* @constructor\n*/\n\nmodule app.core.util.getDataStaticJson {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IGetDataStaticJsonService {\n        returnValuei18n: (type: string, code: string) => string;\n        getMonthi18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getSexi18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getCountryi18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getLanguagei18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getDegreei18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n        getTypeOfImmersioni18n: () => Array<app.core.interfaces.IDataFromJsonI18n>;\n    }\n\n    export interface IAppTranslate extends angular.translate.ITranslateService {\n        getTranslationTable: () => Object;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class GetDataStaticJsonService implements IGetDataStaticJsonService {\n\n        static serviceId = 'mainApp.core.util.GetDataStaticJsonService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$translate'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $translate: IAppTranslate) {\n            console.log('getDataStaticJsonService service called');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * returnValuei18n\n        * @description - return value based on code from i18n json\n        * @use - this.getDataFromJson.returnValuei18n('country', 'CO');\n        * @function\n        * @return {string} object's key from json i18n (e.g. '%country.CO')\n        */\n        returnValuei18n(type, code): string {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let key = '';\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(type) >= 0) {\n\n                    let regex = new RegExp('%' + type + '.', 'g');\n                    let codeFromJson = element.replace(regex,'');\n                    if(codeFromJson === code){\n                        key = element;\n                    }\n\n                }\n            }\n\n            return key;\n\n        }\n\n\n\n        /**\n        * getMonthi18n\n        * @description - get months texts & codes from i18n json files\n        * @use - this.getDataFromJson.getMonthi18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} months object array\n        */\n        getMonthi18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"month\") >= 0) {\n\n                    let code = element.replace(/%month./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getSexi18n\n        * @description - get user's sex texts & codes from i18n json files\n        * @use - this.getDataFromJson.getSexi18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} sexs object array\n        */\n        getSexi18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"sex\") >= 0) {\n\n                    let code = element.replace(/%sex./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getCountryi18n\n        * @description - get countries texts & codes from i18n json files\n        * @use - this.getDataFromJson.getCountryi18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} countries object array\n        */\n        getCountryi18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"country\") >= 0) {\n\n                    let code = element.replace(/%country./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getLanguagei18n\n        * @description - get languages texts & codes from i18n json files\n        * @use - this.getDataFromJson.getLanguagei18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} languages object array\n        */\n        getLanguagei18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"language\") >= 0) {\n\n                    let code = element.replace(/%language./g,'');\n                    let value = jsonDoc[element];\n                    array.push({value: value, code: code});\n                }\n            }\n\n            return array;\n        }\n\n\n\n        /**\n        * getDegreei18n\n        * @description - get degree texts & codes from i18n json files\n        * @use - this.getDataFromJson.getDegreei18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} degree object array\n        */\n        getDegreei18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"degree\") >= 0) {\n\n                    let code = element.replace(/%degree./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n\n\n        /**\n        * getTypeOfImmersioni18n\n        * @description - get type of immersion texts & codes from i18n json files\n        * @use - this.getDataFromJson.getTypeOfImmersioni18n();\n        * @function\n        * @return {Array<app.core.interfaces.IDataFromJsonI18n>} typeOfImmersion object array\n        */\n        getTypeOfImmersioni18n(): Array<app.core.interfaces.IDataFromJsonI18n> {\n            //VARIABLES\n            let jsonDoc = this.$translate.getTranslationTable();\n            let array = [];\n\n            for (var element in jsonDoc) {\n                if (element.indexOf(\"immersion\") >= 0) {\n\n                    let code = element.replace(/%immersion./g,'');\n                    array.push({value: element, code: code});\n                }\n            }\n\n            return array;\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n    .module('mainApp.core.util')\n    .service(GetDataStaticJsonService.serviceId, GetDataStaticJsonService);\n\n}\n","/**\r\n * messageUtilService\r\n * @description - Some description\r\n * @constructor\r\n */\r\n\r\n\r\nmodule app.core.util.messageUtil {\r\n\r\n    'use strict';\r\n\r\n    export interface IMessageUtilService {\r\n        //properties\r\n\r\n        //methods\r\n        success: (message: string) => void;\r\n        error: (message: string) => void;\r\n        info: (message: string) => void;\r\n    }\r\n\r\n    class messageUtilService implements IMessageUtilService {\r\n\r\n        static serviceId = 'mainApp.core.util.messageUtilService';\r\n\r\n        //inject dependencies\r\n        static $inject = ['$filter'];\r\n\r\n        constructor(private $filter: angular.IFilterService) {\r\n            toastr.options.positionClass = \"toast-top-right\";\r\n            toastr.options.showDuration = 300;\r\n            toastr.options.hideDuration = 300;\r\n            //With timeout = 0, doesn't hide until user press close button\r\n            toastr.options.timeOut = 0;\r\n        }\r\n\r\n        //methods\r\n        success(message: string): void {\r\n            toastr.options.timeOut = 2000;\r\n            toastr.success(message);\r\n        }\r\n\r\n        error(message: string): void {\r\n            //CONSTANTS\r\n            const ERROR_SERVER_MESSAGE = this.$filter('translate')('%notification.error.server.text');\r\n            /***************************************/\r\n            //default config\r\n            toastr.options.closeButton = true;\r\n            toastr.options.timeOut = 0;\r\n            if (!message) {\r\n                message = ERROR_SERVER_MESSAGE;\r\n            }\r\n            toastr.error(message);\r\n        }\r\n\r\n        info(message: string): void {\r\n            toastr.options.closeButton = true;\r\n            toastr.options.timeOut = 0;\r\n            toastr.info(message);\r\n        }\r\n\r\n\r\n        static instance($filter: angular.IFilterService): IMessageUtilService {\r\n            return new messageUtilService($filter);\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module('mainApp.core.util')\r\n        .factory(messageUtilService.serviceId, messageUtilService.instance);\r\n\r\n}\r\n","/**\n * Specifies the Classes and Interfaces related to Feedback in our Model\n */\n\nmodule app.models.feedback {\n\n    /****************************************/\n    /*         INTERFACES DEFINITION        */\n    /****************************************/\n\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n\n    export class Feedback {\n\n        /*-- PROPERTIES --*/\n        private id: string;\n        private uid: string;\n        private nextCountry: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Feedback Model instanced');\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.nextCountry = obj.nextCountry || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply next country uid'; }\n            this.uid = uid;\n        }\n\n        get NextCountry() {\n            return this.nextCountry;\n        }\n\n        set NextCountry(nextCountry: string) {\n            if (nextCountry === undefined) { throw 'Please supply next country'; }\n            this.nextCountry = nextCountry;\n        }\n\n    }\n\n}\n","/**\n * FeedbackService\n * @description - Services related on Feedback Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.models.feedback {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IFeedbackService {\n        createFeedback: (feedback: app.models.feedback.Feedback) => angular.IPromise<any>;\n        getEarlyById: (id: string) => angular.IPromise<any>;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class FeedbackService implements IFeedbackService {\n\n        static serviceId = 'mainApp.models.feedback.FeedbackService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private restApi: app.core.restApi.IRestApi) {\n            //LOG\n            console.log('feedback service instanced');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * createFeedback\n        * @description - create Feedback entity on DB\n        * @function\n        * @params {app.models.feedback.Feedback} feedback - feedback Object\n        * @return {promise} promise - Return a promise of \"Add Feedback Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        createFeedback(feedback): ng.IPromise<any> {\n            var promise;\n            let url = 'feedbacks';\n            promise = this.restApi.create({ url: url }, feedback)\n                .$promise.then(\n                    function (response) {\n                        return response;\n                    }, function (error) {\n                        return error;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n\n            return promise;\n        }\n\n\n\n        /**\n        * getEarlyById\n        * @description - get early adopter by Id\n        * @use - this.UserService.getEarlyById('98d667ae');\n        * @function\n        * @params {string} id - early adopter id\n        * @return {angular.IPromise<any>} promise - return early adopter by Id\n        */\n        getEarlyById(id): angular.IPromise<any> {\n            //VARIABLES\n            let url = 'early/';\n\n            return this.restApi.show({url: url, id: id}).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.models.feedback', [])\n        .service(FeedbackService.serviceId, FeedbackService);\n\n}\n","/**\n * Specifies the Classes and Interfaces related to School in our Model\n */\n\nmodule app.models.school {\n\n    /****************************************/\n    /*         INTERFACES DEFINITION        */\n    /****************************************/\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n\n    export class School {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private user: string;\n        private photo: string;\n        private name: string;\n        private email: string;\n        private about: string;\n        private website: string;\n        private phoneNumber: string;\n        private facebook: string;\n        private twitter: string;\n        private instagram: string;\n        private meetupGroup: string;\n        private facebookGroup: string;\n        private location: app.models.user.Location;\n        private languageTeach: Array<string>;\n        private immersion: Immersion;\n        private languageExchange: boolean;\n        private workExchange: WorkExchange;\n        private volunteering: Volunteering;\n        private tour: Tour;\n        private atmosphere: number;\n        private amenities: Amenities;\n        private accommodation: Accommodation;\n        private classesBegin: Array<string>;\n        private price: Price;\n        private discount: Discount;\n        private package: Package;\n        private paymentMethod: PaymentMethod;\n        private bookingFee: BookingFee;\n        private active: boolean;\n        private createdAt: string;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            DEBUG && console.log('School Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.user = obj.user || '';\n            this.photo = obj.photo || '';\n            this.name = obj.name || '';\n            this.email = obj.email || '';\n            this.about = obj.about || '';\n            this.website = obj.website || '';\n            this.phoneNumber = obj.phoneNumber || '';\n            this.facebook = obj.facebook || '';\n            this.twitter = obj.twitter || '';\n            this.instagram = obj.instagram || '';\n            this.meetupGroup = obj.meetupGroup || '';\n            this.facebookGroup = obj.facebookGroup || '';\n            this.location = new app.models.user.Location(obj.location);\n            this.languageTeach = obj.languageTeach || [];\n            this.immersion = new Immersion(obj.immersion);\n            this.languageExchange = obj.languageExchange || false;\n            this.workExchange = new WorkExchange(obj.workExchange);\n            this.volunteering = new Volunteering(obj.volunteering);\n            this.tour = new Tour(obj.tour);\n            this.atmosphere = obj.atmosphere || 0;\n            this.amenities = new Amenities(obj.amenities);\n            this.accommodation = new Accommodation(obj.accommodation);\n            this.classesBegin = obj.classesBegin || [];\n            this.price = new Price(obj.price);\n            this.discount = new Discount(obj.discount);\n            this.package = new Package(obj.package);\n            this.paymentMethod = new PaymentMethod(obj.paymentMethod);\n            this.bookingFee = new BookingFee(obj.bookingFee);\n            this.active = obj.active || false;\n            this.createdAt = obj.createdAt || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        get User() {\n            return this.user;\n        }\n\n        set User(user: string) {\n            if (user === undefined) { throw 'Please supply school user id manager'; }\n            this.user = user;\n        }\n\n        get Photo() {\n            return this.photo;\n        }\n\n        set Photo(photo: string) {\n            if (photo === undefined) { throw 'Please supply school photo'; }\n            this.photo = photo;\n        }\n\n        get Name() {\n            return this.name;\n        }\n\n        set Name(name: string) {\n            if (name === undefined) { throw 'Please supply school name'; }\n            this.name = name;\n        }\n\n        get Email() {\n            return this.email;\n        }\n\n        set Email(email: string) {\n            if (email === undefined) { throw 'Please supply profile email'; }\n            this.email = email;\n        }\n\n        get About() {\n            return this.about;\n        }\n\n        set About(about: string) {\n            if (about === undefined) { throw 'Please supply school about'; }\n            this.about = about;\n        }\n\n        get Website() {\n            return this.website;\n        }\n\n        set Website(website: string) {\n            if (website === undefined) { throw 'Please supply school website'; }\n            this.website = website;\n        }\n\n        get PhoneNumber() {\n            return this.phoneNumber;\n        }\n\n        set PhoneNumber(phoneNumber: string) {\n            if (phoneNumber === undefined) { throw 'Please supply school phoneNumber'; }\n            this.phoneNumber = phoneNumber;\n        }\n\n        get Facebook() {\n            return this.facebook;\n        }\n\n        set Facebook(facebook: string) {\n            if (facebook === undefined) { throw 'Please supply school facebook'; }\n            this.facebook = facebook;\n        }\n\n        get Twitter() {\n            return this.twitter;\n        }\n\n        set Twitter(twitter: string) {\n            if (twitter === undefined) { throw 'Please supply school twitter'; }\n            this.twitter = twitter;\n        }\n\n        get Instagram() {\n            return this.instagram;\n        }\n\n        set Instagram(instagram: string) {\n            if (instagram === undefined) { throw 'Please supply school instagram'; }\n            this.instagram = instagram;\n        }\n\n        get MeetupGroup() {\n            return this.meetupGroup;\n        }\n\n        set MeetupGroup(meetupGroup: string) {\n            if (meetupGroup === undefined) { throw 'Please supply school meetupGroup'; }\n            this.meetupGroup = meetupGroup;\n        }\n\n        get FacebookGroup() {\n            return this.facebookGroup;\n        }\n\n        set FacebookGroup(facebookGroup: string) {\n            if (facebookGroup === undefined) { throw 'Please supply school facebookGroup'; }\n            this.facebookGroup = facebookGroup;\n        }\n\n        get LanguageTeach() {\n            return this.languageTeach;\n        }\n\n        set LanguageTeach(languageTeach: Array<string>) {\n            if (languageTeach === undefined) { throw 'Please supply school language teach'; }\n            this.languageTeach = languageTeach;\n        }\n\n        get Immersion() {\n            return this.immersion;\n        }\n\n        set Immersion(immersion: Immersion) {\n            if (immersion === undefined) { throw 'Please supply school immersion'; }\n            this.immersion = immersion;\n        }\n\n        get LanguageExchange() {\n            return this.languageExchange;\n        }\n\n        set LanguageExchange(languageExchange: boolean) {\n            if (languageExchange === undefined) { throw 'Please supply school language exchange'; }\n            this.languageExchange = languageExchange;\n        }\n\n        get WorkExchange() {\n            return this.workExchange;\n        }\n\n        set WorkExchange(workExchange: WorkExchange) {\n            if (workExchange === undefined) { throw 'Please supply school work exchange'; }\n            this.workExchange = workExchange;\n        }\n\n        get Volunteering() {\n            return this.volunteering;\n        }\n\n        set Volunteering(volunteering: Volunteering) {\n            if (volunteering === undefined) { throw 'Please supply school volunteering'; }\n            this.volunteering = volunteering;\n        }\n\n        get Tour() {\n            return this.tour;\n        }\n\n        set Tour(tour: Tour) {\n            if (tour === undefined) { throw 'Please supply school tour'; }\n            this.tour = tour;\n        }\n\n        get Atmosphere() {\n            return this.atmosphere;\n        }\n\n        set Atmosphere(atmosphere: number) {\n            if (atmosphere === undefined) { throw 'Please supply school atmosphere'; }\n            this.atmosphere = atmosphere;\n        }\n\n        get Amenities() {\n            return this.amenities;\n        }\n\n        set Amenities(amenities: Amenities) {\n            if (amenities === undefined) { throw 'Please supply school amenities'; }\n            this.amenities = amenities;\n        }\n\n        get Accommodation() {\n            return this.accommodation;\n        }\n\n        set Accommodation(accommodation: Accommodation) {\n            if (accommodation === undefined) { throw 'Please supply school accommodation'; }\n            this.accommodation = accommodation;\n        }\n\n        get ClassesBegin() {\n            return this.classesBegin;\n        }\n\n        set ClassesBegin(classesBegin: Array<string>) {\n            if (classesBegin === undefined) { throw 'Please supply school classes begin'; }\n            this.classesBegin = classesBegin;\n        }\n\n        get Price() {\n            return this.price;\n        }\n\n        set Price(price: Price) {\n            if (price === undefined) { throw 'Please supply school price'; }\n            this.price = price;\n        }\n\n        get Discount() {\n            return this.discount;\n        }\n\n        set Discount(discount: Discount) {\n            if (discount === undefined) { throw 'Please supply school discount'; }\n            this.discount = discount;\n        }\n\n        get Package() {\n            return this.package;\n        }\n\n        set Package(value: Package) {\n            if (value === undefined) { throw 'Please supply school package'; }\n            this.package = value;\n        }\n\n        get PaymentMethod() {\n            return this.paymentMethod;\n        }\n\n        set PaymentMethod(paymentMethod: PaymentMethod) {\n            if (paymentMethod === undefined) { throw 'Please supply school payment methods'; }\n            this.paymentMethod = paymentMethod;\n        }\n\n        get BookingFee() {\n            return this.bookingFee;\n        }\n\n        set BookingFee(bookingFee: BookingFee) {\n            if (bookingFee === undefined) { throw 'Please supply school booking fee'; }\n            this.bookingFee = bookingFee;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of school'; }\n            this.active = active;\n        }\n\n        get CreatedAt() {\n            return this.createdAt;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*           SCHOOL IMMERSION CLASS DEFINITION           */\n    /*********************************************************/\n    export class Immersion {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private option: Array<string>;\n        private otherOption: string;\n        private rating: string;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Immersion Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.option = obj.option || [];\n            this.otherOption = obj.otherOption || '';\n            this.rating = obj.rating || 0;\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of school'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of school'; }\n            this.active = active;\n        }\n\n        get Option() {\n            return this.option;\n        }\n\n        set Option(option: Array<string>) {\n            if (option === undefined) { throw 'Please supply option value of school'; }\n            this.option = option;\n        }\n\n        get OtherOption() {\n            return this.otherOption;\n        }\n\n        set OtherOption(otherOption: string) {\n            if (otherOption === undefined) { throw 'Please supply other option value of school'; }\n            this.otherOption = otherOption;\n        }\n\n        get Rating() {\n            return this.rating;\n        }\n\n        set Rating(rating: string) {\n            if (rating === undefined) { throw 'Please supply rating immersion value of school'; }\n            this.rating = rating;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*            SCHOOL PACKAGE CLASS DEFINITION            */\n    /*********************************************************/\n    export class Package {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private packageOption: PackageOption;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Package Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.packageOption = new PackageOption(obj.packageOption);\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of package school'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of package school'; }\n            this.active = active;\n        }\n\n        get PackageOption() {\n            return this.packageOption;\n        }\n\n        set PackageOption(packageOption: PackageOption) {\n            if (packageOption === undefined) { throw 'Please supply package option value of package school'; }\n            this.packageOption = packageOption;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*         SCHOOL PACKAGE OPTION CLASS DEFINITION        */\n    /*********************************************************/\n    export class PackageOption {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private name: string;\n        private price: number;\n        private description: string;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Package Option Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.name = obj.name || '';\n            this.price = obj.price || 0;\n            this.description = obj.description || '';\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of package option school'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of package option school'; }\n            this.active = active;\n        }\n\n        get Name() {\n            return this.name;\n        }\n\n        set Name(name: string) {\n            if (name === undefined) { throw 'Please supply name value of package option school'; }\n            this.name = name;\n        }\n\n        get Price() {\n            return this.price;\n        }\n\n        set Price(price: number) {\n            if (price === undefined) { throw 'Please supply price value of package option school'; }\n            this.price = price;\n        }\n\n        get Description() {\n            return this.description;\n        }\n\n        set Description(description: string) {\n            if (description === undefined) { throw 'Please supply description value of package option school'; }\n            this.description = description;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*         SCHOOL WORK EXCHANGE CLASS DEFINITION         */\n    /*********************************************************/\n    export class WorkExchange {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private workExchangeOption: WorkExchangeOption;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Work Exchange Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.workExchangeOption = new WorkExchangeOption(obj.workExchangeOption);\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of work exchange'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of work exchange'; }\n            this.active = active;\n        }\n\n        get WorkExchangeOption() {\n            return this.workExchangeOption;\n        }\n\n        set WorkExchangeOption(workExchangeOption: WorkExchangeOption) {\n            if (workExchangeOption === undefined) { throw 'Please supply option value of work exchange option'; }\n            this.workExchangeOption = workExchangeOption;\n        }\n\n    }\n\n\n    export class WorkExchangeOption {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private category: number;\n        private terms: string;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Work Exchange Option Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.category = obj.category || 0;\n            this.terms = obj.terms || '';\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of work exchange'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of work exchange'; }\n            this.active = active;\n        }\n\n        get Category() {\n            return this.category;\n        }\n\n        set Category(category: number) {\n            if (category === undefined) { throw 'Please supply category value of work exchange'; }\n            this.category = category;\n        }\n\n        get Terms() {\n            return this.terms;\n        }\n\n        set Terms(terms: string) {\n            if (terms === undefined) { throw 'Please supply terms value of work exchange'; }\n            this.terms = terms;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*          SCHOOL VOLUNTEERING CLASS DEFINITION         */\n    /*********************************************************/\n    export class Volunteering {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private option: Array<string>;\n        private rating: number;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Volunteering Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.option = obj.option || [];\n            this.rating = obj.rating || 0;\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of volunteering'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of volunteering'; }\n            this.active = active;\n        }\n\n        get Option() {\n            return this.option;\n        }\n\n        set Option(option: Array<string>) {\n            if (option === undefined) { throw 'Please supply volunteering option value of school'; }\n            this.option = option;\n        }\n\n        get Rating() {\n            return this.rating;\n        }\n\n        set Rating(rating: number) {\n            if (rating === undefined) { throw 'Please supply rating volunteering value of school'; }\n            this.rating = rating;\n        }\n    }\n\n\n    /*********************************************************/\n    /*             SCHOOL TOURS CLASS DEFINITION             */\n    /*********************************************************/\n    export class Tour {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private option: Array<string>;\n        private cityTour: boolean;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Tours Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.option = obj.option || [];\n            this.cityTour = obj.cityTour || false;\n        }\n\n        /*********************************/\n        /*           METHODS             */\n        /*********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of volunteering'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of volunteering'; }\n            this.active = active;\n        }\n\n        get Option() {\n            return this.option;\n        }\n\n        set Option(option: Array<string>) {\n            if (option === undefined) { throw 'Please supply volunteering option value of school'; }\n            this.option = option;\n        }\n\n        get CityTour() {\n            return this.cityTour;\n        }\n\n        set CityTour(cityTour: boolean) {\n            if (cityTour === undefined) { throw 'Please supply cityTour value of school'; }\n            this.cityTour = cityTour;\n        }\n    }\n\n\n    /*********************************************************/\n    /*           SCHOOL AMENITIES CLASS DEFINITION           */\n    /*********************************************************/\n    export class Amenities {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private option: Array<string>;\n        private otherOption: string;\n        private rating: number;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Amenities Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.option = obj.option || [];\n            this.otherOption = obj.otherOption || '';\n            this.rating = obj.rating || 0;\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of amenities'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of amenities'; }\n            this.active = active;\n        }\n\n        get Option() {\n            return this.option;\n        }\n\n        set Option(option: Array<string>) {\n            if (option === undefined) { throw 'Please supply amenities option value of school'; }\n            this.option = option;\n        }\n\n        get OtherOption() {\n            return this.otherOption;\n        }\n\n        set OtherOption(otherOption: string) {\n            if (otherOption === undefined) { throw 'Please supply other amenities options value of school'; }\n            this.otherOption = otherOption;\n        }\n\n        get Rating() {\n            return this.rating;\n        }\n\n        set Rating(rating: number) {\n            if (rating === undefined) { throw 'Please supply rating amenities value of school'; }\n            this.rating = rating;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*          SCHOOL ACCOMMODATION CLASS DEFINITION        */\n    /*********************************************************/\n    export class Accommodation {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private accommodationOption: Array<AccommodationOption>;\n        private rating: number;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Accommodation Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.rating = obj.rating || 0;\n\n            if(obj != {}) {\n\n                this.accommodationOption = [];\n                for (let key in obj.accommodationOption) {\n                    let accommodationOptionInstance = new AccommodationOption(obj.accommodationOption[key]);\n                    this.addAccommodationOption(accommodationOptionInstance);\n                }\n\n            } else {\n                this.accommodationOption = [];\n            }\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of Accommodation'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of Accommodation'; }\n            this.active = active;\n        }\n\n        get Rating() {\n            return this.rating;\n        }\n\n        set Rating(rating: number) {\n            if (rating === undefined) { throw 'Please supply rating accommodation value of school'; }\n            this.rating = rating;\n        }\n\n        get AccommodationOption() {\n            return this.accommodationOption;\n        }\n\n        addAccommodationOption(accommodationOption: AccommodationOption): void {\n            if(accommodationOption === undefined) { throw 'Please supply accommodation option value (Add)'; }\n            this.accommodationOption.push(accommodationOption);\n        }\n\n        editAccommodationOption(accommodationOption: AccommodationOption): void {\n            if(accommodationOption === undefined) { throw 'Please supply Accommodation Option value (Edit)'; }\n            //Edit existing AccommodationOption\n            this.accommodationOption.forEach(function (element, index, array) {\n                if (accommodationOption.Id === element.Id) {\n                    array[index] = accommodationOption;\n                }\n            });\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*          SCHOOL ACCOMMODATION CLASS DEFINITION        */\n    /*********************************************************/\n    export class AccommodationOption {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private category: number;\n        private otherAmenities: string;\n        private price: number;\n        private amenities: Array<string>;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Accommodation Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.category = obj.category || 0;\n            this.otherAmenities = obj.otherAmenities || '';\n            this.price = obj.price || 0;\n            this.amenities = obj.amenities || [];\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of Accommodation'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of Accommodation'; }\n            this.active = active;\n        }\n\n        get Category() {\n            return this.category;\n        }\n\n        set Category(category: number) {\n            if (category === undefined) { throw 'Please supply category value of Accommodation'; }\n            this.category = category;\n        }\n\n        get OtherAmenities() {\n            return this.otherAmenities;\n        }\n\n        set OtherAmenities(otherAmenities: string) {\n            if (otherAmenities === undefined) { throw 'Please supply other amenities value of Accommodation'; }\n            this.otherAmenities = otherAmenities;\n        }\n\n        get Price() {\n            return this.price;\n        }\n\n        set Price(price: number) {\n            if (price === undefined) { throw 'Please supply price value of Accommodation'; }\n            this.price = price;\n        }\n\n        get Amenities() {\n            return this.amenities;\n        }\n\n        set Amenities(amenities: Array<string>) {\n            if (amenities === undefined) { throw 'Please supply amenities option value of Accommodation'; }\n            this.amenities = amenities;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*              SCHOOL PRICE CLASS DEFINITION            */\n    /*********************************************************/\n    export class Price {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private privateClass: PrivateClass;\n        private groupClass: GroupClass;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School Price Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.privateClass = new PrivateClass(obj.privateClass);\n            this.groupClass = new GroupClass(obj.groupClass);\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of School Price'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of School Price'; }\n            this.active = active;\n        }\n\n        get PrivateClass() {\n            return this.privateClass;\n        }\n\n        set PrivateClass(privateClass: PrivateClass) {\n            if (privateClass === undefined) { throw 'Please supply privateClass value of School Price'; }\n            this.privateClass = privateClass;\n        }\n\n        get GroupClass() {\n            return this.groupClass;\n        }\n\n        set GroupClass(groupClass: GroupClass) {\n            if (groupClass === undefined) { throw 'Please supply groupClass value of School Price'; }\n            this.groupClass = groupClass;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*              SCHOOL PRIVATE CLASS DEFINITION          */\n    /*********************************************************/\n    export class PrivateClass {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private generalType: ClassType;\n        private intensiveType: ClassType;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School Private classes Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.generalType = new ClassType(obj.generalType);\n            this.intensiveType = new ClassType(obj.intensiveType);\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of School Private classes'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of School Private classes'; }\n            this.active = active;\n        }\n\n        get GeneralType() {\n            return this.generalType;\n        }\n\n        set GeneralType(generalType: ClassType) {\n            if (generalType === undefined) { throw 'Please supply general type value of School Private classes'; }\n            this.generalType = generalType;\n        }\n\n        get IntensiveType() {\n            return this.intensiveType;\n        }\n\n        set IntensiveType(intensiveType: ClassType) {\n            if (intensiveType === undefined) { throw 'Please supply intensive type value of School Private classes'; }\n            this.intensiveType = intensiveType;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*              SCHOOL GROUP CLASS DEFINITION            */\n    /*********************************************************/\n    export class GroupClass {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private generalType: GroupType;\n        private intensiveType: GroupType;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School Group classes Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.generalType = new GroupType(obj.generalType);\n            this.intensiveType = new GroupType(obj.intensiveType);\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of School Group classes'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of School Group classes'; }\n            this.active = active;\n        }\n\n        get GeneralType() {\n            return this.generalType;\n        }\n\n        set GeneralType(generalType: GroupType) {\n            if (generalType === undefined) { throw 'Please supply general type value of School Group classes'; }\n            this.generalType = generalType;\n        }\n\n        get IntensiveType() {\n            return this.intensiveType;\n        }\n\n        set IntensiveType(intensiveType: GroupType) {\n            if (intensiveType === undefined) { throw 'Please supply intensive type value of School Group classes'; }\n            this.intensiveType = intensiveType;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*               SCHOOL CLASS TYPE DEFINITION            */\n    /*********************************************************/\n    export class ClassType {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private value: number;\n        private hour: number;\n        private terms: string;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School classes Type Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.value = obj.value || 0;\n            this.hour = obj.hour || 0;\n            this.terms = obj.terms || '';\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of School classes type'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of School classes type'; }\n            this.active = active;\n        }\n\n        get Value() {\n            return this.value;\n        }\n\n        set Value(value: number) {\n            if (value === undefined) { throw 'Please supply price value of School classes type'; }\n            this.value = value;\n        }\n\n        get Hour() {\n            return this.hour;\n        }\n\n        set Hour(hour: number) {\n            if (hour === undefined) { throw 'Please supply hour value of School classes type'; }\n            this.hour = hour;\n        }\n\n        get Terms() {\n            return this.terms;\n        }\n\n        set Terms(terms: string) {\n            if (terms === undefined) { throw 'Please supply terms value of School classes type'; }\n            this.terms = terms;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*          SCHOOL GROUP CLASS TYPE DEFINITION           */\n    /*********************************************************/\n    export class GroupType extends ClassType {\n\n        /*-- PROPERTIES --*/\n        private students: Array<number>;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School group classes Type Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            super(obj);\n            this.students = obj.students || [];\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Students() {\n            return this.students;\n        }\n\n        set Students(students: Array<number>) {\n            if (students === undefined) { throw 'Please supply students value of School group classes type'; }\n            this.students = students;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*            SCHOOL DISCOUNT CLASS DEFINITION           */\n    /*********************************************************/\n    export class Discount {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private option: Array<string>;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School Discount Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.option = obj.option || [];\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of School discount'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of School discount'; }\n            this.active = active;\n        }\n\n        get Option() {\n            return this.option;\n        }\n\n        set Option(option: Array<string>) {\n            if (option === undefined) { throw 'Please supply option value of School discount'; }\n            this.option = option;\n        }\n\n    }\n\n\n    /*********************************************************/\n    /*         SCHOOL PAYMENT METHODS CLASS DEFINITION       */\n    /*********************************************************/\n    export class PaymentMethod {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private methods: Array<string>;\n        private other: Array<string>;\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School Payment Methods Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.methods = obj.methods || [];\n            this.other = obj.other || [];\n        }\n\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of School payment methods'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of School payment methods'; }\n            this.active = active;\n        }\n\n        get Methods() {\n            return this.methods;\n        }\n\n        set Methods(methods: Array<string>) {\n            if (methods === undefined) { throw 'Please supply methods value of School payment methods'; }\n            this.methods = methods;\n        }\n\n        get Other() {\n            return this.other;\n        }\n\n        set Other(other: Array<string>) {\n            if (other === undefined) { throw 'Please supply other value of School payment methods'; }\n            this.other = other;\n        }\n    }\n\n\n    /*********************************************************/\n    /*          SCHOOL BOOKING FEE CLASS DEFINITION          */\n    /*********************************************************/\n    export class BookingFee {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private active: boolean;\n        private price: number;\n        private terms: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('School Booking Fee Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.active = obj.active || false;\n            this.price = obj.price || 0;\n            this.terms = obj.terms || '';\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id value of School booking fee'; }\n            this.id = id;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of School booking fee'; }\n            this.active = active;\n        }\n\n        get Price() {\n            return this.price;\n        }\n\n        set Price(price: number) {\n            if (price === undefined) { throw 'Please supply price value of School booking fee'; }\n            this.price = price;\n        }\n\n    }\n\n}\n","/**\n * SchoolService\n * @description - Services related on School Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.models.school {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ISchoolService {\n        getSchoolById: (id: string) => angular.IPromise<any>;\n        getSchoolByUserId: (userId: string) => angular.IPromise<any>;\n        getAllSchools: () => angular.IPromise<any>;\n    }\n\n    export interface ISchoolQueryObject {\n        next: string;\n        previous: string;\n        count: number;\n        results: Array<app.models.school.School>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SchoolService implements ISchoolService {\n\n        static serviceId = 'mainApp.models.school.SchoolService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        SCHOOL_URI: string;\n        USER_SCHOOL_URI: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService',\n            'mainApp.auth.AuthService',\n            '$q'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private restApi: app.core.restApi.IRestApi,\n            private AuthService: app.auth.IAuthService,\n            private $q: angular.IQService) {\n\n            //LOG\n            DEBUG && console.log('schools service instanced');\n\n            //CONSTANTS\n            this.SCHOOL_URI = 'schools';\n            this.USER_SCHOOL_URI = 'schools?userId=';\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * getSchoolById\n        * @description - get school by Id\n        * @use - this.SchoolService.getSchoolById('98d667ae');\n        * @function\n        * @params {string} id - user id\n        * @return {angular.IPromise<any>} promise - return school by Id\n        */\n        getSchoolById(id): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.SCHOOL_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.show({url: url, id: id}).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * getSchoolByUserId\n        * @description - get school by user profile id filter value\n        * @function\n        * @return {angular.IPromise<any>} return a promise with user schools associated data\n        */\n        getSchoolByUserId(userId): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.USER_SCHOOL_URI + userId;\n            let deferred = this.$q.defer();\n\n            this.restApi.queryObject({url: url}).$promise\n                .then(\n                    function(response) {\n                        if(response.results) {\n                            let res = response.results[0] ? response.results[0] : '';\n                            deferred.resolve(res);\n                        } else {\n                            DEBUG && console.error(response);\n                            deferred.reject(response);\n                        }\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * getAllSchools\n        * @description - get all Schools\n        * @function\n        * @return {angular.IPromise<any>} return a promise with schools list\n        */\n        getAllSchools(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.SCHOOL_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.queryObject({url: url}).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.models.school', [])\n        .service(SchoolService.serviceId, SchoolService);\n\n}\n","/**\n * Specifies the Classes and Interfaces related to Students in our Model\n */\n\nmodule app.models.student {\n\n    /****************************************/\n    /*         INTERFACES DEFINITION        */\n    /****************************************/\n\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n\n    export class Student {\n\n        /*-- PROPERTIES --*/\n        private id: string;\n        private school: string;\n        private occupation: string;\n        private fluent_in: Array<string>;\n        private learning: Array<string>;\n        private interests: Array<string>;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Student Model instanced');\n\n            //init properties\n            this.id = obj.id || '';\n            this.school = obj.school || '';\n            this.occupation = obj.occupation || '';\n            this.fluent_in = obj.fluent_in || '';\n            this.learning = obj.learning || '';\n            this.interests = obj.interests || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: string) {\n            if (id === undefined) { throw 'Please supply id'; }\n            this.id = id;\n        }\n\n        get School() {\n            return this.school;\n        }\n\n        set School(school: string) {\n            if (school === undefined) { throw 'Please supply school'; }\n            this.school = school;\n        }\n\n        get Occupation() {\n            return this.occupation;\n        }\n\n        set Occupation(occupation: string) {\n            if (occupation === undefined) { throw 'Please supply occupation'; }\n            this.occupation = occupation;\n        }\n\n        get Fluent_in() {\n            return this.fluent_in;\n        }\n\n        addFluentIn(language: string): void {\n            if(language === undefined) { throw 'Please supply fluent in language element (Add)'; }\n            this.fluent_in.push(language);\n        }\n\n        editFluentIn(language: string): void {\n            if(language === undefined) { throw 'Please supply fluent in language element (Edit)'; }\n            //Edit existing Fluent in Language\n            this.fluent_in.forEach(function (element, index, array) {\n                if (language === element) {\n                    array[index] = language;\n                }\n            });\n        }\n\n        get Learning() {\n            return this.learning;\n        }\n\n        addLearning(language: string): void {\n            if(language === undefined) { throw 'Please supply learning language element (Add)'; }\n            this.fluent_in.push(language);\n        }\n\n        editLearning(language: string): void {\n            if(language === undefined) { throw 'Please supply learning language element (Edit)'; }\n            //Edit existing Learning Language\n            this.learning.forEach(function (element, index, array) {\n                if (language === element) {\n                    array[index] = language;\n                }\n            });\n        }\n\n        get Interests() {\n            return this.interests;\n        }\n\n        addInterest(interest: string): void {\n            if(interest === undefined) { throw 'Please supply interest element (Add)'; }\n            this.interests.push(interest);\n        }\n\n        editInterest(interest: string): void {\n            if(interest === undefined) { throw 'Please supply interest element (Edit)'; }\n            //Edit existing Interest\n            this.interests.forEach(function (element, index, array) {\n                if (interest === element) {\n                    array[index] = interest;\n                }\n            });\n        }\n\n    }\n\n}\n","/**\n * StudentService\n * @description - Services related on Student Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.models.student {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IStudentService {\n        getStudentById: (id: string) => angular.IPromise<any>;\n        getAllStudents: () => angular.IPromise<any>;\n        getRatingByEarlyid: (id: string) => angular.IPromise<any>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class StudentService implements IStudentService {\n\n        static serviceId = 'mainApp.models.student.StudentService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private restApi: app.core.restApi.IRestApi) {\n            //LOG\n            console.log('student service instanced');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * getStudentById\n        * @description - get teacher by Id\n        * @use - this.StudentService.getStudentByUid('98d667ae');\n        * @function\n        * @params {string} id - student id\n        * @return {angular.IPromise<any>} promise - return student by Id\n        */\n        getStudentById(id): angular.IPromise<any> {\n            //VARIABLES\n            let url = 'students';\n\n            return this.restApi.show({url: url, id: id}).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n        }\n\n        /**\n        * getAllStudents\n        * @description - get all Students\n        * @function\n        * @return {angular.IPromise<any>} return a promise with\n        * students list\n        */\n        getAllStudents(): angular.IPromise<any> {\n            //VARIABLES\n            let url = 'students';\n\n            return this.restApi.query({url: url}).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n        }\n\n\n\n        /** TODO: Mover a su respectivo lugar cuando se cree el modelo independiente\n        * de Rating\n        * getRatingByEarlyid\n        * @description - get rating by Early Id\n        * @use - this.StudentService.getRatingByEarlyid('98d667ae');\n        * @function\n        * @params {string} id - early adopter id\n        * @return {angular.IPromise<any>} promise - return rating by Ealry Adopter Id\n        */\n        getRatingByEarlyid(id): angular.IPromise<any> {\n            //VARIABLES\n            let url = 'ratings';\n\n            return this.restApi.show({url: url, id: id}).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.models.student', [])\n        .service(StudentService.serviceId, StudentService);\n\n}\n","/**\n * Specifies the Classes and Interfaces related to Teachers in our Model\n */\n\nmodule app.models.teacher {\n\n    /****************************************/\n    /*         INTERFACES DEFINITION        */\n    /****************************************/\n\n\n    /************************************************/\n    /*           TEACHER CLASS DEFINITION           */\n    /************************************************/\n\n    export class Teacher {\n\n        /*-- PROPERTIES --*/\n        private id: string;\n        private profile: app.models.user.Profile;\n        private type: string;\n        private teacherSince: string;\n        private experiences: Array<Experience>;\n        private educations: Array<Education>;\n        private certificates: Array<Certificate>;\n        private methodology: string;\n        private immersion: Immersion;\n        private price: Price;\n        private ratings: Array<Rating>;\n        private status: string;\n        private recommended: number;\n        private createdAt: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Teacher Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id || '';\n            this.profile = new app.models.user.Profile(obj.profile);\n            this.type = obj.type || '';\n            this.teacherSince = obj.teacherSince || '';\n            this.methodology = obj.methodology || '';\n            this.immersion = new Immersion(obj.immersion);\n            this.price = new Price(obj.price);\n            this.status = obj.status || 'NW';\n            this.recommended = obj.recomended || 0;\n            this.createdAt = obj.createdAt || '';\n\n            if(obj != {}) {\n\n                this.experiences = [];\n                for (let key in obj.experiences) {\n                    let experienceInstance = new Experience(obj.experiences[key]);\n                    this.addExperience(experienceInstance);\n                }\n\n                this.educations = [];\n                for (let key in obj.educations) {\n                    let educationInstance = new Education(obj.educations[key]);\n                    this.addEducation(educationInstance);\n                }\n\n                this.certificates = [];\n                for (let key in obj.certificates) {\n                    let certificateInstance = new Certificate(obj.certificates[key]);\n                    this.addCertificate(certificateInstance);\n                }\n\n                this.ratings = [];\n                for (let key in obj.ratings) {\n                    let ratingInstance = new Rating(obj.ratings[key]);\n                    this.addRating(ratingInstance);\n                }\n\n            } else {\n                this.experiences = [];\n                this.educations = [];\n                this.certificates = [];\n                this.ratings = [];\n            }\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: string) {\n            if (id === undefined) { throw 'Please supply id of teacher'; }\n            this.id = id;\n        }\n\n        get Profile() {\n            return this.profile;\n        }\n\n        set Profile(profile: app.models.user.Profile) {\n            if (profile === undefined) { throw 'Please supply teacher profile data'; }\n            this.profile = profile;\n        }\n\n        get Type() {\n            return this.type;\n        }\n\n        set Type(type: string) {\n            if (type === undefined) { throw 'Please supply type of teacher'; }\n            this.type = type;\n        }\n\n        get TeacherSince() {\n            return this.teacherSince;\n        }\n\n        set TeacherSince(teacherSince: string) {\n            if (teacherSince === undefined) { throw 'Please supply teacher since'; }\n            this.teacherSince = teacherSince;\n        }\n\n        get Experiences() {\n            return this.experiences;\n        }\n\n        addExperience(experience: Experience): void {\n            if(experience === undefined) { throw 'Please supply experience value (Add)'; }\n            this.experiences.push(experience);\n        }\n\n        editExperience(experience: Experience): void {\n            if(experience === undefined) { throw 'Please supply experience value (Edit)'; }\n            //Edit existing Experience\n            this.experiences.forEach(function (element, index, array) {\n                if (experience.Id === element.Id) {\n                    array[index] = experience;\n                }\n            });\n        }\n\n        get Educations() {\n            return this.educations;\n        }\n\n        addEducation(education: Education): void {\n            if(education === undefined) { throw 'Please supply education value (Add)'; }\n            this.educations.push(education);\n        }\n\n        editEducation(education: Education): void {\n            if(education === undefined) { throw 'Please supply education value (Edit)'; }\n            //Edit existing Education\n            this.educations.forEach(function (element, index, array) {\n                if (education.Id === element.Id) {\n                    array[index] = education;\n                }\n            });\n        }\n\n        get Certificates() {\n            return this.certificates;\n        }\n\n        addCertificate(certificate: Certificate): void {\n            if(certificate === undefined) { throw 'Please supply certificate value (Add)'; }\n            this.certificates.push(certificate);\n        }\n\n        editCertificate(certificate: Certificate): void {\n            if(certificate === undefined) { throw 'Please supply certificate value (Edit)'; }\n            //Edit existing Certificate\n            this.certificates.forEach(function (element, index, array) {\n                if (certificate.Id === element.Id) {\n                    array[index] = certificate;\n                }\n            });\n        }\n\n        get Methodology() {\n            return this.methodology;\n        }\n\n        set Methodology(methodology: string) {\n            if (methodology === undefined) { throw 'Please supply methodology'; }\n            this.methodology = methodology;\n        }\n\n        get Immersion() {\n            return this.immersion;\n        }\n\n        set Immersion(immersion: Immersion) {\n            if (immersion === undefined) { throw 'Please supply immersion'; }\n            this.immersion = immersion;\n        }\n\n        get Price() {\n            return this.price;\n        }\n\n        set Price(price: Price) {\n            if (price === undefined) { throw 'Please supply price'; }\n            this.price = price;\n        }\n\n        get Ratings() {\n            return this.ratings;\n        }\n\n        addRating(rating: Rating): void {\n            if(rating === undefined) { throw 'Please supply rating value (Add)'; }\n            this.ratings.push(rating);\n        }\n\n        editRating(rating: Rating): void {\n            if(rating === undefined) { throw 'Please supply rating value (Edit)'; }\n            //Edit existing Rating\n            this.ratings.forEach(function (element, index, array) {\n                if (rating.Id === element.Id) {\n                    array[index] = rating;\n                }\n            });\n        }\n\n        get Status() {\n            return this.status;\n        }\n\n        set Status(status: string) {\n            if (status === undefined) { throw 'Please supply profile status value'; }\n            this.status = status;\n        }\n\n        get Recommended() {\n            return this.recommended;\n        }\n\n        set Recommended(recommended: number) {\n            if (recommended === undefined) { throw 'Please supply recommended early id'; }\n            this.recommended = recommended;\n        }\n\n        get CreatedAt() {\n            return this.createdAt;\n        }\n\n    }\n\n\n    /************************************************/\n    /*          EXPERIENCE CLASS DEFINITION         */\n    /************************************************/\n\n    export class Experience {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private position: string;\n        private company: string;\n        private country: string;\n        private city: string;\n        private dateStart: string;\n        private dateFinish: string;\n        private description: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Experience Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.position = obj.position || '';\n            this.company = obj.company || '';\n            this.country = obj.country || '';\n            this.city = obj.city || '';\n            this.dateStart = obj.dateStart || '';\n            this.dateFinish = obj.dateFinish || '';\n            this.description = obj.description || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply experience id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply experience uid'; }\n            this.uid = uid;\n        }\n\n        get Position() {\n            return this.position;\n        }\n\n        set Position(position: string) {\n            if (position === undefined) { throw 'Please supply position on company'; }\n            this.position = position;\n        }\n\n        get Company() {\n            return this.company;\n        }\n\n        set Company(company: string) {\n            if (company === undefined) { throw 'Please supply company experience'; }\n            this.company = company;\n        }\n\n        get Country() {\n            return this.country;\n        }\n\n        set Country(country: string) {\n            if (country === undefined) { throw 'Please supply country experience'; }\n            this.country = country;\n        }\n\n        get City() {\n            return this.city;\n        }\n\n        set City(city: string) {\n            if (city === undefined) { throw 'Please supply city experience'; }\n            this.city = city;\n        }\n\n        get DateStart() {\n            return this.dateStart;\n        }\n\n        set DateStart(dateStart: string) {\n            if (dateStart === undefined) { throw 'Please supply dateStart experience'; }\n            this.dateStart = dateStart;\n        }\n\n        get DateFinish() {\n            return this.dateFinish;\n        }\n\n        set DateFinish(dateFinish: string) {\n            if (dateFinish === undefined) { throw 'Please supply dateFinish experience'; }\n            this.dateFinish = dateFinish;\n        }\n\n        get Description() {\n            return this.description;\n        }\n\n        set Description(description: string) {\n            if (description === undefined) { throw 'Please supply description experience'; }\n            this.description = description;\n        }\n\n\n    }\n\n\n\n    /************************************************/\n    /*           EDUCATION CLASS DEFINITION         */\n    /************************************************/\n\n    export class Education {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private school: string;\n        private degree: string;\n        private fieldStudy: string;\n        private dateStart: string;\n        private dateFinish: string;\n        private description: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Education Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.school = obj.school || '';\n            this.degree = obj.degree || '';\n            this.fieldStudy = obj.fieldStudy || '';\n            this.dateStart = obj.dateStart || '';\n            this.dateFinish = obj.dateFinish || '';\n            this.description = obj.description || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply experience id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply position uid'; }\n            this.uid = uid;\n        }\n\n        get School() {\n            return this.school;\n        }\n\n        set School(school: string) {\n            if (school === undefined) { throw 'Please supply school value (teacher education)'; }\n            this.school = school;\n        }\n\n        get Degree() {\n            return this.degree;\n        }\n\n        set Degree(degree: string) {\n            if (degree === undefined) { throw 'Please supply degree value (teacher education)'; }\n            this.degree = degree;\n        }\n\n        get FieldStudy() {\n            return this.fieldStudy;\n        }\n\n        set FieldStudy(fieldStudy: string) {\n            if (fieldStudy === undefined) { throw 'Please supply field of study value (teacher education)'; }\n            this.fieldStudy = fieldStudy;\n        }\n\n        get DateStart() {\n            return this.dateStart;\n        }\n\n        set DateStart(dateStart: string) {\n            if (dateStart === undefined) { throw 'Please supply dateStart experience'; }\n            this.dateStart = dateStart;\n        }\n\n        get DateFinish() {\n            return this.dateFinish;\n        }\n\n        set DateFinish(dateFinish: string) {\n            if (dateFinish === undefined) { throw 'Please supply dateFinish experience'; }\n            this.dateFinish = dateFinish;\n        }\n\n        get Description() {\n            return this.description;\n        }\n\n        set Description(description: string) {\n            if (description === undefined) { throw 'Please supply description experience'; }\n            this.description = description;\n        }\n\n\n    }\n\n\n\n    /************************************************/\n    /*          CERTIFICATE CLASS DEFINITION        */\n    /************************************************/\n\n    export class Certificate {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private name: string;\n        private institution: string;\n        private dateReceived: string;\n        private description: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Certificate Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.name = obj.name || '';\n            this.institution = obj.institution || '';\n            this.dateReceived = obj.dateReceived || '';\n            this.description = obj.description || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply experience id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply position uid'; }\n            this.uid = uid;\n        }\n\n        get Name() {\n            return this.name;\n        }\n\n        set Name(name: string) {\n            if (name === undefined) { throw 'Please supply name of certificate'; }\n            this.name = name;\n        }\n\n        get Institution() {\n            return this.institution;\n        }\n\n        set Institution(institution: string) {\n            if (institution === undefined) { throw 'Please supply institution of certificate'; }\n            this.institution = institution;\n        }\n\n        get DateReceived() {\n            return this.dateReceived;\n        }\n\n        set DateReceived(dateReceived: string) {\n            if (dateReceived === undefined) { throw 'Please supply dateReceived of certificate'; }\n            this.dateReceived = dateReceived;\n        }\n\n        get Description() {\n            return this.description;\n        }\n\n        set Description(description: string) {\n            if (description === undefined) { throw 'Please supply description of certificate'; }\n            this.description = description;\n        }\n\n\n    }\n\n\n\n    /************************************************/\n    /*          IMMERSION CLASS DEFINITION          */\n    /************************************************/\n\n    export class Immersion {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private active: boolean;\n        private category: Array<string>;\n        private otherCategory: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Certificate Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.active = obj.active || false;\n            this.otherCategory = obj.otherCategory || '';\n            this.category = obj.category || [];\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply experience id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply experience uid'; }\n            this.uid = uid;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of immersion'; }\n            this.active = active;\n        }\n\n        get Category() {\n            return this.category;\n        }\n\n        set Category(category: Array<string>) {\n            if (category === undefined) { throw 'Please supply category of immersion'; }\n            this.category = category;\n        }\n\n        get OtherCategory() {\n            return this.otherCategory;\n        }\n\n        set OtherCategory(otherCategory: string) {\n            if (otherCategory === undefined) { throw 'Please supply other immersion category'; }\n            this.otherCategory = otherCategory;\n        }\n\n    }\n\n\n\n    /************************************************/\n    /*      TYPE OF IMMERSION CLASS DEFINITION      */\n    /************************************************/\n\n    export class TypeOfImmersion {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private category: Array<string>;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('TypeOfImmersion Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.category = obj.category || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply type of immersion id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply type of immersion uid'; }\n            this.uid = uid;\n        }\n\n        get Category() {\n            return this.category;\n        }\n\n        set Category(category: Array<string>) {\n            if (category === undefined) { throw 'Please supply category of immersion'; }\n            this.category = category;\n        }\n\n    }\n\n\n\n    /************************************************/\n    /*            PRICE CLASS DEFINITION            */\n    /************************************************/\n\n    export class Price {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private privateClass: TypeOfPrice;\n        private groupClass: TypeOfPrice;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Price of Teacher Class Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.privateClass = new TypeOfPrice(obj.privateClass);\n            this.groupClass = new TypeOfPrice(obj.groupClass);\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply experience id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply experience uid'; }\n            this.uid = uid;\n        }\n\n        get PrivateClass() {\n            return this.privateClass;\n        }\n\n        set PrivateClass(privateClass: TypeOfPrice) {\n            if (privateClass === undefined) { throw 'Please supply privateClass'; }\n            this.privateClass = privateClass;\n        }\n\n        get GroupClass() {\n            return this.groupClass;\n        }\n\n        set GroupClass(groupClass: TypeOfPrice) {\n            if (groupClass === undefined) { throw 'Please supply groupClass'; }\n            this.groupClass = groupClass;\n        }\n\n    }\n\n\n\n    /************************************************/\n    /*         TYPE OF PRICE CLASS DEFINITION       */\n    /************************************************/\n\n    export class TypeOfPrice {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private active: boolean;\n        private hourPrice: number;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('TypeOfPrice Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.active = obj.active || false;\n            this.hourPrice = obj.hourPrice || 0;\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply experience id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply experience uid'; }\n            this.uid = uid;\n        }\n\n        get Active() {\n            return this.active;\n        }\n\n        set Active(active: boolean) {\n            if (active === undefined) { throw 'Please supply active value of price'; }\n            this.active = active;\n        }\n\n        get HourPrice() {\n            return this.hourPrice;\n        }\n\n        set HourPrice(hourPrice: number) {\n            if (hourPrice === undefined) { throw 'Please supply hour price value'; }\n            this.hourPrice = hourPrice;\n        }\n    }\n\n\n\n    /************************************************/\n    /*            RATING CLASS DEFINITION           */\n    /************************************************/\n\n    export class Rating {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private author: app.models.user.Profile;\n        private methodologyValue: number;\n        private teachingValue: number;\n        private communicationValue: number;\n        private review: string;\n        private createdAt: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Rating Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.author = new app.models.user.Profile(obj.author);\n            this.methodologyValue = obj.methodologyValue || 0;\n            this.teachingValue = obj.teachingValue || 0;\n            this.communicationValue = obj.communicationValue || 0;\n            this.review = obj.review || '';\n            this.createdAt = obj.createdAt || '';\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply rating id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply rating uid'; }\n            this.uid = uid;\n        }\n\n        get Author() {\n            return this.author;\n        }\n\n        set Author(author: app.models.user.Profile) {\n            if (author === undefined) { throw 'Please supply author'; }\n            this.author = author;\n        }\n\n        get MethodologyValue() {\n            return this.methodologyValue;\n        }\n\n        set MethodologyValue(methodologyValue: number) {\n            if (methodologyValue === undefined) { throw 'Please supply methodology value'; }\n            this.methodologyValue = methodologyValue;\n        }\n\n        get TeachingValue() {\n            return this.teachingValue;\n        }\n\n        set TeachingValue(teachingValue: number) {\n            if (teachingValue === undefined) { throw 'Please supply teaching value'; }\n            this.teachingValue = teachingValue;\n        }\n\n        get CommunicationValue() {\n            return this.communicationValue;\n        }\n\n        set CommunicationValue(communicationValue: number) {\n            if (communicationValue === undefined) { throw 'Please supply communication value'; }\n            this.communicationValue = communicationValue;\n        }\n\n        get Review() {\n            return this.review;\n        }\n\n        set Review(review: string) {\n            if (review === undefined) { throw 'Please supply review value'; }\n            this.review = review;\n        }\n\n        get CreatedAt() {\n            return this.createdAt;\n        }\n\n    }\n\n}\n","/**\n * TeacherService\n * @description - Services related on Teacher Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.models.teacher {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherService {\n        getTeacherById: (id: string) => angular.IPromise<any>;\n        getTeacherByProfileId: (profileId: string) => angular.IPromise<any>;\n        getAllTeachers: () => angular.IPromise<any>;\n        getAllTeachersByStatus: (status) => angular.IPromise<any>;\n        createTeacher: (teacher: app.models.teacher.Teacher) => angular.IPromise<any>;\n        updateTeacher: (teacher: app.models.teacher.Teacher) => angular.IPromise<any>;\n        createExperience: (teacherId: string, experience: app.models.teacher.Experience) => angular.IPromise<any>;\n        updateExperience: (teacherId: string, experience: app.models.teacher.Experience) => angular.IPromise<any>;\n        createEducation: (teacherId: string, education: app.models.teacher.Education) => angular.IPromise<any>;\n        updateEducation: (teacherId: string, education: app.models.teacher.Education) => angular.IPromise<any>;\n        createCertificate: (teacherId: string, certificate: app.models.teacher.Certificate) => angular.IPromise<any>;\n        updateCertificate: (teacherId: string, certificate: app.models.teacher.Certificate) => angular.IPromise<any>;\n    }\n\n    export interface ITeacherQueryObject {\n        next: string;\n        previous: string;\n        count: number;\n        results: Array<app.models.teacher.Teacher>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherService implements ITeacherService {\n\n        static serviceId = 'mainApp.models.teacher.TeacherService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        TEACHER_URI: string;\n        PROFILE_TEACHER_URI: string;\n        STATUS_TEACHER_URI: string;\n        EXPERIENCES_URI: string;\n        EDUCATIONS_URI: string;\n        CERTIFICATES_URI: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService',\n            'mainApp.auth.AuthService',\n            '$q'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private restApi: app.core.restApi.IRestApi,\n            private AuthService: app.auth.IAuthService,\n            private $q: angular.IQService) {\n            //LOG\n            console.log('teacher service instanced');\n\n            //CONSTANTS\n            this.TEACHER_URI = 'teachers';\n            this.PROFILE_TEACHER_URI = 'teachers?profileId=';\n            this.STATUS_TEACHER_URI = 'teachers?status=';\n            this.EXPERIENCES_URI = 'experiences';\n            this.EDUCATIONS_URI = 'educations';\n            this.CERTIFICATES_URI = 'certificates';\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * getTeacherById\n        * @description - get teacher by Id\n        * @use - this.TeacherService.getTeacherById('98d667ae');\n        * @function\n        * @params {string} id - user id\n        * @return {angular.IPromise<any>} promise - return teacher by Id\n        */\n        getTeacherById(id): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.show({url: url, id: id}).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * getTeacherByProfileId\n        * @description - get teacher by user profile id filter value\n        * @function\n        * @return {angular.IPromise<any>} return a promise with user profile teacher data\n        */\n        getTeacherByProfileId(profileId): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.PROFILE_TEACHER_URI + profileId;\n            let deferred = this.$q.defer();\n\n            this.restApi.queryObject({url: url}).$promise\n                .then(\n                    function(response) {\n                        if(response.results) {\n                            let res = response.results[0] ? response.results[0] : '';\n                            deferred.resolve(res);\n                        } else {\n                            DEBUG && console.error(response);\n                            deferred.reject(response);\n                        }\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * getAllTeachersByStatus\n        * @description - get all Teachers by status filter value\n        * @function\n        * @return {angular.IPromise<any>} return a promise with teachers list\n        */\n        getAllTeachersByStatus(status): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.STATUS_TEACHER_URI + status;\n            let deferred = this.$q.defer();\n\n            this.restApi.queryObject({url: url}).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * getAllTeachers\n        * @description - get all Teachers\n        * @function\n        * @return {angular.IPromise<any>} return a promise with teachers list\n        */\n        getAllTeachers(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.queryObject({url: url}).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n                    function(error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * createTeacher\n        * @description - create Teacher entity on DB\n        * @function\n        * @params {app.models.teacher.Teacher} teacher - teacher Object\n        * @return {promise} promise - Return a promise of \"Add Teacher Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        createTeacher(teacher): ng.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.create({ url: url }, teacher).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * updateTeacher\n        * @description - update Teacher entity on DB\n        * @function\n        * @params {app.models.teacher.Teacher} teacher - teacher Object\n        * @return {promise} promise - Return a promise of \"Add Teacher Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        updateTeacher(teacher): ng.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.update({ url: url, id: teacher.Id }, teacher).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * createExperience\n        * @description - create Teacher's experience entity on DB\n        * @function\n        * @params {string} teacherId - teacher Object\n        * @params {app.models.teacher.Experience} experience - experience Object\n        * @return {promise} promise - Return a promise of \"Add Teacher's Experience Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        createExperience(teacherId, experience): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI + '/' + teacherId + '/' + this.EXPERIENCES_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.create({ url: url }, experience).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.log(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * updateExperience\n        * @description - update Teacher's Experience entity on DB\n        * @function\n        * @params {string} teacherId - teacher Object\n        * @params {app.models.teacher.Experience} experience - experience Object\n        * @return {promise} promise - Return a promise of \"Update Teacher's Experience Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        updateExperience(teacherId, experience): ng.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI + '/' + teacherId + '/' + this.EXPERIENCES_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.update({ url: url, id: experience.Id }, experience).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * createEducation\n        * @description - create Teacher's education entity on DB\n        * @function\n        * @params {string} teacherId - teacher Object\n        * @params {app.models.teacher.Education} education - education Object\n        * @return {promise} promise - Return a promise of \"Add Teacher's Education Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        createEducation(teacherId, education): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI + '/' + teacherId + '/' + this.EDUCATIONS_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.create({ url: url }, education).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * updateEducation\n        * @description - update Teacher's Education entity on DB\n        * @function\n        * @params {string} teacherId - teacher Object\n        * @params {app.models.teacher.Education} education - education Object\n        * @return {promise} promise - Return a promise of \"Update Teacher's Education Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        updateEducation(teacherId, education): ng.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI + '/' + teacherId + '/' + this.EDUCATIONS_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.update({ url: url, id: education.Id }, education).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * createCertificate\n        * @description - create Teacher's certificate entity on DB\n        * @function\n        * @params {string} teacherId - teacher Object\n        * @params {app.models.teacher.Certificate} certificate - certificate Object\n        * @return {promise} promise - Return a promise of \"Add Teacher's Certificate Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        createCertificate(teacherId, certificate): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI + '/' + teacherId + '/' + this.CERTIFICATES_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.create({ url: url }, certificate).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n\n        /**\n        * updateCertificate\n        * @description - update Teacher's Certificate entity on DB\n        * @function\n        * @params {string} teacherId - teacher Object\n        * @params {app.models.teacher.Certificate} certificate - certificate Object\n        * @return {promise} promise - Return a promise of \"Update Teacher's Certificate Request\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        updateCertificate(teacherId, certificate): ng.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.TEACHER_URI + '/' + teacherId + '/' + this.CERTIFICATES_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.update({ url: url, id: certificate.Id }, certificate).$promise\n                .then(\n                    function (response) {\n                        deferred.resolve(response);\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.models.teacher', [])\n        .service(TeacherService.serviceId, TeacherService);\n\n}\n","/**\n * Specifies the Classes and Interfaces related to Users in our Model\n */\n\nmodule app.models.user {\n\n    /****************************************/\n    /*        ENUM STATUS DEFINITION        */\n    /****************************************/\n    export const enum Status {\n        new,\n        validated,\n        verified\n    }\n\n    /****************************************/\n    /*         INTERFACES DEFINITION        */\n    /****************************************/\n    export interface ILocation {\n        address: string;\n        position: Position;\n        city: string;\n        state: string;\n        country: string;\n        zipCode: string;\n    }\n\n\n    /****************************************/\n    /*          USER CLASS DEFINITION       */\n    /****************************************/\n\n    export class Profile {\n\n        /*-- PROPERTIES --*/\n        private userId: string;\n        private avatar: string;\n        private username: string;\n        private email: string;\n        private phoneNumber: string;\n        private firstName: string;\n        private lastName: string;\n        private gender: string;\n        private birthDate: string;\n        private bornCountry: string;\n        private bornCity: string;\n        private about: string;\n        private languages: Language;\n        private location: Location;\n        private isTeacher: boolean;\n        private dateJoined: string;\n        private createdAt: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            DEBUG && console.log('Profile Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.userId = obj.userId || '';\n            this.avatar = obj.avatar || '';\n            this.username = obj.username || '';\n            this.email = obj.email || '';\n            this.phoneNumber = obj.phoneNumber || '';\n            this.firstName = obj.firstName || '';\n            this.lastName = obj.lastName || '';\n            this.gender = obj.gender || '';\n            this.birthDate = obj.birthDate || null;\n            this.bornCountry = obj.bornCountry || '';\n            this.bornCity = obj.bornCity || '';\n            this.about = obj.about || '';\n            this.languages = new Language(obj.languages);\n            this.location = new Location(obj.location);\n            this.isTeacher = obj.isTeacher || false;\n            this.dateJoined = obj.dateJoined || '';\n            this.createdAt = obj.createdAt || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get UserId() {\n            return this.userId;\n        }\n\n        set UserId(userId: string) {\n            if (userId === undefined) { throw 'Please supply profile userId'; }\n            this.userId = userId;\n        }\n\n        get Avatar() {\n            return this.avatar;\n        }\n\n        set Avatar(avatar: string) {\n            if (avatar === undefined) { throw 'Please supply profile avatar'; }\n            this.avatar = avatar;\n        }\n\n        get Username() {\n            return this.username;\n        }\n\n        get Email() {\n            return this.email;\n        }\n\n        set Email(email: string) {\n            if (email === undefined) { throw 'Please supply profile email'; }\n            this.email = email;\n        }\n\n        get PhoneNumber() {\n            return this.phoneNumber;\n        }\n\n        set PhoneNumber(phoneNumber: string) {\n            if (phoneNumber === undefined) { throw 'Please supply profile phone number'; }\n            this.phoneNumber = phoneNumber;\n        }\n\n        get FirstName() {\n            return this.firstName;\n        }\n\n        set FirstName(firstName: string) {\n            if (firstName === undefined) { throw 'Please supply profile first name'; }\n            this.firstName = firstName;\n        }\n\n        get LastName() {\n            return this.lastName;\n        }\n\n        set LastName(lastName: string) {\n            if (lastName === undefined) { throw 'Please supply profile last name'; }\n            this.lastName = lastName;\n        }\n\n        get Gender() {\n            return this.gender;\n        }\n\n        set Gender(gender: string) {\n            if (gender === undefined) { throw 'Please supply profile gender'; }\n            this.gender = gender;\n        }\n\n        get BirthDate() {\n            return this.birthDate;\n        }\n\n        set BirthDate(birthDate: string) {\n            if (birthDate === undefined) { throw 'Please supply profile birth date'; }\n            this.birthDate = birthDate;\n        }\n\n        get BornCountry() {\n            return this.bornCountry;\n        }\n\n        set BornCountry(bornCountry: string) {\n            if (bornCountry === undefined) { throw 'Please supply profile born country'; }\n            this.bornCountry = bornCountry;\n        }\n\n        get BornCity() {\n            return this.bornCity;\n        }\n\n        set BornCity(bornCity: string) {\n            if (bornCity === undefined) { throw 'Please supply profile born city'; }\n            this.bornCity = bornCity;\n        }\n\n        get Languages() {\n            return this.languages;\n        }\n\n        set Languages(languages: Language) {\n            if (languages === undefined) { throw 'Please supply profile languages'; }\n            this.languages = languages;\n        }\n\n        get Location() {\n            return this.location;\n        }\n\n        set Location(location: app.models.user.Location) {\n            if (location === undefined) { throw 'Please supply profile location'; }\n            this.location = location;\n        }\n\n        get About() {\n            return this.about;\n        }\n\n        set About(about: string) {\n            if (about === undefined) { throw 'Please supply profile location'; }\n            this.about = about;\n        }\n\n        get IsTeacher() {\n            return this.isTeacher;\n        }\n\n        set IsTeacher(isTeacher: boolean) {\n            if (isTeacher === undefined) { throw 'Please supply profile IsTeacher value'; }\n            this.isTeacher = isTeacher;\n        }\n\n        get DateJoined() {\n            return this.dateJoined;\n        }\n\n        get CreatedAt() {\n            return this.createdAt;\n        }\n\n    }\n\n\n\n    /************************************************/\n    /*          LANGUAGE CLASS DEFINITION           */\n    /************************************************/\n\n    export class Language {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private native: Array<string>;\n        private learn: Array<string>;\n        private teach: Array<string>;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            console.log('Languages Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id;\n            this.native = obj.native || [];\n            this.learn = obj.learn || [];\n            this.teach = obj.teach || [];\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id'; }\n            this.id = id;\n        }\n\n        get Native() {\n            return this.native;\n        }\n\n        set Native(native: Array<string>) {\n            if (native === undefined) { throw 'Please supply native languages'; }\n            this.native = native;\n        }\n\n        get Learn() {\n            return this.learn;\n        }\n\n        set Learn(learn: Array<string>) {\n            if (learn === undefined) { throw 'Please supply learn languages'; }\n            this.learn = learn;\n        }\n\n        get Teach() {\n            return this.teach;\n        }\n\n        set Teach(teach: Array<string>) {\n            if (teach === undefined) { throw 'Please supply teach languages'; }\n            this.teach = teach;\n        }\n\n\n    }\n\n\n\n    /****************************************/\n    /*       LOCATION CLASS DEFINITION      */\n    /****************************************/\n\n    export class Location {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private country: string;\n        private address: string;\n        private position: Position;\n        private city: string;\n        private state: string;\n        private zipCode: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            DEBUG && console.log('Location Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id || '';\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.country = obj.country || '';\n            this.address = obj.address || '';\n            this.position = new Position(obj.position);\n            this.city = obj.city || '';\n            this.state = obj.state || '';\n            this.zipCode = obj.zipCode || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply location uid'; }\n            this.uid = uid;\n        }\n\n        get Country() {\n            return this.country;\n        }\n\n        set Country(country: string) {\n            if (country === undefined) { throw 'Please supply country location'; }\n            this.country = country;\n        }\n\n        get Address() {\n            return this.address;\n        }\n\n        set Address(address: string) {\n            if (address === undefined) { throw 'Please supply address location'; }\n            this.address = address;\n        }\n\n        get Position() {\n            return this.position;\n        }\n\n        set Position(position: Position) {\n            if (position === undefined) { throw 'Please supply address location'; }\n            this.position = position;\n        }\n\n        get City() {\n            return this.city;\n        }\n\n        set City(city: string) {\n            if (city === undefined) { throw 'Please supply city location'; }\n            this.city = city;\n        }\n\n        get State() {\n            return this.state;\n        }\n\n        set State(state: string) {\n            if (state === undefined) { throw 'Please supply state location'; }\n            this.state = state;\n        }\n\n        get ZipCode() {\n            return this.zipCode;\n        }\n\n        set ZipCode(zipCode: string) {\n            if (zipCode === undefined) { throw 'Please supply zip code location'; }\n            this.zipCode = zipCode;\n        }\n\n    }\n\n\n\n    /****************************************/\n    /*       POSITION CLASS DEFINITION      */\n    /****************************************/\n\n    export class Position {\n\n        /*-- PROPERTIES --*/\n        private id: number;\n        private uid: string;\n        private lng: string;\n        private lat: string;\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(obj: any = {}) {\n            //LOG\n            DEBUG && console.log('Position Model instanced');\n\n            if(obj === null) obj = {};\n\n            //init properties\n            this.id = obj.id || '';\n            this.uid = obj.uid || app.core.util.functionsUtil.FunctionsUtilService.generateGuid();\n            this.lng = obj.lng || '';\n            this.lat = obj.lat || '';\n\n        }\n\n        /**********************************/\n        /*             METHODS            */\n        /**********************************/\n\n        get Id() {\n            return this.id;\n        }\n\n        set Id(id: number) {\n            if (id === undefined) { throw 'Please supply id'; }\n            this.id = id;\n        }\n\n        get Uid() {\n            return this.uid;\n        }\n\n        set Uid(uid: string) {\n            if (uid === undefined) { throw 'Please supply position uid'; }\n            this.uid = uid;\n        }\n\n        get Lng() {\n            return this.lng;\n        }\n\n        set Lng(lng: string) {\n            if (lng === undefined) { throw 'Please supply lng position'; }\n            this.lng = lng;\n        }\n\n        get Lat() {\n            return this.lat;\n        }\n\n        set Lat(lat: string) {\n            if (lat === undefined) { throw 'Please supply lat position'; }\n            this.lat = lat;\n        }\n\n    }\n\n\n}\n","/**\n * UserService\n * @description - Services related on User Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.models.user {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IUserService {\n        getUserProfileById: (id: string) => angular.IPromise<any>;\n        getAllUsersProfile: () => angular.IPromise<any>;\n        updateUserProfile: (user: app.models.user.Profile) => angular.IPromise<any>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserService implements IUserService {\n\n        static serviceId = 'mainApp.models.user.UserService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        USER_URI: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService',\n            'mainApp.auth.AuthService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private restApi: app.core.restApi.IRestApi,\n            private AuthService: app.auth.IAuthService) {\n            //LOG\n            DEBUG && console.log('user service instanced');\n            //CONSTANTS\n            this.USER_URI = 'users';\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * getUserProfileById\n        * @description - get user by Id\n        * @use - this.UserService.getUserProfileById('98d667ae');\n        * @function\n        * @params {string} id - user id\n        * @return {angular.IPromise<any>} promise - return user profile by Id\n        */\n        getUserProfileById(id): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.USER_URI;\n\n            return this.restApi.show({url: url, id: id}).$promise\n                .then(\n                    function (response) {\n                        return response;\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        return error;\n                    }\n                );\n        }\n\n\n\n        /**\n        * getAllUsersProfile\n        * @description - get all Users Profiles\n        * @function\n        * @return {angular.IPromise<any>} return a promise with\n        * users list\n        */\n        getAllUsersProfile(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.USER_URI;\n\n            return this.restApi.query({url: url}).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(error) {\n                        DEBUG && console.log(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        return error;\n                    }\n                );\n        }\n\n\n\n        /**\n        * updateUserProfile\n        * @description - update User information entity on DB\n        * @function\n        * @params {app.models.user.Profile} user - user profile Object\n        * @return {promise} promise - Return a promise of \"Updated User Profile\".\n        * @return {object} response - Returns response about If request was success or error.\n        */\n        updateUserProfile(profile): ng.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            let url = this.USER_URI;\n\n            return this.restApi.update({ url: url, id: profile.userId }, profile).$promise\n                .then(\n                    function (response) {\n                        return response;\n                    },\n                    function (error) {\n                        DEBUG && console.error(error);\n                        if(error.statusText == 'Unauthorized') {\n                            self.AuthService.logout();\n                        }\n                        return error;\n                    }\n                );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.models.user', [])\n        .service(UserService.serviceId, UserService);\n\n}\n","/**\n* config()\n* @description - create Teacher page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage', {\n                url: '/create/teacher',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/createTeacherPage/createTeacherPage.html',\n                        controller: 'mainApp.pages.createTeacherPage.CreateTeacherPageController',\n                        controllerAs: 'vm',\n                        resolve: {\n                            waitForAuth: ['mainApp.auth.AuthService', function(AuthService) {\n                                return AuthService.autoRefreshToken();\n                            }]\n                        }\n                    }\n                },\n                cache: false,\n                params: {\n                    type: '',\n                },\n                data: {\n                    requireLogin: true\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = false;\n                    $rootScope.activeFooter = true;\n                    $rootScope.activeMessageBar = false;\n                }]\n            });\n    }\n})();\n","/**\n * CreateTeacherPageController\n * @description - Create Teacher Page Controller\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ICreateTeacherPageController {\n        progressWidth: string;\n        titleSection: string;\n        form: ICreateTeacherForm;\n        error: ICreateTeacherError;\n        activate: () => void;\n    }\n\n    interface ICreateTeacherScope extends angular.IScope {\n\n    }\n\n    interface ICreateTeacherForm {\n    }\n\n    interface ICreateTeacherError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class CreateTeacherPageController implements ICreateTeacherPageController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.CreateTeacherPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ICreateTeacherForm;\n        error: ICreateTeacherError;\n        teacherData: app.models.teacher.Teacher;\n        showHeaderFixed: boolean;\n        progressWidth: string;\n        titleSection: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.models.user.UserService',\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.core.util.messageUtilService',\n            'mainApp.localStorageService',\n            'dataConfig',\n            '$state',\n            '$stateParams',\n            '$filter',\n            '$scope',\n            '$window',\n            '$rootScope',\n            '$uibModal',\n            'waitForAuth'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private userService: app.models.user.IUserService,\n            private teacherService: app.models.teacher.ITeacherService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private localStorage,\n            private dataConfig: IDataConfig,\n            private $state: ng.ui.IStateService,\n            private $stateParams: app.core.interfaces.IStateParamsData,\n            private $filter: angular.IFilterService,\n            private $scope: ICreateTeacherScope,\n            private $window,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            waitForAuth) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n            let loggedUserId = this.$rootScope.userData.id;\n\n            //Get current state\n            let currentState = this.$state.current.name;\n\n            //Init teacher instance\n            this.$rootScope.teacherData = new app.models.teacher.Teacher();\n            //Connect with user logged\n            this.$rootScope.teacherData.Profile.UserId = loggedUserId;\n\n            // Init header fixed\n            //TODO: Remover esto de aqui, y colocarlo en un lugar global, ya que\n            // despues de que la App paso por esta pagina, le bindea este evento\n            // siempre, entonces cada vez que scrollee en cada pagina, va a entrar\n            // por aqui.\n            angular.element(this.$window).bind(\"scroll\", function() {\n                let floatHeader = document.getElementById('header-float');\n                if(floatHeader) {\n                    let floatHeaderClasses = floatHeader.classList;\n                    if (this.pageYOffset >= 30) {\n                        floatHeaderClasses.remove('hidden');\n                    } else {\n                        floatHeaderClasses.add('hidden');\n                    }\n                }\n            });\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //VARIABLES\n            let self = this;\n            //CONSTANTS\n            const ENTER_MIXPANEL = \"Enter: Create Teacher Page\";\n\n            //LOG\n            console.log('createTeacherPage controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            // If come from landing page in order to create a new teacher:\n            // remove teacher id on localStorage\n            if(this.$stateParams.type === 'new') {\n                //TODO: testear muy bien el proceso de recomendar un profesor, ya que cambio mucho todo.\n                this.localStorage.removeItem(this.dataConfig.teacherDataLocalStorage);\n            }\n\n            //Charge user profile data\n            this.fillFormWithProfileData();\n\n            //Charge teacher data if teacher entity exist on DB\n            this.fillFormWithTeacherData();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * fillFormWithProfileData\n        * @description - get user profile data from DB, and fill each field on form.\n        * @function\n        * @return void\n        */\n        fillFormWithProfileData(): void {\n            // VARIABLES\n            let self = this;\n            let userId = this.$rootScope.userData.id;\n\n            if(userId) {\n                // GET USER PROFILE DATA\n                this.userService.getUserProfileById(userId)\n                .then(\n                    function(response) {\n\n                        if(response.userId) {\n                            self.$rootScope.profileData = new app.models.user.Profile(response);\n                            self.$scope.$broadcast('Fill User Profile Form', self.$rootScope.profileData);\n                        }\n\n                    }\n                );\n            }\n        }\n\n\n        /**\n        * fillFormWithTeacherData\n        * @description - get teacher data from DB, and fill each field on form.\n        * @function\n        * @return void\n        */\n        fillFormWithTeacherData(): void {\n            // VARIABLES\n            let self = this;\n            let userId = this.$rootScope.userData.id;\n\n            //Get teacher info by user logged Id\n            this.teacherService.getTeacherByProfileId(userId).then(\n\n                function(response) {\n\n                    if(response.id) {\n\n                        self.localStorage.setItem(self.dataConfig.teacherDataLocalStorage, JSON.stringify(response));\n                        self.$rootScope.teacherData = new app.models.teacher.Teacher(response);\n                        self.$scope.$broadcast('Fill Form', self.$rootScope.teacherData);\n\n                    } else {\n                        //Remove teacherData in localStorage in order to be sure it's not junk data\n                        self.localStorage.removeItem(self.dataConfig.teacherDataLocalStorage);\n                    }\n\n                }\n\n            );\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Create Teacher Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Save User Profile Data event\n            * @description - Parent (CreateTeacherPageController) receive Child's\n                             event in order to save user profile data on BD\n            * @event\n            */\n            this.$scope.$on('Save Profile Data', function(event, args) {\n                //CONSTANTS\n                const SUCCESS_MESSAGE = self.$filter('translate')('%notification.success.text');\n                //VARIABLES\n                let userId = self.$rootScope.profileData.UserId;\n                /**************************************************************/\n\n                if(userId) {\n                    self.userService.updateUserProfile(self.$rootScope.profileData)\n                    .then(\n                        function(response) {\n                            if(response.userId) {\n                                //Go top pages\n                                window.scrollTo(0, 0);\n                                //Show message\n                                self.messageUtil.success(SUCCESS_MESSAGE);\n\n                                //Fill Form\n                                self.$rootScope.profileData = new app.models.user.Profile(response);\n                                self.$scope.$broadcast('Fill User Profile Form', self.$rootScope.profileData);\n                            }\n                        },\n                        function(error) {\n                            DEBUG && console.error(error);\n                        }\n                    );\n                }\n            });\n\n\n            /**\n            * Save Data event\n            * @description - Parent (CreateTeacherPageController) receive Child's\n                             event in order to save teacher data on BD\n            * @event\n            */\n            this.$scope.$on('Save Data', function(event, args) {\n                //CONSTANTS\n                const SUCCESS_MESSAGE = self.$filter('translate')('%notification.success.text');\n                /******************************/\n\n                if(self.$rootScope.teacherData.Id) {\n                    // UPDATE EXISTING TEACHER\n                    self.teacherService.updateTeacher(self.$rootScope.teacherData)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                //Go top pages\n                                window.scrollTo(0, 0);\n                                //Show message\n                                self.messageUtil.success(SUCCESS_MESSAGE);\n                                //Save teacher data in localStorage\n                                self.localStorage.setItem(self.dataConfig.teacherDataLocalStorage, JSON.stringify(response));\n\n                                //Fill Form\n                                self.$rootScope.teacherData = new app.models.teacher.Teacher(response);\n                                self.$scope.$broadcast('Fill Form', self.$rootScope.teacherData);\n\n                            }\n                        }\n                    );\n                } else {\n                    // CREATE NEW TEACHER\n                    self.teacherService.createTeacher(self.$rootScope.teacherData)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                //Go top pages\n                                window.scrollTo(0, 0);\n                                //Show message\n                                self.messageUtil.success(SUCCESS_MESSAGE);\n                                //Save teacher data in localStorage\n                                self.localStorage.setItem(self.dataConfig.teacherDataLocalStorage, JSON.stringify(response));\n                                //Fill Form\n                                self.$rootScope.teacherData = new app.models.teacher.Teacher(response);\n                                // set isTeacher in true\n                                self.$rootScope.profileData.IsTeacher = response.profile.isTeacher;\n                                self.$scope.$broadcast('Fill Form', self.$rootScope.teacherData);\n                            }\n                        }\n                    );\n                }\n\n            });\n\n        }\n\n    }\n\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(CreateTeacherPageController.controllerId,\n                    CreateTeacherPageController);\n\n}\n","/**\n* config()\n* @description - teacher education section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.education', {\n                url: '/education',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherEducationSection/teacherEducationSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherEducationSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherEducationSectionController\n * @description - Teacher Education Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherEducationSectionController {\n        form: ITeacherEducationForm;\n        validate: ITeacherEducationValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherEducationScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    export interface ITeacherEducationForm {\n        educations: Array<app.models.teacher.Education>;\n        certificates: Array<app.models.teacher.Certificate>;\n    }\n\n    interface ITeacherEducationValidate {\n        educations: app.core.util.functionsUtil.IValid;\n        certificates: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherEducationSectionController implements ITeacherEducationSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherEducationSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherEducationForm;\n        validate: ITeacherEducationValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        STEP4_STATE: string;\n        STEP6_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherEducationScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP4_STATE = 'page.createTeacherPage.experience';\n            this.STEP6_STATE = 'page.createTeacherPage.method';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.education.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.education.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(5, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            //Init form\n            this.form = {\n                educations: [],\n                certificates: []\n            };\n\n            // Build validate object fields\n            this.validate = {\n                educations: {valid: true, message: ''},\n                certificates: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherEducationSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this.$scope.$emit('Save Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP6_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP4_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            this.form.educations = data.Educations;\n            this.form.certificates = data.Certificates;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const GLOBAL_MESSAGE = this.$filter('translate')('%create.teacher.education.validation.message.text');\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Educations list\n            let education_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.educations = this.functionsUtilService.validator(this.form.educations, education_rules);\n\n            //Validate Certificates list\n            let certificates_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.certificates = this.functionsUtilService.validator(this.form.certificates, certificates_rules);\n\n            //If educations is not valid\n            if(this.validate.educations.valid) {\n\n                this.validate.globalValidate.valid = true;\n                this.validate.globalValidate.message = '';\n\n            } else if(this.validate.certificates.valid) {\n\n                this.validate.globalValidate.valid = true;\n                this.validate.globalValidate.message = '';\n\n            } else {\n\n                this.validate.globalValidate.valid = false;\n                this.validate.globalValidate.message = GLOBAL_MESSAGE;\n                formValid = this.validate.globalValidate.valid;\n\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (type, since, educations)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const EDUCATIONS_TITLE = this.$filter('translate')('%create.teacher.education.help_text.educations.title.text');\n            const EDUCATIONS_DESCRIPTION = this.$filter('translate')('%create.teacher.education.help_text.educations.description.text');\n            const CERTIFICATES_TITLE = this.$filter('translate')('%create.teacher.education.help_text.certificates.title.text');\n            const CERTIFICATES_DESCRIPTION = this.$filter('translate')('%create.teacher.education.help_text.certificates.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'educations':\n                    this.helpText.title = EDUCATIONS_TITLE;\n                    this.helpText.description = EDUCATIONS_DESCRIPTION;\n                break;\n\n                case 'certificates':\n                    this.helpText.title = CERTIFICATES_TITLE;\n                    this.helpText.description = CERTIFICATES_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addEditEducation\n        * @description - open Modal in order to add/edit a Teacher's Education on Box\n        * @use - this._addEditEducation();\n        * @function\n        * @return {void}\n        */\n        private _addEditEducation(index, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalEducationTmpl,\n                controller: 'mainApp.components.modal.ModalEducationController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            education: self.form.educations[index],\n                            teacherId: self.$rootScope.teacherData.Id\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the new education data\n            modalInstance.result.then(function (newEducation) {\n                if(newEducation) {\n                    self.form.educations.push(newEducation);\n                }\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _addEditCertificate\n        * @description - open Modal in order to add/edit a Teacher's Certificate on Box\n        * @use - this._addEditCertificate();\n        * @function\n        * @return {void}\n        */\n        private _addEditCertificate(index, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalCertificateTmpl,\n                controller: 'mainApp.components.modal.ModalCertificateController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            certificate: self.form.certificates[index],\n                            teacherId: self.$rootScope.teacherData.Id\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the new certificate data\n            modalInstance.result.then(function (newCertificate) {\n                if(newCertificate) {\n                    self.form.certificates.push(newCertificate);\n                }\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send markers teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form', function(event, args: app.models.teacher.Teacher) {\n                self._fillForm(args);\n            });\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherEducationSectionController.controllerId,\n                    TeacherEducationSectionController);\n\n}\n","/**\n* config()\n* @description - teacher experience section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.experience', {\n                url: '/experience',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherExperienceSection/teacherExperienceSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherExperienceSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherExperienceSectionController\n * @description - Teacher Experience Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherExperienceSectionController {\n        form: ITeacherExperienceForm;\n        validate: ITeacherExperienceValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherExperienceScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    export interface ITeacherExperienceForm {\n        type: string;\n        experiences: Array<app.models.teacher.Experience>;\n    }\n\n    interface ITeacherExperienceValidate {\n        type: app.core.util.functionsUtil.IValid;\n        teacherSince: app.core.util.functionsUtil.IValid;\n        experiences: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherExperienceSectionController implements ITeacherExperienceSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherExperienceSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherExperienceForm;\n        validate: ITeacherExperienceValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        listYears: Array<app.core.interfaces.ISelectListElement>;\n        yearObject: app.core.interfaces.ISelectListElement;\n        private _hobbyChecked: any;\n        private _professionalChecked: any;\n        STEP3_STATE: string;\n        STEP_ALTER_STATE: string;\n        STEP5_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherExperienceScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP3_STATE = 'page.createTeacherPage.language';\n            this.STEP5_STATE = 'page.createTeacherPage.method';\n            this.STEP_ALTER_STATE = 'page.createTeacherPage.education';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.experience.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(4, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            //Init form\n            this.form = {\n                type: 'H',\n                experiences: []\n            };\n\n            // Current Year\n            let currentYear = parseInt(this.dataConfig.currentYear);\n\n            // Build Years select lists\n            this.listYears = this.functionsUtilService.buildNumberSelectList(1957, currentYear);\n\n            //\n            this.yearObject = {value: ''};\n\n            // Init type of teacher checks\n            this._hobbyChecked = {type:'H', checked: true};\n            this._professionalChecked = {type:'P', checked: false};\n\n            // Build validate object fields\n            this.validate = {\n                type: {valid: true, message: ''},\n                teacherSince: {valid: true, message: ''},\n                experiences: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('TeacherExperienceSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Data');\n                // GO TO ALTERNATIVE STEP IF IS PROFESSIONAL TEACHER, IF NOT GO\n                // TO NEXT STEP\n                if(this.form.type === 'P') {\n                    this.$state.go(this.STEP_ALTER_STATE, {reload: true});\n                } else {\n                    this.$state.go(this.STEP5_STATE, {reload: true});\n                }\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP3_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _checkType\n        * @description - select a type of teacher\n        * @use - this._checkType();\n        * @function\n        * @param {key} option - type of teacher option selected by user\n        * @return {void}\n        */\n        private _checkType(key): void {\n            let type = key.type;\n            if(type === 'H') {\n                this._professionalChecked.checked = false;\n                this._hobbyChecked.checked = true;\n                this.form.type = this._hobbyChecked.type;\n            } else {\n                this._professionalChecked.checked = true;\n                this._hobbyChecked.checked = false;\n                this.form.type = this._professionalChecked.type;\n            }\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            this.form.type = data.Type || 'H';\n            if(this.form.type === 'H') {\n                this._professionalChecked.checked = false;\n                this._hobbyChecked.checked = true;\n            } else {\n                this._professionalChecked.checked = true;\n                this._hobbyChecked.checked = false;\n            }\n\n            this.yearObject.value = data.TeacherSince;\n\n            this.form.experiences = data.Experiences;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate 'Year' Teacher Since fields\n            let teacher_since_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.teacherSince = this.functionsUtilService.validator(this.yearObject.value, teacher_since_rules);\n            if(!this.validate.teacherSince.valid) {\n                formValid = this.validate.teacherSince.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (type, since, experiences)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const TYPE_HOBBY_TITLE = this.$filter('translate')('%global.teacher.type.hobby.text');\n            const TYPE_HOBBY_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.type.hobby.description.text');\n            const TYPE_PROFESSIONAL_TITLE = this.$filter('translate')('%global.teacher.type.professional.text');\n            const TYPE_PROFESSIONAL_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.type.professional.description.text');\n            const SINCE_TITLE = this.$filter('translate')('%create.teacher.experience.help_text.teacher_since.title.text');\n            const SINCE_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.teacher_since.description.text');\n            const EXPERIENCES_TITLE = this.$filter('translate')('%create.teacher.experience.help_text.experiences.title.text');\n            const EXPERIENCES_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.experiences.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'hobby':\n                    this.helpText.title = TYPE_HOBBY_TITLE;\n                    this.helpText.description = TYPE_HOBBY_DESCRIPTION;\n                break;\n\n                case 'professional':\n                    this.helpText.title = TYPE_PROFESSIONAL_TITLE;\n                    this.helpText.description = TYPE_PROFESSIONAL_DESCRIPTION;\n                break;\n\n                case 'teacherSince':\n                    this.helpText.title = SINCE_TITLE;\n                    this.helpText.description = SINCE_DESCRIPTION;\n                break;\n\n                case 'experiences':\n                    this.helpText.title = EXPERIENCES_TITLE;\n                    this.helpText.description = EXPERIENCES_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addEditExperience\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n        private _addEditExperience(index, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalExperienceTmpl,\n                controller: 'mainApp.components.modal.ModalExperienceController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            experience: self.form.experiences[index],\n                            teacherId: self.$rootScope.teacherData.Id\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the new experience data\n            modalInstance.result.then(function (newExperience) {\n                if(newExperience) {\n                    self.form.experiences.push(newExperience);\n                }\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.teacherData.Type = this.form.type;\n            this.$rootScope.teacherData.TeacherSince = this.yearObject.value;\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send markers teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form', function(event, args: app.models.teacher.Teacher) {\n                self._fillForm(args);\n            });\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherExperienceSectionController.controllerId,\n                    TeacherExperienceSectionController);\n\n}\n","/**\n* config()\n* @description - teacher finish section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.finish', {\n                url: '/finish',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherFinishSection/teacherFinishSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherFinishSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherFinishSectionController\n * @description - Teacher Finish Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherFinishSectionController {\n        activate: () => void;\n    }\n\n    export interface ITeacherFinishScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherFinishSectionController implements ITeacherFinishSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherFinishSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            '$scope',\n            '$rootScope',\n            '$state',\n            'dataConfig',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.localStorageService'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $scope: ITeacherFinishScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $state: ng.ui.IStateService,\n            private dataConfig: IDataConfig,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private localStorage) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            // Put title on parent scope\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(9, 9);\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = \"Enter: Finish Create Teacher Process\";\n\n            //LOG\n            console.log('TeacherFinishSectionController controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        _finishProcess() {\n            //Remove early adopter id in localStorage\n            this.localStorage.removeItem(this.dataConfig.earlyIdLocalStorage);\n            //Remove teacher data in localStorage\n            this.localStorage.removeItem(this.dataConfig.teacherDataLocalStorage);\n\n            this.$state.go('page.landingPage');\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherFinishSectionController.controllerId,\n                    TeacherFinishSectionController);\n\n}\n","/**\n* config()\n* @description - basic teacher information section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.basicInfo', {\n                url: '/basicInfo',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherInfoSection/teacherInfoSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherInfoSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherInfoSectionController\n * @description - Teacher Info Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherInfoSectionController {\n        form: ITeacherInfoForm;\n        validate: ITeacherInfoValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherInfoScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    interface ISexForm {\n        sex: app.core.interfaces.IDataFromJsonI18n;\n    }\n\n    interface IBirthdateForm {\n        day: app.core.interfaces.ISelectListElement;\n        month: app.core.interfaces.IDataFromJsonI18n;\n        year: app.core.interfaces.ISelectListElement;\n    }\n\n    export interface ITeacherInfoForm {\n        phoneNumber: string;\n        sex: string;\n        birthDate: string;\n        bornCountry: string;\n        bornCity: string;\n        about: string;\n    }\n\n    interface ITeacherInfoValidate {\n        phoneNumber: app.core.util.functionsUtil.IValid;\n        sex: app.core.util.functionsUtil.IValid;\n        birthDate: app.core.interfaces.IBirthdateValidate;\n        bornCountry: app.core.util.functionsUtil.IValid;\n        bornCity: app.core.util.functionsUtil.IValid;\n        about: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherInfoSectionController implements ITeacherInfoSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherInfoSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherInfoForm;\n        validate: ITeacherInfoValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        listMonths: Array<app.core.interfaces.IDataFromJsonI18n>;\n        listSexs: Array<app.core.interfaces.IDataFromJsonI18n>;\n        listDays: Array<app.core.interfaces.ISelectListElement>;\n        listYears: Array<app.core.interfaces.ISelectListElement>;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        dateObject: IBirthdateForm;\n        sexObject: ISexForm;\n        STEP2_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.localStorageService',\n            'dataConfig',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private localStorage,\n            private dataConfig: IDataConfig,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherInfoScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP2_STATE = 'page.createTeacherPage.location';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(1, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            // Sex Select List Structure\n            this.sexObject = {sex: {code:'', value:''}};\n\n            // Birthdate Select List Structure\n            this.dateObject = {day:{value:''}, month: {code:'', value:''}, year: {value:''}};\n\n            //Init form\n            this.form = {\n                phoneNumber: '',\n                sex: '',\n                birthDate: null,\n                bornCountry: '',\n                bornCity: '',\n                about: ''\n            };\n\n            // Build Months, Days and Years select lists\n            this.listMonths = this.getDataFromJson.getMonthi18n();\n            //TODO: podemos optimizar esto ya que en listMonth ya traigo el json,\n            // no es necesario volverlo a traer aqui.\n            this.listSexs = this.getDataFromJson.getSexi18n();\n            this.listDays = this.functionsUtilService.buildNumberSelectList(1, 31);\n            this.listYears = this.functionsUtilService.buildNumberSelectList(1916, 2017);\n            // Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Build validate object fields\n            this.validate = {\n                phoneNumber: {valid: true, message: ''},\n                sex: {valid: true, message: ''},\n                birthDate: {\n                    day:{valid: true, message: ''},\n                    month: {valid: true, message: ''},\n                    year: {valid: true, message: ''},\n                    valid: true,\n                    message: ''\n                },\n                bornCountry: {valid: true, message: ''},\n                bornCity: {valid: true, message: ''},\n                about: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherInfoSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE USER PROFILE INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Profile Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP2_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n            this.form.phoneNumber = data.PhoneNumber;\n            //Charge Sex on select List\n            this.sexObject.sex.code = data.Gender;\n\n            //Build birthdate (Charge on select List)\n            let date = this.functionsUtilService.splitDate(data.BirthDate);\n            this.dateObject.day.value = date.day ? parseInt(date.day) : '';\n            this.dateObject.month.code = date.month !== 'Invalid date' ? date.month : '';\n            this.dateObject.year.value = date.year ? parseInt(date.year) : '';\n\n            //Charge Country on select List\n            this.countryObject.code = data.BornCountry;\n            this.form.bornCity = data.BornCity;\n            this.form.about = data.About;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Phone Number field\n            let phoneNumber_rules = [NULL_ENUM, EMPTY_ENUM, NUMBER_ENUM];\n            let onlyNum: any = this.form.phoneNumber.replace(/\\D+/g, \"\");\n            onlyNum = parseInt(onlyNum) || '';\n            this.validate.phoneNumber = this.functionsUtilService.validator(onlyNum, phoneNumber_rules);\n            if(!this.validate.phoneNumber.valid) {\n                formValid = this.validate.phoneNumber.valid;\n            }\n\n            //Validate Sex field\n            let sex_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.sex = this.functionsUtilService.validator(this.sexObject.sex.code, sex_rules);\n            if(!this.validate.sex.valid) {\n                formValid = this.validate.sex.valid;\n            }\n\n            //Validate 'Day' Birth Date fields\n            let day_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.day = this.functionsUtilService.validator(this.dateObject.day.value, day_birthdate_rules);\n            if(!this.validate.birthDate.day.valid) {\n                formValid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Month' Birth Date fields\n            let month_birthdate_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.birthDate.month = this.functionsUtilService.validator(this.dateObject.month.code, month_birthdate_rules);\n            if(!this.validate.birthDate.month.valid) {\n                formValid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Year' Birth Date fields\n            let year_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.year = this.functionsUtilService.validator(this.dateObject.year.value, year_birthdate_rules);\n            if(!this.validate.birthDate.year.valid) {\n                formValid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Clean error message if birthdate is valid\n            if(this.validate.birthDate.day.valid &&\n               this.validate.birthDate.month.valid &&\n               this.validate.birthDate.year.valid) {\n                   this.validate.birthDate.valid = true;\n                   this.validate.birthDate.message = '';\n            }\n\n            //Validate Country field\n            let country_born_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.bornCountry = this.functionsUtilService.validator(this.countryObject.code, country_born_rules);\n            if(!this.validate.bornCountry.valid) {\n                formValid = this.validate.bornCountry.valid;\n            }\n\n            //Validate City Born field\n            let city_born_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.bornCity = this.functionsUtilService.validator(this.form.bornCity, city_born_rules);\n            if(!this.validate.bornCity.valid) {\n                formValid = this.validate.bornCity.valid;\n            }\n\n            //Validate About me field\n            let about_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.about = this.functionsUtilService.validator(this.form.about, about_rules);\n            if(!this.validate.about.valid) {\n                formValid = this.validate.about.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (firstName, lastName, email, etc)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const NAME_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.name.title.text');\n            const NAME_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.name.description.text');\n            const EMAIL_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.email.title.text');\n            const EMAIL_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.email.description.text');\n            const PHONE_NUMBER_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.phone_number.title.text');\n            const PHONE_NUMBER_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.phone_number.description.text');\n            const SEX_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.gender.title.text');\n            const SEX_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.gender.description.text');\n            const BIRTHDATE_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.birthdate.title.text');\n            const BIRTHDATE_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.birthdate.description.text');\n            const BORN_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.born.title.text');\n            const BORN_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.born.description.text');\n            const ABOUT_TITLE = this.$filter('translate')('%create.teacher.basic_info.help_text.about.title.text');\n            const ABOUT_DESCRIPTION = this.$filter('translate')('%create.teacher.basic_info.help_text.about.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'firstName':\n                case 'lastName':\n                    this.helpText.title = NAME_TITLE;\n                    this.helpText.description = NAME_DESCRIPTION;\n                break;\n\n                case 'email':\n                    this.helpText.title = EMAIL_TITLE;\n                    this.helpText.description = EMAIL_DESCRIPTION;\n                break;\n\n                case 'phoneNumber':\n                    this.helpText.title = PHONE_NUMBER_TITLE;\n                    this.helpText.description = PHONE_NUMBER_DESCRIPTION;\n                break;\n\n                case 'sex':\n                    this.helpText.title = SEX_TITLE;\n                    this.helpText.description = SEX_DESCRIPTION;\n                break;\n\n                case 'birthDate':\n                    this.helpText.title = BIRTHDATE_TITLE;\n                    this.helpText.description = BIRTHDATE_DESCRIPTION;\n                break;\n\n                case 'born':\n                    this.helpText.title = BORN_TITLE;\n                    this.helpText.description = BORN_DESCRIPTION;\n                break;\n\n                case 'about':\n                    this.helpText.title = ABOUT_TITLE;\n                    this.helpText.description = ABOUT_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._setDataModelFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            //VARIABLES\n            let dateFormatted = this.functionsUtilService.joinDate(\n                                    this.dateObject.day.value,\n                                    this.dateObject.month.code,\n                                    this.dateObject.year.value);\n            let genderCode = this.sexObject.sex.code;\n            let countryCode = this.countryObject.code;\n            let recommended = this.localStorage.getItem(this.dataConfig.earlyIdLocalStorage);\n            /*********************************/\n\n            this.form.bornCountry = countryCode;\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.PhoneNumber = this.form.phoneNumber;\n            this.$rootScope.profileData.Gender = genderCode;\n            this.$rootScope.profileData.BirthDate = dateFormatted;\n            this.$rootScope.profileData.BornCountry = this.form.bornCountry;\n            this.$rootScope.profileData.BornCity = this.form.bornCity;\n            this.$rootScope.profileData.About = this.form.about;\n\n            //Save profile data on teacher data models\n            this.$rootScope.teacherData.Profile = this.$rootScope.profileData;\n\n            //If this teacher was recommended by a Student\n            this.$rootScope.teacherData.Recommended = recommended ? recommended : null;\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send user profile data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args: app.models.user.Profile) {\n                    self._fillForm(args);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherInfoSectionController.controllerId,\n                    TeacherInfoSectionController);\n\n}\n","/**\n* config()\n* @description - teacher language section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.language', {\n                url: '/language',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherLanguageSection/teacherLanguageSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherLanguageSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherLanguageSectionController\n * @description - Teacher Location Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherLanguageSectionController {\n        form: ITeacherLanguageForm;\n        validate: ITeacherLanguageValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherLanguageScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    export interface ITeacherLanguageForm {\n        native: Array<app.core.interfaces.IKeyValue>;\n        learn: Array<app.core.interfaces.IKeyValue>;\n        teach: Array<app.core.interfaces.IKeyValue>;\n    }\n\n    interface ITeacherLanguageValidate {\n        native: app.core.util.functionsUtil.IValid;\n        learn: app.core.util.functionsUtil.IValid;\n        teach: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherLanguageSectionController implements ITeacherLanguageSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherLanguageSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherLanguageForm;\n        validate: ITeacherLanguageValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        STEP2_STATE: string;\n        STEP4_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$timeout',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherLanguageScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $timeout: angular.ITimeoutService,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n            //CONSTANTS\n            this.STEP2_STATE = 'page.createTeacherPage.location';\n            this.STEP4_STATE = 'page.createTeacherPage.experience';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtil.progress(3, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            //Init form\n            this.form = {\n                native: [],\n                learn: [],\n                teach: []\n            };\n\n            // Build validate object fields\n            this.validate = {\n                native: {valid: true, message: ''},\n                teach: {valid: true, message: ''},\n                learn: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherLanguageSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Profile Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP4_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP2_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n\n            // Form is already filled (Just take native because it's required has a native language)\n            if(this.form.native.length === 0) {\n\n                let languageArray = this.getDataFromJson.getLanguagei18n();\n                for (let i = 0; i < languageArray.length; i++) {\n\n                    if(data.Languages.Native) {\n                        // Build user native language list\n                        for (let j = 0; j < data.Languages.Native.length; j++) {\n\n                            if(data.Languages.Native[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.native == null) {\n                                    this.form.native = [];\n                                    this.form.native.push(obj);\n                                } else {\n                                    this.form.native.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Learn) {\n                        // Build user learn language list\n                        for (let j = 0; j < data.Languages.Learn.length; j++) {\n\n                            if(data.Languages.Learn[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.learn == null) {\n                                    this.form.learn = [];\n                                    this.form.learn.push(obj);\n                                } else {\n                                    this.form.learn.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Teach) {\n                        // Build user teach language list\n                        for (let j = 0; j < data.Languages.Teach.length; j++) {\n\n                            if(data.Languages.Teach[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.teach == null) {\n                                    this.form.teach = [];\n                                    this.form.teach.push(obj);\n                                } else {\n                                    this.form.teach.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                }\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Native Languages List\n            let native_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.native = this.functionsUtil.validator(this.form.native, native_rules);\n            if(!this.validate.native.valid) {\n                formValid = this.validate.native.valid;\n            }\n\n            //Validate Learn Languages List\n            let learn_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.learn = this.functionsUtil.validator(this.form.learn, learn_rules);\n            if(!this.validate.learn.valid) {\n                formValid = this.validate.learn.valid;\n            }\n\n            //Validate Teach Languages List\n            let teach_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.teach = this.functionsUtil.validator(this.form.teach, teach_rules);\n            if(!this.validate.teach.valid) {\n                formValid = this.validate.teach.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (firstName, lastName, email, etc)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const NATIVE_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.native.title.text');\n            const NATIVE_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.native.description.text');\n            const LEARN_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.learn.title.text');\n            const LEARN_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.learn.description.text');\n            const TEACH_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.teach.title.text');\n            const TEACH_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.teach.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'native':\n                    this.helpText.title = NATIVE_TITLE;\n                    this.helpText.description = NATIVE_DESCRIPTION;\n                break;\n\n                case 'learn':\n                    this.helpText.title = LEARN_TITLE;\n                    this.helpText.description = LEARN_DESCRIPTION;\n                break;\n\n                case 'teach':\n                    this.helpText.title = TEACH_TITLE;\n                    this.helpText.description = TEACH_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addNewLanguages\n        * @description - open Modal in order to add a New Languages on Box\n        * @use - this._addNewLanguages();\n        * @function\n        * @return {void}\n        */\n        private _addNewLanguages(type, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalLanguagesTmpl,\n                controller: 'mainApp.components.modal.ModalLanguageController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            type: type,\n                            list: self.form[type]\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the languages options list\n            modalInstance.result.then(function (newLanguagesList) {\n                self.form[type] = newLanguagesList;\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _removeLanguage\n        * @description - remove a language element of options array\n        * @use - this._removeLanguage(3);\n        * @function\n        * @param {string} key - languages deselected by user\n        * @param {string} type - type of languages list (native, learn, teach)\n        * @return {void}\n        */\n        private _removeLanguage(key, type): void {\n             let newArray = this.form[type].filter(function(el) {\n                 return el.key !== key;\n             });\n\n             this.form[type] = newArray;\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n\n            if(this.form.native) {\n                let native = [];\n                for (let i = 0; i < this.form.native.length; i++) {\n                    native.push(this.form.native[i].key);\n                }\n                this.$rootScope.profileData.Languages.Native = native;\n            }\n\n            if(this.form.learn) {\n                let learn = [];\n                for (let i = 0; i < this.form.learn.length; i++) {\n                    learn.push(this.form.learn[i].key);\n                }\n                this.$rootScope.profileData.Languages.Learn = learn;\n            }\n\n            if(this.form.teach) {\n                let teach = [];\n                for (let i = 0; i < this.form.teach.length; i++) {\n                    teach.push(this.form.teach[i].key);\n                }\n                this.$rootScope.profileData.Languages.Teach = teach;\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send markers teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args: app.models.user.Profile) {\n                    self._fillForm(args);\n                }\n            );\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherLanguageSectionController.controllerId,\n                    TeacherLanguageSectionController);\n\n}\n","/**\n* config()\n* @description - teacher location section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.location', {\n                url: '/location',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherLocationSection/teacherLocationSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherLocationSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherLocationSectionController\n * @description - Teacher Location Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherLocationSectionController {\n        form: ITeacherLocationForm;\n        validate: ITeacherLocationValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherLocationScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n    export interface ITeacherLocationForm {\n        countryLocation: string;\n        addressLocation: string;\n        cityLocation: string;\n        stateLocation: string;\n        zipCodeLocation: string;\n        positionLocation: app.models.user.Position;\n    }\n\n    interface ITeacherLocationValidate {\n        countryLocation: app.core.util.functionsUtil.IValid;\n        addressLocation: app.core.util.functionsUtil.IValid;\n        cityLocation: app.core.util.functionsUtil.IValid;\n        stateLocation: app.core.util.functionsUtil.IValid;\n        zipCodeLocation: app.core.util.functionsUtil.IValid;\n        positionLocation: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherLocationSectionController implements ITeacherLocationSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherLocationSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherLocationForm;\n        validate: ITeacherLocationValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        geocoder: google.maps.Geocoder;\n        mapConfig: components.map.IMapConfig;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        STEP1_STATE: string;\n        STEP3_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$timeout'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherLocationScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $timeout: angular.ITimeoutService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP1_STATE = 'page.createTeacherPage.basicInfo';\n            this.STEP3_STATE = 'page.createTeacherPage.language';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.location.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(2, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            //Init form\n            this.form = {\n                countryLocation: '',\n                cityLocation: '',\n                stateLocation: '',\n                addressLocation: '',\n                zipCodeLocation: '',\n                positionLocation: new app.models.user.Position()\n            };\n\n            //Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Init Map\n            this.mapConfig = this.functionsUtilService.buildMapConfig(\n                null, 'drag-maker-map', null, null\n            );\n\n            // Build validate object fields\n            this.validate = {\n                countryLocation: {valid: true, message: ''},\n                cityLocation: {valid: true, message: ''},\n                stateLocation: {valid: true, message: ''},\n                addressLocation: {valid: true, message: ''},\n                zipCodeLocation: {valid: true, message: ''},\n                positionLocation: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherLocationSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid){\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Profile Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP3_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP1_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n            this.form.addressLocation = data.Location.Address;\n            this.form.cityLocation = data.Location.City;\n            this.form.stateLocation = data.Location.State;\n            this.form.zipCodeLocation = data.Location.ZipCode;\n            //Charge Country on select List\n            this.countryObject.code = data.Location.Country;\n            //Current Map Position\n            this.form.positionLocation = new app.models.user.Position(data.Location.Position);\n\n            this.mapConfig = this.functionsUtilService.buildMapConfig(\n                [\n                    {\n                        id: this.form.positionLocation.Id,\n                        location: {\n                            position: {\n                                lat: parseFloat(this.form.positionLocation.Lat),\n                                lng: parseFloat(this.form.positionLocation.Lng)\n                            }\n                        }\n                    }\n                ],\n                'drag-maker-map',\n                {lat: parseFloat(this.form.positionLocation.Lat), lng: parseFloat(this.form.positionLocation.Lng)},\n                null\n            );\n\n            /*\n            * Send event to child (MapController) in order to It draws\n            * each Marker on the Map\n            */\n            this.$scope.$broadcast('BuildMarkers', this.mapConfig);\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Country field\n            let country_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.countryLocation = this.functionsUtilService.validator(this.countryObject.code, country_rules);\n            if(!this.validate.countryLocation.valid) {\n                formValid = this.validate.countryLocation.valid;\n            }\n\n            //Validate City field\n            let city_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.cityLocation = this.functionsUtilService.validator(this.form.cityLocation, city_rules);\n            if(!this.validate.cityLocation.valid) {\n                formValid = this.validate.cityLocation.valid;\n            }\n\n            //Validate State field\n            let state_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.stateLocation = this.functionsUtilService.validator(this.form.stateLocation, state_rules);\n            if(!this.validate.stateLocation.valid) {\n                formValid = this.validate.stateLocation.valid;\n            }\n\n            //Validate Address field\n            let address_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.addressLocation = this.functionsUtilService.validator(this.form.addressLocation, address_rules);\n            if(!this.validate.addressLocation.valid) {\n                formValid = this.validate.addressLocation.valid;\n            }\n\n            //Validate Zip Code field\n            //TODO por ahora no es importante validar el Zip Code, pero si el\n            // usuario no escribe nada, me sale el error como si fuera requerido,\n            // y este campo no es requerido, solucionar eso.\n            /*let zipCode_rules = [NUMBER_ENUM];\n            this.validate.zipCodeLocation = this.functionsUtilService.validator(this.form.zipCodeLocation, zipCode_rules);\n            if(!this.validate.zipCodeLocation.valid) {\n                formValid = this.validate.zipCodeLocation.valid;\n            }*/\n\n            //Validate Position on Map\n            let position_rules = [NULL_ENUM, EMPTY_ENUM];\n            let latValidate= this.functionsUtilService.validator(this.form.positionLocation.Lat, position_rules);\n            let lngValidate = this.functionsUtilService.validator(this.form.positionLocation.Lng, position_rules);\n            if(!latValidate.valid || !lngValidate.valid) {\n                if(!latValidate.valid) {\n                    this.validate.positionLocation = latValidate;\n                    formValid = this.validate.positionLocation.valid;\n                } else if(!lngValidate.valid) {\n                    this.validate.positionLocation = lngValidate;\n                    formValid = this.validate.positionLocation.valid;\n                }\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (firstName, lastName, email, etc)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const COUNTRY_TITLE = this.$filter('translate')('%create.teacher.location.help_text.cntry.title.text');\n            const COUNTRY_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.cntry.description.text');\n            const CITY_TITLE = this.$filter('translate')('%create.teacher.location.help_text.city.title.text');\n            const CITY_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.city.description.text');\n            const STATE_TITLE = this.$filter('translate')('%create.teacher.location.help_text.state.title.text');\n            const STATE_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.state.description.text');\n            const ADDRESS_TITLE = this.$filter('translate')('%create.teacher.location.help_text.address.title.text');\n            const ADDRESS_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.address.description.text');\n            const ZIP_CODE_TITLE = this.$filter('translate')('%create.teacher.location.help_text.zip_code.title.text');\n            const ZIP_CODE_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.zip_code.description.text');\n            const POSITION_TITLE = this.$filter('translate')('%create.teacher.location.help_text.position.title.text');\n            const POSITION_DESCRIPTION = this.$filter('translate')('%create.teacher.location.help_text.position.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'country':\n                    this.helpText.title = COUNTRY_TITLE;\n                    this.helpText.description = COUNTRY_DESCRIPTION;\n                break;\n\n                case 'city':\n                    this.helpText.title = CITY_TITLE;\n                    this.helpText.description = CITY_DESCRIPTION;\n                break;\n\n                case 'state':\n                    this.helpText.title = STATE_TITLE;\n                    this.helpText.description = STATE_DESCRIPTION;\n                break;\n\n                case 'address':\n                    this.helpText.title = ADDRESS_TITLE;\n                    this.helpText.description = ADDRESS_DESCRIPTION;\n                break;\n\n                case 'zipCode':\n                    this.helpText.title = ZIP_CODE_TITLE;\n                    this.helpText.description = ZIP_CODE_DESCRIPTION;\n                break;\n\n                case 'position':\n                    this.helpText.title = POSITION_TITLE;\n                    this.helpText.description = POSITION_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * changeMapPosition\n        * @description -\n        * @use - this.changeMapPosition();\n        * @function\n        * @param {string} - change map position\n        * @return {void}\n        */\n        changeMapPosition(): void {\n            //VARIABLES\n            let self = this;\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryLocation = countryCode;\n\n            let location = {\n                country: this.form.countryLocation,\n                city: this.form.cityLocation,\n                address: this.form.addressLocation\n            };\n            /************************************/\n\n            this.$timeout(function(){\n                self.$scope.$broadcast('CodeAddress', location);\n            });\n\n        }\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            //VARIABLES\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryLocation = countryCode;\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.Location.Country = this.form.countryLocation;\n            this.$rootScope.profileData.Location.Address = this.form.addressLocation;\n            this.$rootScope.profileData.Location.City = this.form.cityLocation;\n            this.$rootScope.profileData.Location.State = this.form.stateLocation;\n            this.$rootScope.profileData.Location.ZipCode = this.form.zipCodeLocation;\n            this.$rootScope.profileData.Location.Position = this.form.positionLocation;\n            //FIXME: Cuando le doy guardar, se me vuelve a poner el\n            // marker en la posicion anterior. Asi que no se si esta linea sea\n            // necesaria. En userEditLocationPage.controller.ts la comente y no\n            // rompio nada.\n            //get position on Map\n            this.changeMapPosition();\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send markers teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form', function(event, args: app.models.user.Profile) {\n                self._fillForm(args);\n            });\n\n            /**\n            * Return Position\n            * @child - MapController\n            * @description - Parent (TeacherLocationSectionController) receive\n                             Child's event (MapController) with new position on\n                             map (lng, lat)\n            * @event\n            */\n            this.$scope.$on('Position', function(event, args) {\n                self.form.positionLocation.Lng = args.lng;\n                self.form.positionLocation.Lat = args.lat;\n            });\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherLocationSectionController.controllerId,\n                    TeacherLocationSectionController);\n\n}\n","/**\n* config()\n* @description - teacher method section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.method', {\n                url: '/method',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherMethodSection/teacherMethodSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherMethodSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherMethodSectionController\n * @description - Teacher Method Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherMethodSectionController {\n        form: ITeacherMethodForm;\n        validate: ITeacherMethodValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherMethodScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    export interface ISelectListElementDisabled extends app.core.interfaces.IDataFromJsonI18n {\n        disabled?: boolean;\n    }\n\n    export interface ITeacherMethodForm {\n        methodology: string;\n        immersion: app.models.teacher.Immersion;\n    }\n\n    interface ITeacherMethodValidate {\n        methodology: app.core.util.functionsUtil.IValid;\n        immersionActive: app.core.util.functionsUtil.IValid;\n        typeOfImmersionList: app.core.util.functionsUtil.IValid;\n        otherCategory: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherMethodSectionController implements ITeacherMethodSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherMethodSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherMethodForm;\n        validate: ITeacherMethodValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        typeOfImmersionList: Array<ISelectListElementDisabled>;\n        typeOfImmersionOptionBox: Array<app.core.interfaces.IKeyValue>;\n        typeObject: app.core.interfaces.IDataFromJsonI18n;\n        step5State: string;\n        STEP7_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherMethodScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            this.step5State = '';\n            //CONSTANTS\n            this.STEP7_STATE = 'page.createTeacherPage.price';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.method.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.method.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtil.progress(6, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Init form\n            this.form = {\n                methodology: '',\n                immersion: new app.models.teacher.Immersion\n            };\n\n            // Build Type of Immersion select lists\n            this.typeOfImmersionList = this.getDataFromJson.getTypeOfImmersioni18n();\n\n            // Init Type of Immersion options box\n            this.typeOfImmersionOptionBox = [];\n\n            // Build validate object fields\n            this.validate = {\n                methodology: {valid: true, message: ''},\n                immersionActive: {valid: true, message: ''},\n                typeOfImmersionList: {valid: true, message: ''},\n                otherCategory: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('TeacherMethodSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeStatus\n        * @description - change 'Immersion Switch' Status\n        * @function\n        * @return void\n        */\n        changeStatus(): void {\n            this.form.immersion.Active = !this.form.immersion.Active;\n        }\n\n\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP7_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.step5State, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            //VARIABLES\n            if(data.Type === 'P') {\n                this.step5State = 'page.createTeacherPage.education';\n            } else {\n                this.step5State = 'page.createTeacherPage.experience';\n            }\n            this.form.methodology = data.Methodology;\n            this.form.immersion = data.Immersion;\n\n            //Charge immersion type list\n            if(this.form.immersion.Active) {\n\n                // type of immersion list was already filled\n                if(this.typeOfImmersionOptionBox.length === 0) {\n\n                    let immersionArray = this.getDataFromJson.getTypeOfImmersioni18n();\n                    let newArray: Array<app.core.interfaces.IKeyValue> = [];\n\n                    for (let i = 0; i < immersionArray.length; i++) {\n\n                        for (let j = 0; j < this.form.immersion.Category.length; j++) {\n                            if(this.form.immersion.Category[j] === immersionArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = immersionArray[i].code;\n                                obj.value = immersionArray[i].value;\n                                //Disable immersion option from select list\n                                this._disableEnableOption(true, obj.key);\n                                this.typeOfImmersionOptionBox.push(obj);\n                            }\n                        }\n\n                    }\n\n                }\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const GLOBAL_MESSAGE = this.$filter('translate')('%create.teacher.method.validation.message.text');\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate 'Methodology' fields\n            let methodology_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.methodology = this.functionsUtil.validator(this.form.methodology, methodology_rules);\n            if(!this.validate.methodology.valid) {\n                formValid = this.validate.methodology.valid;\n            }\n\n            //Validate type of immersion list If user select 'YES' immersion option\n            if(this.form.immersion.Active) {\n\n                let typeOfImmersion_rules = [NULL_ENUM, EMPTY_ENUM];\n                this.validate.typeOfImmersionList = this.functionsUtil.validator(this.form.immersion.Category, typeOfImmersion_rules);\n\n                let otherCategory_rules = [NULL_ENUM, EMPTY_ENUM];\n                this.validate.otherCategory = this.functionsUtil.validator(this.form.immersion.OtherCategory, otherCategory_rules);\n\n                if(this.validate.typeOfImmersionList.valid) {\n\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n\n                } else if(this.validate.otherCategory.valid) {\n\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n\n                } else {\n\n                    this.validate.globalValidate.valid = false;\n                    this.validate.globalValidate.message = GLOBAL_MESSAGE;\n                    formValid = this.validate.globalValidate.valid;\n\n                }\n\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (methodology, immerison)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const METHODOLOGY_TITLE = this.$filter('translate')('%create.teacher.method.help_text.methodology.title.text');\n            const METHODOLOGY_DESCRIPTION = this.$filter('translate')('%create.teacher.method.help_text.methodology.description.text');\n            const IMMERSION_TITLE = this.$filter('translate')('%create.teacher.method.help_text.imm.title.text');\n            const IMMERSION_DESCRIPTION = this.$filter('translate')('%create.teacher.method.help_text.imm.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'methodology':\n                    this.helpText.title = METHODOLOGY_TITLE;\n                    this.helpText.description = METHODOLOGY_DESCRIPTION;\n                break;\n\n                case 'immersion':\n                    this.helpText.title = IMMERSION_TITLE;\n                    this.helpText.description = IMMERSION_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addNewImmersion\n        * @description - add new immersion type from typeOfImmersionList to typeOfImmersionOptionBox\n        * @use - this._addNewImmersion();\n        * @function\n        * @return {void}\n        */\n        private _addNewImmersion(): void {\n            let self = this;\n\n            //Disable immersion option from select list\n            this._disableEnableOption(true, this.typeObject.code);\n\n            this.typeOfImmersionOptionBox.push({key: this.typeObject.code, value: this.typeObject.value});\n\n            //Add new immersion type on form object\n            this.form.immersion.Category = [];\n            for (let i = 0; i < this.typeOfImmersionOptionBox.length; i++) {\n                this.form.immersion.Category.push(this.typeOfImmersionOptionBox[i].key);\n            }\n\n            event.preventDefault();\n        }\n\n\n\n        /**\n        * _removeImmersion\n        * @description - remove a immersion type element of options array\n        * @use - this._removeImmersion(3);\n        * @function\n        * @param {string} key - immersion deselected by user\n        * @return {void}\n        */\n        private _removeImmersion(key): void {\n\n            //Enable immersion option from select list\n            this._disableEnableOption(false, key);\n\n            let newArray = this.typeOfImmersionOptionBox.filter(function(el) {\n                return el.key !== key;\n            });\n\n             this.typeOfImmersionOptionBox = newArray;\n\n             //Create new immersion type list on form object\n             this.form.immersion.Category = [];\n             for (let i = 0; i < this.typeOfImmersionOptionBox.length; i++) {\n                 this.form.immersion.Category.push(this.typeOfImmersionOptionBox[i].key);\n             }\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            //VARIABLES\n            let immersionOptions = this.typeOfImmersionOptionBox;\n            /*********************************/\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.teacherData.Methodology = this.form.methodology;\n            this.$rootScope.teacherData.Immersion = this.form.immersion;\n            this.$rootScope.teacherData.Immersion.Category = this.form.immersion.Category;\n\n        }\n\n\n\n        /**\n        * _disableEnableOption\n        * @description - disable/enable a select option from selectlist\n        * @use - this._disableEnableOption(true, '01');\n        * @function\n        * @param {string} key - immersion option key\n        * @param {boolean} action - enable (false) / disable (true)\n        * @return {void}\n        */\n        private _disableEnableOption(action, key): void {\n            for (let i = 0; i < this.typeOfImmersionList.length; i++) {\n                if(this.typeOfImmersionList[i].code === key) {\n                    this.typeOfImmersionList[i].disabled = action;\n                }\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form', function(event, args: app.models.teacher.Teacher) {\n\n                self._fillForm(args);\n\n            });\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherMethodSectionController.controllerId,\n                    TeacherMethodSectionController);\n\n}\n","/**\n* config()\n* @description - teacher photo section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.photo', {\n                url: '/photo',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherPhotoSection/teacherPhotoSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherPhotoSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n"," /**\n * TeacherPhotoSectionController\n * @description - Teacher Photo Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherPhotoSectionController {\n        form: ITeacherPhotoForm;\n        validate: ITeacherPhotoValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherPhotoScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    interface ITeacherPhotoForm {\n        avatar: File;\n        croppedDataUrl: string;\n        thumbnail: string;\n    }\n\n    interface ITeacherPhotoValidate {\n        avatar: app.core.util.functionsUtil.IValid;\n        thumbnail: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherPhotoSectionController implements ITeacherPhotoSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherPhotoSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherPhotoForm;\n        validate: ITeacherPhotoValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        uploading: boolean;\n        STEP7_STATE: string;\n        FINAL_STEP_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.s3Upload.S3UploadService',\n            'mainApp.core.util.messageUtilService',\n            'Upload',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private S3UploadService: app.core.s3Upload.IS3UploadService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private Upload: app.core.interfaces.IUpload,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherPhotoScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP7_STATE = 'page.createTeacherPage.price';\n            this.FINAL_STEP_STATE = 'page.createTeacherPage.finish';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.photo.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.photo.teacher.help_text.description.text');\n            /*********************************/\n\n            // Init upload loading button\n            this.uploading = false;\n\n            // Put title on parent scope\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(8, 9);\n\n            // Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Init form\n            this.form = {\n                avatar: null,\n                croppedDataUrl: '',\n                thumbnail: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                avatar: {valid: true, message: ''},\n                thumbnail: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherPhotoSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n            //VARIABLES\n            let self = this;\n            //Validate data form\n            let formValid = this._validateForm();\n            /****************************************************/\n\n            //If form is valid, save data model\n            if(formValid) {\n\n                this.uploading = true;\n\n                // If this.form.avatar exists, resize and upload image\n                if(this.form.avatar) {\n                    this._resizeImage().then(function(result) {\n\n                        self.uploading = false;\n\n                        if(result.Location) {\n                            // Save teacher model on DB\n                            self._setDataModelFromForm(result.Location);\n                            self.$scope.$emit('Save Profile Data');\n\n                            // GO TO NEXT STEP\n                            self.$state.go(self.FINAL_STEP_STATE, {reload: true});\n                        } else {\n                            self.messageUtil.error('');\n                        }\n\n                    });\n\n                // If this.form.avatar not exists, only go to next step\n                } else {\n                    this.$scope.$emit('Save Profile Data');\n                    // GO TO NEXT STEP\n                    this.$state.go(this.FINAL_STEP_STATE, {reload: true});\n                }\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP7_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - User Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n\n            this.form.thumbnail = data.Avatar;\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const DEFINED_ENUM = app.core.util.functionsUtil.Validation.Defined;\n            const PHOTO_MESSAGE = this.$filter('translate')('%create.teacher.photo.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate photo\n            let avatar_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.avatar = this.functionsUtilService.validator(this.form.avatar, avatar_rules);\n\n            //Validate thumbnail\n            let thumbnail_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.thumbnail = this.functionsUtilService.validator(this.form.thumbnail, thumbnail_rules);\n\n            //If avatar image is not valid\n            if(!this.validate.avatar.valid) {\n                //If thumbnail image is not valid\n                if(!this.validate.thumbnail.valid) {\n                    this.validate.globalValidate.valid = false;\n                    this.validate.globalValidate.message = PHOTO_MESSAGE;\n                    formValid = this.validate.globalValidate.valid;\n                } else {\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n                }\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (photo, immerison)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const AVATAR_TITLE = this.$filter('translate')('%create.teacher.photo.help_text.avatar.title.text');\n            const AVATAR_DESCRIPTION = this.$filter('translate')('%create.teacher.photo.teacher.help_text.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'avatar':\n                    this.helpText.title = AVATAR_TITLE;\n                    this.helpText.description = AVATAR_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _resizeImage\n        * @description - resize image base on defaults parameters\n        * @use - this._resizeImage();\n        * @function\n        * @return {void}\n        */\n        private _resizeImage(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            //New file name\n            let newName = app.core.util.functionsUtil.FunctionsUtilService.generateGuid() + '.jpeg';\n            // Image Options\n            let options= {\n                width: 250,\n                height: 250,\n                quality: 1.0,\n                type: 'image/jpeg',\n                pattern:'.jpg',\n                restoreExif: false\n            };\n            // Build file base on cropped data image\n            let file = this.Upload.dataUrltoBlob(this.form.croppedDataUrl, newName);\n            /****************************************************/\n\n            // Resize image (change extension to jpeg, resize and quality)\n            return this.Upload.resize(file, options).then(function(resizedFile) {\n\n                // Upload resized file to Amazon S3\n                return self._uploadImage(resizedFile).then(function(result) {\n                    return result;\n                });\n\n            });\n\n        }\n\n\n\n        /**\n        * _uploadImage\n        * @description - upload resize image to Amazon S3\n        * @use - this._uploadImage(resizedFile);\n        * @function\n        * @param {File} resizedFile file object\n        * @return {void}\n        */\n        private _uploadImage(resizedFile): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n\n            return this.S3UploadService.upload(resizedFile).then(function (result) {\n\n                return result;\n\n            }, function (error) {\n\n                // Mark the error\n                console.log('error', error);\n                return error;\n\n            });\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(avatar): void {\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.Avatar = avatar;\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this photo subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args: app.models.user.Profile) {\n                    self._fillForm(args);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherPhotoSectionController.controllerId,\n                    TeacherPhotoSectionController);\n\n}\n","/**\n* config()\n* @description - teacher price section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.price', {\n                url: '/price',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherPriceSection/teacherPriceSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherPriceSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherPriceSectionController\n * @description - Teacher Price Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherPriceSectionController {\n        form: ITeacherPriceForm;\n        validate: ITeacherPriceValidate;\n        activate: () => void;\n    }\n\n    export interface ITeacherPriceScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n    export interface IParentScope extends angular.IScope {\n        vm: ICreateTeacherPageController;\n    }\n\n    export interface ITeacherPriceForm {\n        privateClass: app.models.teacher.TypeOfPrice;\n        groupClass: app.models.teacher.TypeOfPrice;\n    }\n\n    interface ITeacherPriceValidate {\n        privateClassActive: app.core.util.functionsUtil.IValid;\n        privateClassPrice: app.core.util.functionsUtil.IValid;\n        groupClassActive: app.core.util.functionsUtil.IValid;\n        groupClassPrice: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherPriceSectionController implements ITeacherPriceSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherPriceSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherPriceForm;\n        validate: ITeacherPriceValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        STEP6_STATE: string;\n        STEP8_STATE: string;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: ITeacherPriceScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP6_STATE = 'page.createTeacherPage.method';\n            this.STEP8_STATE = 'page.createTeacherPage.photo';\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.price.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.description.text');\n            /*********************************/\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.functionsUtilService.progress(7, 9);\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Init form\n            this.form = {\n                privateClass: new app.models.teacher.TypeOfPrice,\n                groupClass: new app.models.teacher.TypeOfPrice\n            };\n\n            // Build validate object fields\n            this.validate = {\n                privateClassPrice: {valid: true, message: ''},\n                privateClassActive: {valid: true, message: ''},\n                groupClassPrice: {valid: true, message: ''},\n                groupClassActive: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('TeacherPriceSectionController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeStatus\n        * @description - change 'Private Class Switch' or 'Group Class Switch' Status\n        * @function\n        * @return void\n        */\n        changeStatus(type): void {\n            this.form[type].Active = !this.form[type].Active;\n        }\n\n\n\n        /**\n        * goToNext\n        * @description - go to next step (create or update teacher data on DB)\n        * @function\n        * @return void\n        */\n        goToNext(): void {\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Data');\n                // GO TO NEXT STEP\n                this.$state.go(this.STEP8_STATE, {reload: true});\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * goToBack\n        * @description - go to back step\n        * @function\n        * @return void\n        */\n        goToBack(): void {\n            this.$state.go(this.STEP6_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            this.form.privateClass = data.Price.PrivateClass;\n            this.form.groupClass = data.Price.GroupClass;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const IS_NOT_ZERO_ENUM = app.core.util.functionsUtil.Validation.IsNotZero;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const TRUE_ENUM = app.core.util.functionsUtil.Validation.IsTrue;\n            const GLOBAL_MESSAGE = this.$filter('translate')('%create.teacher.price.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate price per hour If user select 'YES' private class option\n            if(this.form.privateClass.Active) {\n\n                let privateClassPrice_rules = [NULL_ENUM, EMPTY_ENUM, IS_NOT_ZERO_ENUM];\n                this.validate.privateClassPrice = this.functionsUtilService.validator(this.form.privateClass.HourPrice, privateClassPrice_rules);\n                if(!this.validate.privateClassPrice.valid) {\n                    formValid = this.validate.privateClassPrice.valid;\n                }\n\n            }\n\n            //Validate price per hour If user select 'YES' group class option\n            if(this.form.groupClass.Active) {\n\n                let groupClassPrice_rules = [NULL_ENUM, EMPTY_ENUM, IS_NOT_ZERO_ENUM];\n                this.validate.groupClassPrice = this.functionsUtilService.validator(this.form.groupClass.HourPrice, groupClassPrice_rules);\n                if(!this.validate.groupClassPrice.valid) {\n                    formValid = this.validate.groupClassPrice.valid;\n                }\n\n            }\n\n            //Validate If user selected one Type of Class (private classes)\n            let privateClassActive_rules = [TRUE_ENUM];\n            this.validate.privateClassActive = this.functionsUtilService.validator(this.form.privateClass.Active, privateClassActive_rules);\n\n            //Validate If user selected one Type of Class (group classes)\n            let groupClassActive_rules = [TRUE_ENUM];\n            this.validate.groupClassActive = this.functionsUtilService.validator(this.form.groupClass.Active, groupClassActive_rules);\n\n            //Charge a global error message if bith switches are FALSE\n            if(!this.validate.privateClassActive.valid && !this.validate.groupClassActive.valid) {\n                this.validate.globalValidate.valid = false;\n                this.validate.globalValidate.message = GLOBAL_MESSAGE;\n                formValid = this.validate.globalValidate.valid;\n            } else {\n                this.validate.globalValidate.valid = true;\n                this.validate.globalValidate.message = '';\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (price, immerison)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const PRIVATE_CLASS_TITLE = this.$filter('translate')('%create.teacher.price.help_text.private_class.title.text');\n            const PRIVATE_CLASS_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.private_class.description.text');\n            const GROUP_CLASS_TITLE = this.$filter('translate')('%create.teacher.price.help_text.group_class.title.text');\n            const GROUP_CLASS_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.group_class.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'privateClass':\n                    this.helpText.title = PRIVATE_CLASS_TITLE;\n                    this.helpText.description = PRIVATE_CLASS_DESCRIPTION;\n                break;\n\n                case 'groupClass':\n                    this.helpText.title = GROUP_CLASS_TITLE;\n                    this.helpText.description = GROUP_CLASS_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.teacherData.Price.PrivateClass = this.form.privateClass;\n            this.$rootScope.teacherData.Price.GroupClass = this.form.groupClass;\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this price subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - CreateTeacherPageController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form', function(event, args: app.models.teacher.Teacher) {\n\n                self._fillForm(args);\n\n            });\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherPriceSectionController.controllerId,\n                    TeacherPriceSectionController);\n\n}\n","/**\n* config()\n* @description - teacher welcome section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.createTeacherPage.start', {\n                url: '/start',\n                views: {\n                    'step': {\n                        templateUrl: 'app/pages/createTeacherPage/teacherWelcomeSection/teacherWelcomeSection.html',\n                        controller: 'mainApp.pages.createTeacherPage.TeacherWelcomeSectionController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * TeacherWelcomeSectionController\n * @description - Teacher Welcome Section Controller (create teacher)\n */\n\nmodule app.pages.createTeacherPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherWelcomeSectionController {\n        activate: () => void;\n    }\n\n    export interface ITeacherWelcomeScope extends angular.IScope {\n        $parent: IParentScope;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherWelcomeSectionController implements ITeacherWelcomeSectionController {\n\n        static controllerId = 'mainApp.pages.createTeacherPage.TeacherWelcomeSectionController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        STEP1_STATE: string;\n        INITIAL_PROGRESS_WIDTH: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            '$state',\n            '$scope',\n            '$rootScope',\n            'mainApp.core.util.FunctionsUtilService'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $state: ng.ui.IStateService,\n            private $scope: ITeacherWelcomeScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.STEP1_STATE = 'page.createTeacherPage.basicInfo';\n            this.INITIAL_PROGRESS_WIDTH = '2%';\n\n            // Update progress bar width\n            this.$scope.$parent.vm.progressWidth = this.INITIAL_PROGRESS_WIDTH;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = \"Enter: Start Create Teacher Process\";\n            //LOG\n            console.log('TeacherWelcomeSectionController controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * goToStart\n        * @description - go to first step\n        * @function\n        * @return void\n        */\n\n        goToStart(): void {\n            /* TODO: Muy mala idea lanzar el Save Data desde el Welcome, por que si\n            solo estoy curioseando esta sección, ya quedo marcado como profesor,\n            sin querer serlo. Esto lo coloque aqui por que al crear una experiencia\n            me pedia el id de profesor, y como no lo tengo en ese instante, rompe */\n            this.$rootScope.teacherData.Profile = this.$rootScope.profileData;\n            this.$scope.$emit('Save Data');\n            this.$state.go(this.STEP1_STATE, {reload: true});\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.createTeacherPage')\n        .controller(TeacherWelcomeSectionController.controllerId,\n                    TeacherWelcomeSectionController);\n\n}\n","/**\n* config()\n* @description - edit Profile page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editProfile', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editProfile', {\n                url: '/users/edit',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/editProfile/editProfile.html',\n                        controller: 'mainApp.pages.editProfile.EditProfileController',\n                        controllerAs: 'vm',\n                        resolve: {\n                            waitForAuth: ['mainApp.auth.AuthService', function(AuthService) {\n                                return AuthService.autoRefreshToken();\n                            }]\n                        }\n                    }\n                },\n                cache: false,\n                data: {\n                    requireLogin: true\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = true;\n                    $rootScope.activeFooter = true;\n                    $rootScope.activeMessageBar = false;\n                }]\n            });\n    }\n})();\n","/**\n * EditProfileController\n * @description - Edit User Profile Page Controller\n */\n\nmodule app.pages.editProfile {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditProfileController {\n        activate: () => void;\n    }\n\n    interface IEditProfileError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditProfileController implements IEditProfileController {\n\n        static controllerId = 'mainApp.pages.editProfile.EditProfileController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        isTeacher: boolean;\n        teacherData: app.models.teacher.Teacher;\n        progressWidth: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.models.user.UserService',\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.core.util.messageUtilService',\n            'dataConfig',\n            '$state',\n            '$stateParams',\n            '$filter',\n            '$scope',\n            '$window',\n            '$rootScope',\n            '$uibModal',\n            'waitForAuth'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private userService: app.models.user.IUserService,\n            private teacherService: app.models.teacher.ITeacherService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private dataConfig: IDataConfig,\n            private $state: ng.ui.IStateService,\n            private $stateParams: app.core.interfaces.IStateParamsData,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $window,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            waitForAuth) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n            let loggedUserId = this.$rootScope.userData.id;\n\n            //Get current state\n            let currentState = this.$state.current.name;\n\n            if(this.$rootScope.profileData) {\n                //Validate if is teacher to change some text on view\n                this.isTeacher = this.$rootScope.profileData.IsTeacher;\n            }\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Edit Profile Page';\n            //VARIABLES\n            let self = this;\n\n            //LOG\n            console.log('editProfile controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //Charge user profile data\n            this.fillFormWithProfileData();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * fillFormWithProfileData\n        * @description - get user profile data from DB, and fill each field on form.\n        * @function\n        * @return void\n        */\n\n        fillFormWithProfileData(): void {\n            // VARIABLES\n            let self = this;\n            let userId = this.$rootScope.userData.id;\n\n            if(userId) {\n                // GET USER PROFILE DATA\n                this.userService.getUserProfileById(userId)\n                .then(\n                    function(response) {\n\n                        if(response.userId) {\n                            self.$rootScope.profileData = new app.models.user.Profile(response);\n                            self.$scope.$broadcast('Fill User Profile Form', self.$rootScope.profileData);\n                        }\n\n                    }\n                );\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Create Teacher Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Save Profile Data event\n            * @description - Parent (EditProfileController) receive Child's\n                             event in order to save user profile data on BD\n            * @event\n            */\n            this.$scope.$on('Save Profile Data', function(event, args){\n                //CONSTANTS\n                const SUCCESS_MESSAGE = self.$filter('translate')('%notification.success.text');\n                //VARIABLES\n                let userId = self.$rootScope.profileData.UserId;\n                /**************************************************************/\n\n                if(userId) {\n                    self.userService.updateUserProfile(self.$rootScope.profileData)\n                    .then(\n                        function(response) {\n                            if(response.userId) {\n                                //Fill Form\n                                self.$rootScope.profileData = new app.models.user.Profile(response);\n                                //TODO: Validar si esto es necesario ya que estoy guardando todo en $rootScope\n                                // ya deberia poder tener acceso en los hijos\n                                self.$scope.$broadcast('Fill User Profile Form', self.$rootScope.profileData);\n                                self.$scope.$broadcast('Saved');\n                            }\n                        },\n                        function(error) {\n                            self.messageUtil.error('');\n                            self.$scope.$broadcast('Fill User Profile Form', 'error');\n                        }\n                    );\n                }\n            });\n\n        }\n\n    }\n\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editProfile')\n        .controller(EditProfileController.controllerId,\n                    EditProfileController);\n\n}\n","/**\n* config()\n* @description - user edit profile basic info page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editProfile')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editProfile.basicInfo', {\n                url: '/info',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editProfile/editProfileBasicInfo/editProfileBasicInfo.html',\n                        controller: 'mainApp.pages.editProfile.EditProfileBasicInfoController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditProfileBasicInfoController\n * @description - Edit User Basic info Profile Page Controller\n */\n\nmodule app.pages.editProfileBasicInfo {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditProfileBasicInfoController {\n        form: IEditProfileBasicInfoForm;\n        validate: IEditProfileBasicInfoValidate;\n        activate: () => void;\n        goToEditMedia: () => void;\n        goToEditLocation: () => void;\n    }\n\n    interface IGenderForm {\n        gender: app.core.interfaces.IDataFromJsonI18n;\n    }\n\n    interface IBirthdateForm {\n        day: app.core.interfaces.ISelectListElement;\n        month: app.core.interfaces.IDataFromJsonI18n;\n        year: app.core.interfaces.ISelectListElement;\n    }\n\n    interface IEditProfileBasicInfoForm {\n        firstName: string;\n        lastName: string;\n        phoneNumber: string;\n        gender: string;\n        birthDate: string;\n        countryBirth: string;\n        cityBirth: string;\n        about: string;\n        native: Array<app.core.interfaces.IKeyValue>;\n        learn: Array<app.core.interfaces.IKeyValue>;\n        teach: Array<app.core.interfaces.IKeyValue>;\n    }\n\n    interface IEditProfileBasicInfoValidate {\n        firstName: app.core.util.functionsUtil.IValid;\n        lastName: app.core.util.functionsUtil.IValid;\n        phoneNumber: app.core.util.functionsUtil.IValid;\n        gender: app.core.util.functionsUtil.IValid;\n        birthDate: app.core.interfaces.IBirthdateValidate;\n        countryBirth: app.core.util.functionsUtil.IValid;\n        cityBirth: app.core.util.functionsUtil.IValid;\n        about: app.core.util.functionsUtil.IValid;\n        native: app.core.util.functionsUtil.IValid;\n        learn: app.core.util.functionsUtil.IValid;\n        teach: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditProfileBasicInfoController implements IEditProfileBasicInfoController {\n\n        static controllerId = 'mainApp.pages.editProfile.EditProfileBasicInfoController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditProfileBasicInfoForm;\n        validate: IEditProfileBasicInfoValidate;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        listMonths: Array<app.core.interfaces.IDataFromJsonI18n>;\n        listGenders: Array<app.core.interfaces.IDataFromJsonI18n>;\n        listDays: Array<app.core.interfaces.ISelectListElement>;\n        listYears: Array<app.core.interfaces.ISelectListElement>;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        dateObject: IBirthdateForm;\n        genderObject: IGenderForm;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.models.user.UserService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$timeout',\n            '$uibModal',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private userService: app.models.user.IUserService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $timeout: angular.ITimeoutService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            // Gender Select List Structure\n            this.genderObject = {gender: {code:'', value:''}};\n\n            // Birthdate Select List Structure\n            this.dateObject = {day:{value:''}, month: {code:'', value:''}, year: {value:''}};\n\n            //Init form\n            this.form = {\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n                gender: '',\n                birthDate: null,\n                countryBirth: '',\n                cityBirth: '',\n                about: '',\n                native: [],\n                learn: [],\n                teach: []\n            };\n\n            // Build Months, Days and Years select lists\n            this.listMonths = this.getDataFromJson.getMonthi18n();\n            //TODO: podemos optimizar esto ya que en listMonth ya traigo el json,\n            // no es necesario volverlo a traer aqui.\n            this.listGenders = this.getDataFromJson.getSexi18n();\n            this.listDays = this.functionsUtil.buildNumberSelectList(1, 31);\n            this.listYears = this.functionsUtil.buildNumberSelectList(1916, 2017);\n            // Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Build validate object fields\n            this.validate = {\n                firstName: {valid: true, message: ''},\n                lastName: {valid: true, message: ''},\n                phoneNumber: {valid: true, message: ''},\n                gender: {valid: true, message: ''},\n                birthDate: {\n                    day:{valid: true, message: ''},\n                    month: {valid: true, message: ''},\n                    year: {valid: true, message: ''},\n                    valid: true,\n                    message: ''\n                },\n                countryBirth: {valid: true, message: ''},\n                cityBirth: {valid: true, message: ''},\n                about: {valid: true, message: ''},\n                native: {valid: true, message: ''},\n                teach: {valid: true, message: ''},\n                learn: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditProfileBasicInfo controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE USER INFO\n            this._fillForm(this.$rootScope.profileData);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Go to edit media page\n        * @description this method is launched when user press 'Edit Photo' menu\n        * option\n        */\n        goToEditMedia(): void {\n            this.$state.go('page.editProfile.media');\n        }\n\n\n        /*\n        * Go to edit location page\n        * @description this method is launched when user press 'Edit Location' menu\n        * option\n        */\n        goToEditLocation(): void {\n            this.$state.go('page.editProfile.location');\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n            this.form.firstName = data.FirstName;\n            this.form.lastName = data.LastName;\n            this.form.phoneNumber = data.PhoneNumber;\n            //Charge Sex on select List\n            this.genderObject.gender.code = data.Gender;\n\n            //Build birthdate (Charge on select List)\n            let date = this.functionsUtil.splitDate(data.BirthDate);\n            this.dateObject.day.value = date.day ? parseInt(date.day) : '';\n            this.dateObject.month.code = date.month !== 'Invalid date' ? date.month : '';\n            this.dateObject.year.value = date.year ? parseInt(date.year) : '';\n\n            //Charge Country on select List\n            this.countryObject.code = data.BornCountry;\n            this.form.cityBirth = data.BornCity;\n            this.form.about = data.About;\n\n            // Form is already filled (Just take native because it's required has a native language)\n            if(this.form.native.length === 0) {\n\n                let languageArray = this.getDataFromJson.getLanguagei18n();\n                for (let i = 0; i < languageArray.length; i++) {\n\n                    if(data.Languages.Native) {\n                        // Build user native language list\n                        for (let j = 0; j < data.Languages.Native.length; j++) {\n\n                            if(data.Languages.Native[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.native == null) {\n                                    this.form.native = [];\n                                    this.form.native.push(obj);\n                                } else {\n                                    this.form.native.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Learn) {\n                        // Build user learn language list\n                        for (let j = 0; j < data.Languages.Learn.length; j++) {\n\n                            if(data.Languages.Learn[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.learn == null) {\n                                    this.form.learn = [];\n                                    this.form.learn.push(obj);\n                                } else {\n                                    this.form.learn.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                    if(data.Languages.Teach) {\n                        // Build user teach language list\n                        for (let j = 0; j < data.Languages.Teach.length; j++) {\n\n                            if(data.Languages.Teach[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.teach == null) {\n                                    this.form.teach = [];\n                                    this.form.teach.push(obj);\n                                } else {\n                                    this.form.teach.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                }\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateBasicInfoForm\n        * @description - Validate each field on basic info's form\n        * @use - this._validateBasicInfoForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateBasicInfoForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate First Name field\n            let first_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.firstName = this.functionsUtil.validator(this.form.firstName, first_rules);\n            if(!this.validate.firstName.valid) {\n                formValid = this.validate.firstName.valid;\n            }\n\n            //Validate Last Name field\n            let last_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.lastName = this.functionsUtil.validator(this.form.lastName, last_rules);\n            if(!this.validate.lastName.valid) {\n                formValid = this.validate.lastName.valid;\n            }\n\n            //Validate Phone Number field\n            let phoneNumber_rules = [NULL_ENUM, EMPTY_ENUM, NUMBER_ENUM];\n            let onlyNum: any = this.form.phoneNumber.replace(/\\D+/g, \"\");\n            onlyNum = parseInt(onlyNum) || '';\n            this.validate.phoneNumber = this.functionsUtil.validator(onlyNum, phoneNumber_rules);\n            if(!this.validate.phoneNumber.valid) {\n                formValid = this.validate.phoneNumber.valid;\n            }\n\n            //Validate Sex field\n            let gender_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.gender = this.functionsUtil.validator(this.genderObject.gender.code, gender_rules);\n            if(!this.validate.gender.valid) {\n                formValid = this.validate.gender.valid;\n            }\n\n            //Validate 'Day' Birth Date fields\n            let day_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.day = this.functionsUtil.validator(this.dateObject.day.value, day_birthdate_rules);\n            if(!this.validate.birthDate.day.valid) {\n                formValid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Month' Birth Date fields\n            let month_birthdate_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.birthDate.month = this.functionsUtil.validator(this.dateObject.month.code, month_birthdate_rules);\n            if(!this.validate.birthDate.month.valid) {\n                formValid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Year' Birth Date fields\n            let year_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.year = this.functionsUtil.validator(this.dateObject.year.value, year_birthdate_rules);\n            if(!this.validate.birthDate.year.valid) {\n                formValid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Clean error message if birthdate is valid\n            if(this.validate.birthDate.day.valid &&\n               this.validate.birthDate.month.valid &&\n               this.validate.birthDate.year.valid) {\n                   this.validate.birthDate.valid = true;\n                   this.validate.birthDate.message = '';\n            }\n\n            //Validate Country Birth field\n            let country_birth_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.countryBirth = this.functionsUtil.validator(this.countryObject.code, country_birth_rules);\n            if(!this.validate.countryBirth.valid) {\n                formValid = this.validate.countryBirth.valid;\n            }\n\n            //Validate City Birth field\n            let city_birth_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.cityBirth = this.functionsUtil.validator(this.form.cityBirth, city_birth_rules);\n            if(!this.validate.cityBirth.valid) {\n                formValid = this.validate.cityBirth.valid;\n            }\n\n            //Validate About me field\n            let about_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.about = this.functionsUtil.validator(this.form.about, about_rules);\n            if(!this.validate.about.valid) {\n                formValid = this.validate.about.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _validateLanguagesForm\n        * @description - Validate each field on languages' form\n        * @use - this._validateLanguagesForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateLanguagesForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Native Languages List\n            let native_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.native = this.functionsUtil.validator(this.form.native, native_rules);\n            if(!this.validate.native.valid) {\n                formValid = this.validate.native.valid;\n            }\n\n            //Validate Learn Languages List\n            let learn_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.learn = this.functionsUtil.validator(this.form.learn, learn_rules);\n            if(!this.validate.learn.valid) {\n                formValid = this.validate.learn.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _addNewLanguages\n        * @description - open Modal in order to add a New Languages on Box\n        * @use - this._addNewLanguages();\n        * @function\n        * @return {void}\n        */\n        private _addNewLanguages(type, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalLanguagesTmpl,\n                controller: 'mainApp.components.modal.ModalLanguageController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            type: type,\n                            list: self.form[type]\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the languages options list\n            modalInstance.result.then(function (newLanguagesList) {\n                self.form[type] = newLanguagesList;\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _removeLanguage\n        * @description - remove a language element of options array\n        * @use - this._removeLanguage(3);\n        * @function\n        * @param {string} key - languages deselected by user\n        * @param {string} type - type of languages list (native, learn, teach)\n        * @return {void}\n        */\n        private _removeLanguage(key, type): void {\n             let newArray = this.form[type].filter(function(el) {\n                 return el.key !== key;\n             });\n\n             this.form[type] = newArray;\n        }\n\n\n\n        /**\n        * _setBasicInfoFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._setBasicInfoFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setBasicInfoFromForm(): void {\n            //VARIABLES\n            let dateFormatted = this.functionsUtil.joinDate(\n                                    this.dateObject.day.value,\n                                    this.dateObject.month.code,\n                                    this.dateObject.year.value);\n            let genderCode = this.genderObject.gender.code;\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryBirth = countryCode;\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.FirstName = this.form.firstName;\n            this.$rootScope.profileData.LastName = this.form.lastName;\n            this.$rootScope.profileData.PhoneNumber = this.form.phoneNumber;\n            this.$rootScope.profileData.Gender = genderCode;\n            this.$rootScope.profileData.BirthDate = dateFormatted;\n            this.$rootScope.profileData.BornCountry = this.form.countryBirth;\n            this.$rootScope.profileData.BornCity = this.form.cityBirth;\n            this.$rootScope.profileData.About = this.form.about;\n        }\n\n\n\n        /**\n        * _setLanguageFromForm\n        * @description - get languages data from form's input\n        * in order to put it on $parent.profileData\n        * @use - this._setLanguageFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setLanguageFromForm(): void {\n\n            if(this.form.native) {\n                let native = [];\n                for (let i = 0; i < this.form.native.length; i++) {\n                    native.push(this.form.native[i].key);\n                }\n                this.$rootScope.profileData.Languages.Native = native;\n            }\n\n            if(this.form.learn) {\n                let learn = [];\n                for (let i = 0; i < this.form.learn.length; i++) {\n                    learn.push(this.form.learn[i].key);\n                }\n                this.$rootScope.profileData.Languages.Learn = learn;\n            }\n\n            if(this.form.teach) {\n                let teach = [];\n                for (let i = 0; i < this.form.teach.length; i++) {\n                    teach.push(this.form.teach[i].key);\n                }\n                this.$rootScope.profileData.Languages.Teach = teach;\n            }\n        }\n\n\n        /**\n        * saveBasicInfoSection\n        * @description - Update profile's basic data calling to save method\n        * @function\n        * @return void\n        */\n        saveBasicInfoSection(): void {\n            //VARIABLES\n            let self = this;\n            //Validate data form\n            let formValid = this._validateBasicInfoForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setBasicInfoFromForm();\n                this.$scope.$emit('Save Profile Data');\n            }\n        }\n\n\n\n        /**\n        * saveLanguagesSection\n        * @description - Update profile's languages data calling to save method\n        * @function\n        * @return void\n        */\n        saveLanguagesSection(): void {\n            //VARIABLES\n            let self = this;\n\n            //Validate data form\n            let formValid = this._validateLanguagesForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setLanguageFromForm();\n                this.$scope.$emit('Save Profile Data');\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes User Basic Info Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - EditUserController\n            * @description - Parent send user profile data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditProfileController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editProfile')\n        .controller(EditProfileBasicInfoController.controllerId, EditProfileBasicInfoController);\n\n}\n","/**\n* config()\n* @description - user edit profile location page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editProfile')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editProfile.location', {\n                url: '/location',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editProfile/editProfileLocation/editProfileLocation.html',\n                        controller: 'mainApp.pages.editProfile.EditProfileLocationController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditProfileLocationController\n * @description - Edit User Location Profile Page Controller\n */\n\nmodule app.pages.editProfileLocation {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditProfileLocationController {\n        form: IEditProfileLocationForm;\n        validate: IEditProfileLocationValidate;\n        activate: () => void;\n        goToEditMedia: () => void;\n        goToEditLocation: () => void;\n    }\n\n    export interface IEditProfileLocationForm {\n        countryLocation: string;\n        addressLocation: string;\n        cityLocation: string;\n        stateLocation: string;\n        zipCodeLocation: string;\n        positionLocation: app.models.user.Position;\n    }\n\n    interface IEditProfileLocationValidate {\n        countryLocation: app.core.util.functionsUtil.IValid;\n        addressLocation: app.core.util.functionsUtil.IValid;\n        cityLocation: app.core.util.functionsUtil.IValid;\n        stateLocation: app.core.util.functionsUtil.IValid;\n        zipCodeLocation: app.core.util.functionsUtil.IValid;\n        positionLocation: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditProfileLocationController implements IEditProfileLocationController {\n\n        static controllerId = 'mainApp.pages.editProfile.EditProfileLocationController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditProfileLocationForm;\n        validate: IEditProfileLocationValidate;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        geocoder: google.maps.Geocoder;\n        mapConfig: components.map.IMapConfig;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.models.user.UserService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$filter',\n            '$timeout',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private userService: app.models.user.IUserService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $timeout: angular.ITimeoutService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            //Init form\n            this.form = {\n                countryLocation: '',\n                cityLocation: '',\n                stateLocation: '',\n                addressLocation: '',\n                zipCodeLocation: '',\n                positionLocation: new app.models.user.Position()\n            };\n\n            // Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Init Map\n            this.mapConfig = this.functionsUtil.buildMapConfig(\n                null, 'drag-maker-map', null, null\n            );\n\n            // Build validate object fields\n            this.validate = {\n                countryLocation: {valid: true, message: ''},\n                cityLocation: {valid: true, message: ''},\n                stateLocation: {valid: true, message: ''},\n                addressLocation: {valid: true, message: ''},\n                zipCodeLocation: {valid: true, message: ''},\n                positionLocation: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditProfileLocation controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE USER INFO\n            this._fillForm(this.$rootScope.profileData);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Go to edit media page\n        * @description this method is launched when user press 'Edit Photo' menu\n        * option\n        */\n        goToEditMedia(): void {\n            this.$state.go('page.editProfile.media');\n        }\n\n\n\n        /*\n        * Go to edit profile page\n        * @description this method is launched when user press 'Edit Location' menu\n        * option\n        */\n        goToEditProfile(): void {\n            this.$state.go('page.editProfile.basicInfo');\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with user location data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n            this.form.addressLocation = data.Location.Address;\n            this.form.cityLocation = data.Location.City;\n            this.form.stateLocation = data.Location.State;\n            this.form.zipCodeLocation = data.Location.ZipCode;\n            //Charge Country on select List\n            this.countryObject.code = data.Location.Country;\n            //Current Map Position\n            this.form.positionLocation = new app.models.user.Position(data.Location.Position);\n\n            this.mapConfig = this.functionsUtil.buildMapConfig(\n                [\n                    {\n                        id: this.form.positionLocation.Id,\n                        location: {\n                            position: {\n                                lat: parseFloat(this.form.positionLocation.Lat),\n                                lng: parseFloat(this.form.positionLocation.Lng)\n                            }\n                        }\n                    }\n                ],\n                'drag-maker-map',\n                {lat: parseFloat(this.form.positionLocation.Lat), lng: parseFloat(this.form.positionLocation.Lng)},\n                null\n            );\n\n            /*\n            * Send event to child (MapController) in order to It draws\n            * each Marker on the Map\n            */\n            this.$scope.$broadcast('BuildMarkers', this.mapConfig);\n        }\n\n\n\n        /**\n        * _validateLocationForm\n        * @description - Validate each field on location's form\n        * @use - this._validateLocationForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateLocationForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Country field\n            let country_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.countryLocation = this.functionsUtil.validator(this.countryObject.code, country_rules);\n            if(!this.validate.countryLocation.valid) {\n                formValid = this.validate.countryLocation.valid;\n            }\n\n            //Validate City field\n            let city_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.cityLocation = this.functionsUtil.validator(this.form.cityLocation, city_rules);\n            if(!this.validate.cityLocation.valid) {\n                formValid = this.validate.cityLocation.valid;\n            }\n\n            //Validate State field\n            let state_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.stateLocation = this.functionsUtil.validator(this.form.stateLocation, state_rules);\n            if(!this.validate.stateLocation.valid) {\n                formValid = this.validate.stateLocation.valid;\n            }\n\n            //Validate Address field\n            let address_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.addressLocation = this.functionsUtil.validator(this.form.addressLocation, address_rules);\n            if(!this.validate.addressLocation.valid) {\n                formValid = this.validate.addressLocation.valid;\n            }\n\n            //Validate Position on Map\n            let position_rules = [NULL_ENUM, EMPTY_ENUM];\n            let latValidate= this.functionsUtil.validator(this.form.positionLocation.Lat, position_rules);\n            let lngValidate = this.functionsUtil.validator(this.form.positionLocation.Lng, position_rules);\n            if(!latValidate.valid || !lngValidate.valid) {\n                if(!latValidate.valid) {\n                    this.validate.positionLocation = latValidate;\n                    formValid = this.validate.positionLocation.valid;\n                } else if(!lngValidate.valid) {\n                    this.validate.positionLocation = lngValidate;\n                    formValid = this.validate.positionLocation.valid;\n                }\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeMapPosition\n        * @description -\n        * @use - this.changeMapPosition();\n        * @function\n        * @param {string} - change map position\n        * @return {void}\n        */\n        changeMapPosition(): void {\n            //VARIABLES\n            let self = this;\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryLocation = countryCode;\n\n            let location = {\n                country: this.form.countryLocation,\n                city: this.form.cityLocation,\n                address: this.form.addressLocation\n            };\n            /************************************/\n\n            this.$timeout(function(){\n                self.$scope.$broadcast('CodeAddress', location);\n            });\n\n        }\n\n\n\n        /**\n        * _setLocationFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._setLocationFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setLocationFromForm(): void {\n            //VARIABLES\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.countryLocation = countryCode;\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.Location.Country = this.form.countryLocation;\n            this.$rootScope.profileData.Location.Address = this.form.addressLocation;\n            this.$rootScope.profileData.Location.City = this.form.cityLocation;\n            this.$rootScope.profileData.Location.State = this.form.stateLocation;\n            this.$rootScope.profileData.Location.ZipCode = this.form.zipCodeLocation;\n            this.$rootScope.profileData.Location.Position = this.form.positionLocation;\n        }\n\n\n\n        /**\n        * saveLocationSection\n        * @description - Update profile's location data calling to save method\n        * @function\n        * @return void\n        */\n        saveLocationSection(): void {\n            //VARIABLES\n            let self = this;\n            //Validate data form\n            let formValid = this._validateLocationForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setLocationFromForm();\n                this.$scope.$emit('Save Profile Data');\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes User Basic Info Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n\n            /**\n            * Return Position\n            * @child - MapController\n            * @description - Parent (UserEditLocationPageController) receive\n                             Child's event (MapController) with new position on\n                             map (lng, lat)\n            * @event\n            */\n            this.$scope.$on('Position', function(event, args) {\n                self.form.positionLocation.Lng = args.lng;\n                self.form.positionLocation.Lat = args.lat;\n            });\n\n\n            /**\n            * Fill Form event\n            * @parent - EditUserController\n            * @description - Parent send user profile data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill User Profile Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditProfileController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editProfile')\n        .controller(EditProfileLocationController.controllerId, EditProfileLocationController);\n\n}\n","/**\n* config()\n* @description - user edit profile media page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editProfile')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editProfile.media', {\n                url: '/media',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editProfile/editProfileMedia/editProfileMedia.html',\n                        controller: 'mainApp.pages.editProfile.EditProfileMediaController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditProfileMediaController\n * @description - Edit User Basic info Profile Page Controller\n */\n\nmodule app.pages.editProfileMedia {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IEditProfileMediaController {\n        form: IEditProfileMediaForm;\n        validate: IEditProfileMediaValidate;\n        activate: () => void;\n        goToEditProfile: () => void;\n        goToEditLocation: () => void;\n    }\n\n    interface IEditProfileMediaForm {\n        avatar: File;\n        croppedDataUrl: string;\n        thumbnail: string;\n    }\n\n    interface IEditProfileMediaValidate {\n        avatar: app.core.util.functionsUtil.IValid;\n        thumbnail: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditProfileMediaController implements IEditProfileMediaController {\n\n        static controllerId = 'mainApp.pages.editProfile.EditProfileMediaController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditProfileMediaForm;\n        validate: IEditProfileMediaValidate;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.models.user.UserService',\n            'mainApp.core.s3Upload.S3UploadService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'Upload',\n            '$state',\n            '$filter',\n            '$timeout',\n            '$scope',\n            '$rootScope'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private userService: app.models.user.IUserService,\n            private S3UploadService: app.core.s3Upload.IS3UploadService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private Upload: app.core.interfaces.IUpload,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $timeout: angular.ITimeoutService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            //Init form\n            this.form = {\n                avatar: null,\n                croppedDataUrl: '',\n                thumbnail: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                avatar: {valid: true, message: ''},\n                thumbnail: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditProfileMedia controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Go to edit profile page\n        * @description this method is launched when user press 'Edit Profile'\n        * menu option\n        */\n        goToEditProfile(): void {\n            // Go to next page on calls stack\n            this.$state.go('page.editProfile.basicInfo');\n        }\n\n\n        /*\n        * Go to edit location page\n        * @description this method is launched when user press 'Edit Location' menu\n        * option\n        */\n        goToEditLocation(): void {\n            this.$state.go('page.editProfile.location');\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const DEFINED_ENUM = app.core.util.functionsUtil.Validation.Defined;\n            const PHOTO_MESSAGE = this.$filter('translate')('%create.teacher.photo.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Reset globalValidate\n            this.validate.globalValidate.valid = true;\n            this.validate.globalValidate.message = '';\n\n            //Validate photo\n            let avatar_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.avatar = this.functionsUtil.validator(this.form.avatar, avatar_rules);\n\n            //Validate thumbnail\n            let thumbnail_rules = [NULL_ENUM, EMPTY_ENUM, DEFINED_ENUM];\n            this.validate.thumbnail = this.functionsUtil.validator(this.form.thumbnail, thumbnail_rules);\n\n            //If avatar image is not valid\n            if(!this.validate.avatar.valid) {\n                //If thumbnail image is not valid\n                if(!this.validate.thumbnail.valid) {\n                    this.validate.globalValidate.valid = false;\n                    this.validate.globalValidate.message = PHOTO_MESSAGE;\n                    formValid = this.validate.globalValidate.valid;\n                } else {\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n                }\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _resizeImage\n        * @description - resize image base on defaults parameters\n        * @use - this._resizeImage();\n        * @function\n        * @return {void}\n        */\n        private _resizeImage(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            //New file name\n            let newName = app.core.util.functionsUtil.FunctionsUtilService.generateGuid() + '.jpeg';\n            // Image Options\n            let options= {\n                width: 250,\n                height: 250,\n                quality: 1.0,\n                type: 'image/jpeg',\n                pattern:'.jpg',\n                restoreExif: false\n            };\n            // Build file base on cropped data image\n            let file = this.Upload.dataUrltoBlob(this.form.croppedDataUrl, newName);\n            /****************************************************/\n\n            // Resize image (change extension to jpeg, resize and quality)\n            return this.Upload.resize(file, options).then(function(resizedFile) {\n\n                // Upload resized file to Amazon S3\n                return self._uploadImage(resizedFile).then(function(result) {\n                    return result;\n                });\n\n            });\n\n        }\n\n\n\n        /**\n        * _uploadImage\n        * @description - upload resize image to Amazon S3\n        * @use - this._uploadImage(resizedFile);\n        * @function\n        * @param {File} resizedFile file object\n        * @return {void}\n        */\n        private _uploadImage(resizedFile): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n\n            return this.S3UploadService.upload(resizedFile).then(function (result) {\n\n                return result;\n\n            }, function (error) {\n\n                // Mark the error\n                DEBUG && console.error('error', error);\n                return error;\n\n            });\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(avatar): void {\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.profileData.Avatar = avatar;\n\n        }\n\n\n\n        /**\n        * saveImageSection\n        * @description - Update profile's avatar photo calling to save method\n        * @function\n        * @return void\n        */\n        saveImageSection(): void {\n            //VARIABLES\n            let self = this;\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n\n                this._resizeImage().then(\n                    function(result) {\n\n                        if(result.Location) {\n                            self._setDataModelFromForm(result.Location);\n                            self.$scope.$emit('Save Profile Data');\n                        } else {\n                            self.error = true;\n                        }\n\n                    }\n                );\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes User Basic Info Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n\n            /**\n            * Saved event\n            * @parent - EditProfileController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.form.avatar = self.saved ? null : self.form.avatar;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editProfile')\n        .controller(EditProfileMediaController.controllerId, EditProfileMediaController);\n\n}\n","/**\n* config()\n* @description - user edit agenda page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.userEditAgendaPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.userEditAgendaPage', {\n                url: '/users/edit/:id/agenda',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/userEditAgendaPage/userEditAgendaPage.html',\n                        controller: 'mainApp.pages.userEditAgendaPage.UserEditAgendaPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page'\n            });\n    }\n})();\n","/**\n * userEditAgendaPageController\n * @description - User Edit Agenda Page Controller\n */\n\nmodule app.pages.userEditAgendaPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IUserEditAgendaPageController {\n        form: IUserEditAgendaForm;\n        error: IUserEditAgendaError;\n        activate: () => void;\n        goToEditProfile: () => void;\n        goToEditMedia: () => void;\n    }\n\n    export interface IUserEditAgendaScope extends angular.IScope {\n        calendarConfig: any;\n        eventSources: any;\n        events: any;\n        changeView: any;\n    }\n\n    export interface IUserEditAgendaForm {\n        username: string;\n        email: string;\n    }\n\n    export interface IUserEditAgendaError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserEditAgendaPageController implements IUserEditAgendaPageController {\n\n        static controllerId = 'mainApp.pages.userEditAgendaPage.UserEditAgendaPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IUserEditAgendaForm;\n        error: IUserEditAgendaError;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            '$state',\n            '$filter',\n            '$scope',\n            'uiCalendarConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: IUserEditAgendaScope,\n            private uiCalendarConfig) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            let self = this;\n\n            //Init form\n            this.form = {\n                username: '',\n                email: ''\n            };\n\n            this.error = {\n                message: ''\n            };\n\n            //Calendar Config\n            this.$scope.calendarConfig = {\n                calendar: {\n                    editable: true,\n                    header: {\n                     left: 'prev',\n                     center: 'title',\n                     right: 'month, agendaDay, next'\n                    },\n                    slotDuration: '01:00:00',\n                    slotLabelFormat: 'h(:mm) a',\n                    navLinks: true,\n                    allDaySlot: false,\n                    events: [\r\n     \t\t\t\t    {\r\n                            title: 'Rosa',\r\n                            start: '2016-10-12T17:00:00',\r\n                            end: '2016-10-12T18:00:00',\r\n                            editable: false\r\n                        },\r\n                        {\r\n                            title: 'Carlos',\r\n                            start: '2016-10-20T20:00:00',\r\n                            end: '2016-10-20T21:00:00',\r\n                            editable: false\r\n                        },\r\n                        {\r\n                            title: 'Michaelson',\r\n                            start: '2016-10-23T07:00:00',\r\n                            end: '2016-10-23T08:00:00',\r\n                            editable: false\r\n                        }\r\n                    ],\r\n                    timeFormat: 'h:mm a',\r\n                    buttonText: {\r\n                        month: 'view calendar'\r\n                    }\r\n                }\n            };\n\n            /* Change View */\n            this.$scope.changeView = function(view,calendar) {\n              self.uiCalendarConfig.calendars['userAgenda'].fullCalendar('changeView','agendaDay');\n            };\n\n\n            //Agenda sources\n            this.$scope.eventSources = [];\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('userEditAgendaPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * Go to edit profile page\n        * @description this method is launched when user press 'Edit Profile'\n        * menu option\n        */\n        goToEditProfile(): void {\n            this.$state.go('page.userEditProfilePage');\n        }\n\n\n        /*\n        * Go to edit media page\n        * @description this method is launched when user press 'Edit Media'\n        * menu option\n        */\n        goToEditMedia(): void {\n            this.$state.go('page.userEditMediaPage');\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.userEditAgendaPage')\n        .controller(UserEditAgendaPageController.controllerId, UserEditAgendaPageController);\n\n}\n","/**\n* config()\n* @description - edit Teacher page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editTeacher', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editTeacher', {\n                url: '/teachers/edit',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/editTeacher/editTeacher.html',\n                        controller: 'mainApp.pages.editTeacher.EditTeacherController',\n                        controllerAs: 'vm',\n                        resolve: {\n                            waitForAuth: ['mainApp.auth.AuthService', function(AuthService) {\n                                return AuthService.autoRefreshToken();\n                            }]\n                        }\n                    }\n                },\n                cache: false,\n                data: {\n                    requireLogin: true\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = true;\n                    $rootScope.activeFooter = true;\n                    $rootScope.activeMessageBar = false;\n                }]\n            });\n    }\n})();\n","/**\n * EditTeacherController\n * @description - Create Teacher Page Controller\n */\n\nmodule app.pages.editTeacher {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditTeacherController {\n        activate: () => void;\n    }\n\n    interface ICreateTeacherError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditTeacherController implements IEditTeacherController {\n\n        static controllerId = 'mainApp.pages.editTeacher.EditTeacherController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        teacherData: app.models.teacher.Teacher;\n        showHeaderFixed: boolean;\n        progressWidth: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.models.user.UserService',\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.core.util.messageUtilService',\n            'dataConfig',\n            '$state',\n            '$stateParams',\n            '$filter',\n            '$scope',\n            '$window',\n            '$rootScope',\n            '$uibModal',\n            'waitForAuth'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private userService: app.models.user.IUserService,\n            private teacherService: app.models.teacher.ITeacherService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private dataConfig: IDataConfig,\n            private $state: ng.ui.IStateService,\n            private $stateParams: app.core.interfaces.IStateParamsData,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $window,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            waitForAuth) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n            let loggedUserId = this.$rootScope.userData.id;\n\n            //Get current state\n            let currentState = this.$state.current.name;\n\n            //Init teacher instance\n            this.$rootScope.teacherData = new app.models.teacher.Teacher();\n            //Connect with user logged\n            this.$rootScope.teacherData.Profile.UserId = loggedUserId;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Edit Teacher Page';\n            //VARIABLES\n            let self = this;\n\n            //LOG\n            console.log('editTeacher controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //Charge user profile data\n            this.fillFormWithProfileData();\n\n            //Charge teacher data if teacher entity exist on DB\n            this.fillFormWithTeacherData();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * fillFormWithProfileData\n        * @description - get user profile data from DB, and fill each field on form.\n        * @function\n        * @return void\n        */\n        //TODO: Analizar si es necesario esta funcion aqui, ya que estoy editando\n        // la info del profesor no del profile (solo uso aqui el idioma que enseño)\n        // si es asi, colocar una Nota para que no se me olvide por que deje esta funcion\n        fillFormWithProfileData(): void {\n            // VARIABLES\n            let self = this;\n            let userId = this.$rootScope.userData.id;\n\n            if(userId) {\n                // GET USER PROFILE DATA\n                this.userService.getUserProfileById(userId)\n                .then(\n                    function(response) {\n\n                        if(response.userId) {\n                            self.$rootScope.profileData = new app.models.user.Profile(response);\n                            self.$scope.$broadcast('Fill User Profile Form', self.$rootScope.profileData);\n                        }\n\n                    }\n                );\n            }\n        }\n\n\n        /**\n        * fillFormWithTeacherData\n        * @description - get teacher data from DB, and fill each field on form.\n        * @function\n        * @return void\n        */\n        fillFormWithTeacherData(): void {\n            // VARIABLES\n            let self = this;\n            let userId = this.$rootScope.userData.id;\n\n            //Get teacher info by user logged Id\n            this.teacherService.getTeacherByProfileId(userId).then(\n\n                function(response) {\n\n                    if(response.id) {\n\n                        self.$rootScope.teacherData = new app.models.teacher.Teacher(response);\n                        self.$scope.$broadcast('Fill Form', self.$rootScope.teacherData);\n\n                    }\n\n                }\n\n            );\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Create Teacher Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Save User Profile Data event\n            * @description - Parent (EditTeacherController) receive Child's\n                             event in order to save user profile data on BD\n            * @event\n            */\n            this.$scope.$on('Save Profile Data', function(event, args){\n                //CONSTANTS\n                const SUCCESS_MESSAGE = self.$filter('translate')('%notification.success.text');\n                //VARIABLES\n                let userId = self.$rootScope.profileData.UserId;\n                /**************************************************************/\n\n                if(userId) {\n                    self.userService.updateUserProfile(self.$rootScope.profileData)\n                    .then(\n                        function(response) {\n                            if(response.userId) {\n                                //Show message\n                                //self.messageUtil.success(SUCCESS_MESSAGE);\n\n                                //Fill Form\n                                self.$rootScope.profileData = new app.models.user.Profile(response);\n                                //TODO: Validar si esto es necesario ya que estoy guardando todo en $rootScope\n                                // ya deberia poder tener acceso en los hijos\n                                self.$scope.$broadcast('Fill User Profile Form', self.$rootScope.profileData);\n                                self.$scope.$broadcast('Saved');\n                            }\n                        },\n                        function(error) {\n                            self.messageUtil.error('');\n                            self.$scope.$broadcast('Fill User Profile Form', 'error');\n                        }\n                    );\n                }\n            });\n\n\n            /**\n            * Save Data event\n            * @description - Parent (EditTeacherController) receive Child's\n                             event in order to save teacher data on BD\n            * @event\n            */\n            this.$scope.$on('Save Data', function(event, args) {\n                //CONSTANTS\n                const SUCCESS_MESSAGE = self.$filter('translate')('%notification.success.text');\n                /******************************/\n\n                if(self.$rootScope.teacherData.Id) {\n                    // UPDATE EXISTING TEACHER\n                    self.teacherService.updateTeacher(self.$rootScope.teacherData)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                //Show message\n                                //self.messageUtil.success(SUCCESS_MESSAGE);\n                                //Fill Form\n                                self.$rootScope.teacherData = new app.models.teacher.Teacher(response);\n                                //TODO: Validar si esto es necesario ya que estoy guardando todo en $rootScope\n                                // ya deberia poder tener acceso en los hijos\n                                self.$scope.$broadcast('Fill Form', self.$rootScope.teacherData);\n                                self.$scope.$broadcast('Saved');\n                            }\n                        },\n                        function(error) {\n                            //Show error\n                            self.messageUtil.error('');\n                            self.$scope.$broadcast('Fill Form', 'error');\n                        }\n                    );\n                } else {\n                    //TODO: Validar cuando no haya un teacherData Id\n                    DEBUG && console.log('self.$rootScope.teacherData.Id doesn´t exist');\n                }\n\n            });\n\n        }\n\n    }\n\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editTeacher')\n        .controller(EditTeacherController.controllerId,\n                    EditTeacherController);\n\n}\n","/**\n* config()\n* @description - edit teacher education section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editTeacher')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editTeacher.education', {\n                url: '/education',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editTeacher/editTeacherEducation/editTeacherEducation.html',\n                        controller: 'mainApp.pages.editTeacher.EditTeacherEducationController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditTeacherEducationController\n * @description - Edit Teacher Education Section Controller (edit teacher)\n */\n\nmodule app.pages.editTeacher {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditTeacherEducationController {\n        form: IEditTeacherEducationForm;\n        validate: IEditTeacherEducationValidate;\n        activate: () => void;\n    }\n\n    export interface IEditTeacherEducationForm {\n        educations: Array<app.models.teacher.Education>;\n        certificates: Array<app.models.teacher.Certificate>;\n    }\n\n    interface IEditTeacherEducationValidate {\n        educations: app.core.util.functionsUtil.IValid;\n        certificates: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditTeacherEducationController implements IEditTeacherEducationController {\n\n        static controllerId = 'mainApp.pages.editTeacher.EditTeacherEducationController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditTeacherEducationForm;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        validate: IEditTeacherEducationValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$timeout',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.education.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.education.help_text.description.text');\n            /*********************************/\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            //Init form\n            this.form = {\n                educations: [],\n                certificates: []\n            };\n\n            // Build validate object fields\n            this.validate = {\n                educations: {valid: true, message: ''},\n                certificates: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditTeacherEducationController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * saveEducationSection\n        * @description - save teacher educations (update teacher data on DB)\n        * @function\n        * @return void\n        */\n        saveEducationSection(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this.$scope.$emit('Save Data');\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            this.form.educations = data.Educations;\n            this.form.certificates = data.Certificates;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const GLOBAL_MESSAGE = this.$filter('translate')('%create.teacher.education.validation.message.text');\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Educations list\n            let education_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.educations = this.functionsUtilService.validator(this.form.educations, education_rules);\n\n            //Validate Certificates list\n            let certificates_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.certificates = this.functionsUtilService.validator(this.form.certificates, certificates_rules);\n\n            //If educations is not valid\n            if(this.validate.educations.valid) {\n\n                this.validate.globalValidate.valid = true;\n                this.validate.globalValidate.message = '';\n\n            } else if(this.validate.certificates.valid) {\n\n                this.validate.globalValidate.valid = true;\n                this.validate.globalValidate.message = '';\n\n            } else {\n\n                this.validate.globalValidate.valid = false;\n                this.validate.globalValidate.message = GLOBAL_MESSAGE;\n                formValid = this.validate.globalValidate.valid;\n\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (type, since, educations)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const EDUCATIONS_TITLE = this.$filter('translate')('%create.teacher.education.help_text.educations.title.text');\n            const EDUCATIONS_DESCRIPTION = this.$filter('translate')('%create.teacher.education.help_text.educations.description.text');\n            const CERTIFICATES_TITLE = this.$filter('translate')('%create.teacher.education.help_text.certificates.title.text');\n            const CERTIFICATES_DESCRIPTION = this.$filter('translate')('%create.teacher.education.help_text.certificates.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'educations':\n                    this.helpText.title = EDUCATIONS_TITLE;\n                    this.helpText.description = EDUCATIONS_DESCRIPTION;\n                break;\n\n                case 'certificates':\n                    this.helpText.title = CERTIFICATES_TITLE;\n                    this.helpText.description = CERTIFICATES_DESCRIPTION;\n                break;\n            }\n        }\n\n\n\n        /**\n        * _addEditEducation\n        * @description - open Modal in order to add/edit a Teacher's Education on Box\n        * @use - this._addEditEducation();\n        * @function\n        * @return {void}\n        */\n        private _addEditEducation(index, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalEducationTmpl,\n                controller: 'mainApp.components.modal.ModalEducationController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            education: self.form.educations[index],\n                            teacherId: self.$rootScope.teacherData.Id\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the new education data\n            modalInstance.result.then(function (newEducation) {\n                if(newEducation) {\n                    self.form.educations.push(newEducation);\n                }\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _addEditCertificate\n        * @description - open Modal in order to add/edit a Teacher's Certificate on Box\n        * @use - this._addEditCertificate();\n        * @function\n        * @return {void}\n        */\n        private _addEditCertificate(index, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalCertificateTmpl,\n                controller: 'mainApp.components.modal.ModalCertificateController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            certificate: self.form.certificates[index],\n                            teacherId: self.$rootScope.teacherData.Id\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the new certificate data\n            modalInstance.result.then(function (newCertificate) {\n                if(newCertificate) {\n                    self.form.certificates.push(newCertificate);\n                }\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - EditTeacherController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditTeacherController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editTeacher')\n        .controller(EditTeacherEducationController.controllerId,\n                    EditTeacherEducationController);\n\n}\n","/**\n* config()\n* @description - edit teacher experience section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editTeacher')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editTeacher.experience', {\n                url: '/experience',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editTeacher/editTeacherExperience/editTeacherExperience.html',\n                        controller: 'mainApp.pages.editTeacher.EditTeacherExperienceController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditTeacherExperienceController\n * @description - Edit Teacher Experience Section Controller (edit teacher)\n */\n\nmodule app.pages.editTeacher {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditTeacherExperienceController {\n        form: IEditTeacherExperienceForm;\n        validate: IEditTeacherExperienceValidate;\n        activate: () => void;\n    }\n\n    export interface IEditTeacherExperienceForm {\n        type: string;\n        experiences: Array<app.models.teacher.Experience>;\n    }\n\n    interface IEditTeacherExperienceValidate {\n        type: app.core.util.functionsUtil.IValid;\n        teacherSince: app.core.util.functionsUtil.IValid;\n        experiences: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditTeacherExperienceController implements IEditTeacherExperienceController {\n\n        static controllerId = 'mainApp.pages.editTeacher.EditTeacherExperienceController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditTeacherExperienceForm;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        validate: IEditTeacherExperienceValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        listYears: Array<app.core.interfaces.ISelectListElement>;\n        yearObject: app.core.interfaces.ISelectListElement;\n        private _hobbyChecked: any;\n        private _professionalChecked: any;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$timeout',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.experience.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.description.text');\n            /*********************************/\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            //Init form\n            this.form = {\n                type: 'H',\n                experiences: []\n            };\n\n            // Current Year\n            let currentYear = parseInt(this.dataConfig.currentYear);\n\n            // Build Years select lists\n            this.listYears = this.functionsUtilService.buildNumberSelectList(1957, currentYear);\n\n            //\n            this.yearObject = {value: ''};\n\n            // Init type of teacher checks\n            this._hobbyChecked = {type:'H', checked: true};\n            this._professionalChecked = {type:'P', checked: false};\n\n            // Build validate object fields\n            this.validate = {\n                type: {valid: true, message: ''},\n                teacherSince: {valid: true, message: ''},\n                experiences: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditTeacherExperienceController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * saveExperienceSection\n        * @description - save teacher experiences (update teacher data on DB)\n        * @function\n        * @return void\n        */\n        saveExperienceSection(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Data');\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * _checkType\n        * @description - select a type of teacher\n        * @use - this._checkType();\n        * @function\n        * @param {key} option - type of teacher option selected by user\n        * @return {void}\n        */\n        private _checkType(key): void {\n            let type = key.type;\n            if(type === 'H') {\n                this._professionalChecked.checked = false;\n                this._hobbyChecked.checked = true;\n                this.form.type = this._hobbyChecked.type;\n            } else {\n                this._professionalChecked.checked = true;\n                this._hobbyChecked.checked = false;\n                this.form.type = this._professionalChecked.type;\n            }\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            this.form.type = data.Type || 'H';\n            if(this.form.type === 'H') {\n                this._professionalChecked.checked = false;\n                this._hobbyChecked.checked = true;\n            } else {\n                this._professionalChecked.checked = true;\n                this._hobbyChecked.checked = false;\n            }\n\n            this.yearObject.value = data.TeacherSince;\n\n            this.form.experiences = data.Experiences;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate 'Year' Teacher Since fields\n            let teacher_since_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.teacherSince = this.functionsUtilService.validator(this.yearObject.value, teacher_since_rules);\n            if(!this.validate.teacherSince.valid) {\n                formValid = this.validate.teacherSince.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (type, since, experiences)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const TYPE_HOBBY_TITLE = this.$filter('translate')('%global.teacher.type.hobby.text');\n            const TYPE_HOBBY_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.type.hobby.description.text');\n            const TYPE_PROFESSIONAL_TITLE = this.$filter('translate')('%global.teacher.type.professional.text');\n            const TYPE_PROFESSIONAL_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.type.professional.description.text');\n            const SINCE_TITLE = this.$filter('translate')('%create.teacher.experience.help_text.teacher_since.title.text');\n            const SINCE_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.teacher_since.description.text');\n            const EXPERIENCES_TITLE = this.$filter('translate')('%create.teacher.experience.help_text.experiences.title.text');\n            const EXPERIENCES_DESCRIPTION = this.$filter('translate')('%create.teacher.experience.help_text.experiences.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'hobby':\n                    this.helpText.title = TYPE_HOBBY_TITLE;\n                    this.helpText.description = TYPE_HOBBY_DESCRIPTION;\n                break;\n\n                case 'professional':\n                    this.helpText.title = TYPE_PROFESSIONAL_TITLE;\n                    this.helpText.description = TYPE_PROFESSIONAL_DESCRIPTION;\n                break;\n\n                case 'teacherSince':\n                    this.helpText.title = SINCE_TITLE;\n                    this.helpText.description = SINCE_DESCRIPTION;\n                break;\n\n                case 'experiences':\n                    this.helpText.title = EXPERIENCES_TITLE;\n                    this.helpText.description = EXPERIENCES_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addEditExperience\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n        private _addEditExperience(index, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalExperienceTmpl,\n                controller: 'mainApp.components.modal.ModalExperienceController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            experience: self.form.experiences[index],\n                            teacherId: self.$rootScope.teacherData.Id\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the new experience data\n            modalInstance.result.then(function (newExperience) {\n                if(newExperience) {\n                    self.form.experiences.push(newExperience);\n                }\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it\n        * on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            // Send data to parent (editTeacher)\n            this.$rootScope.teacherData.Type = this.form.type;\n            this.$rootScope.teacherData.TeacherSince = this.yearObject.value;\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - EditTeacherController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditTeacherController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editTeacher')\n        .controller(EditTeacherExperienceController.controllerId,\n                    EditTeacherExperienceController);\n\n}\n","/**\n* config()\n* @description - edit teacher methodology section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editTeacher')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editTeacher.methodology', {\n                url: '/methodology',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editTeacher/editTeacherMethodology/editTeacherMethodology.html',\n                        controller: 'mainApp.pages.editTeacher.EditTeacherMethodologyController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditTeacherMethodologyController\n * @description - Edit Teacher Methodology Section Controller (edit teacher)\n */\n\nmodule app.pages.editTeacher {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditTeacherMethodologyController {\n        form: IEditTeacherMethodologyForm;\n        validate: IEditTeacherMethodologyValidate;\n        activate: () => void;\n    }\n\n    export interface ISelectListElementDisabled extends app.core.interfaces.IDataFromJsonI18n {\n        disabled?: boolean;\n    }\n\n    export interface IEditTeacherMethodologyForm {\n        methodology: string;\n        immersion: app.models.teacher.Immersion;\n    }\n\n    interface IEditTeacherMethodologyValidate {\n        methodology: app.core.util.functionsUtil.IValid;\n        immersionActive: app.core.util.functionsUtil.IValid;\n        typeOfImmersionList: app.core.util.functionsUtil.IValid;\n        otherCategory: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditTeacherMethodologyController implements IEditTeacherMethodologyController {\n\n        static controllerId = 'mainApp.pages.editTeacher.EditTeacherMethodologyController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditTeacherMethodologyForm;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        validate: IEditTeacherMethodologyValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        typeOfImmersionList: Array<ISelectListElementDisabled>;\n        typeOfImmersionOptionBox: Array<app.core.interfaces.IKeyValue>;\n        typeObject: app.core.interfaces.IDataFromJsonI18n;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$timeout',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.method.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.method.help_text.description.text');\n            /*********************************/\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Init form\n            this.form = {\n                methodology: '',\n                immersion: new app.models.teacher.Immersion\n            };\n\n            // Build Type of Immersion select lists\n            this.typeOfImmersionList = this.getDataFromJson.getTypeOfImmersioni18n();\n\n            // Init Type of Immersion options box\n            this.typeOfImmersionOptionBox = [];\n\n            // Build validate object fields\n            this.validate = {\n                methodology: {valid: true, message: ''},\n                immersionActive: {valid: true, message: ''},\n                typeOfImmersionList: {valid: true, message: ''},\n                otherCategory: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditTeacherMethodologyController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeStatus\n        * @description - change 'Immersion Switch' Status\n        * @function\n        * @return void\n        */\n        changeStatus(): void {\n            this.form.immersion.Active = !this.form.immersion.Active;\n        }\n\n\n\n        /**\n        * saveMethodologySection\n        * @description - save teacher methodologys (update teacher data on DB)\n        * @function\n        * @return void\n        */\n        saveMethodologySection(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Data');\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            //VARIABLES\n            this.form.methodology = data.Methodology;\n            this.form.immersion = data.Immersion;\n\n            //Charge immersion type list\n            if(this.form.immersion.Active) {\n\n                // type of immersion list was already filled\n                if(this.typeOfImmersionOptionBox.length === 0) {\n\n                    let immersionArray = this.getDataFromJson.getTypeOfImmersioni18n();\n                    let newArray: Array<app.core.interfaces.IKeyValue> = [];\n\n                    for (let i = 0; i < immersionArray.length; i++) {\n\n                        for (let j = 0; j < this.form.immersion.Category.length; j++) {\n                            if(this.form.immersion.Category[j] === immersionArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = immersionArray[i].code;\n                                obj.value = immersionArray[i].value;\n                                //Disable immersion option from select list\n                                this._disableEnableOption(true, obj.key);\n                                this.typeOfImmersionOptionBox.push(obj);\n                            }\n                        }\n\n                    }\n\n                }\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const GLOBAL_MESSAGE = this.$filter('translate')('%create.teacher.method.validation.message.text');\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate 'Methodology' fields\n            let methodology_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.methodology = this.functionsUtil.validator(this.form.methodology, methodology_rules);\n            if(!this.validate.methodology.valid) {\n                formValid = this.validate.methodology.valid;\n            }\n\n            //Validate type of immersion list If user select 'YES' immersion option\n            if(this.form.immersion.Active) {\n\n                let typeOfImmersion_rules = [NULL_ENUM, EMPTY_ENUM];\n                this.validate.typeOfImmersionList = this.functionsUtil.validator(this.form.immersion.Category, typeOfImmersion_rules);\n\n                let otherCategory_rules = [NULL_ENUM, EMPTY_ENUM];\n                this.validate.otherCategory = this.functionsUtil.validator(this.form.immersion.OtherCategory, otherCategory_rules);\n\n                if(this.validate.typeOfImmersionList.valid) {\n                    \n                    this.validate.typeOfImmersionList.valid = true;\n                    this.validate.otherCategory.valid = true;\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n\n                } else if(this.validate.otherCategory.valid) {\n\n                    this.validate.typeOfImmersionList.valid = true;\n                    this.validate.otherCategory.valid = true;\n                    this.validate.globalValidate.valid = true;\n                    this.validate.globalValidate.message = '';\n\n                } else {\n\n                    this.validate.globalValidate.valid = false;\n                    this.validate.globalValidate.message = GLOBAL_MESSAGE;\n                    formValid = this.validate.globalValidate.valid;\n\n                }\n\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (methodology, immerison)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const METHODOLOGY_TITLE = this.$filter('translate')('%create.teacher.method.help_text.methodology.title.text');\n            const METHODOLOGY_DESCRIPTION = this.$filter('translate')('%create.teacher.method.help_text.methodology.description.text');\n            const IMMERSION_TITLE = this.$filter('translate')('%create.teacher.method.help_text.imm.title.text');\n            const IMMERSION_DESCRIPTION = this.$filter('translate')('%create.teacher.method.help_text.imm.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'methodology':\n                    this.helpText.title = METHODOLOGY_TITLE;\n                    this.helpText.description = METHODOLOGY_DESCRIPTION;\n                break;\n\n                case 'immersion':\n                    this.helpText.title = IMMERSION_TITLE;\n                    this.helpText.description = IMMERSION_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addNewImmersion\n        * @description - add new immersion type from typeOfImmersionList to typeOfImmersionOptionBox\n        * @use - this._addNewImmersion();\n        * @function\n        * @return {void}\n        */\n        private _addNewImmersion(): void {\n            let self = this;\n\n            //Disable immersion option from select list\n            this._disableEnableOption(true, this.typeObject.code);\n\n            this.typeOfImmersionOptionBox.push({key: this.typeObject.code, value: this.typeObject.value});\n\n            //Add new immersion type on form object\n            this.form.immersion.Category = [];\n            for (let i = 0; i < this.typeOfImmersionOptionBox.length; i++) {\n                this.form.immersion.Category.push(this.typeOfImmersionOptionBox[i].key);\n            }\n\n        }\n\n\n\n        /**\n        * _removeImmersion\n        * @description - remove a immersion type element of options array\n        * @use - this._removeImmersion(3);\n        * @function\n        * @param {string} key - immersion deselected by user\n        * @return {void}\n        */\n        private _removeImmersion(key): void {\n\n            //Enable immersion option from select list\n            this._disableEnableOption(false, key);\n\n            let newArray = this.typeOfImmersionOptionBox.filter(function(el) {\n                return el.key !== key;\n            });\n\n             this.typeOfImmersionOptionBox = newArray;\n\n             //Create new immersion type list on form object\n             this.form.immersion.Category = [];\n             for (let i = 0; i < this.typeOfImmersionOptionBox.length; i++) {\n                 this.form.immersion.Category.push(this.typeOfImmersionOptionBox[i].key);\n             }\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            //VARIABLES\n            let immersionOptions = this.typeOfImmersionOptionBox;\n            /*********************************/\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.teacherData.Methodology = this.form.methodology;\n            this.$rootScope.teacherData.Immersion = this.form.immersion;\n            this.$rootScope.teacherData.Immersion.Category = this.form.immersion.Category;\n\n        }\n\n\n\n        /**\n        * _disableEnableOption\n        * @description - disable/enable a select option from selectlist\n        * @use - this._disableEnableOption(true, '01');\n        * @function\n        * @param {string} key - immersion option key\n        * @param {boolean} action - enable (false) / disable (true)\n        * @return {void}\n        */\n        private _disableEnableOption(action, key): void {\n            for (let i = 0; i < this.typeOfImmersionList.length; i++) {\n                if(this.typeOfImmersionList[i].code === key) {\n                    this.typeOfImmersionList[i].disabled = action;\n                }\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - EditTeacherController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditTeacherController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editTeacher')\n        .controller(EditTeacherMethodologyController.controllerId,\n                    EditTeacherMethodologyController);\n\n}\n","/**\n* config()\n* @description - edit teacher price section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editTeacher')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editTeacher.price', {\n                url: '/price',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editTeacher/editTeacherPrice/editTeacherPrice.html',\n                        controller: 'mainApp.pages.editTeacher.EditTeacherPriceController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditTeacherPriceController\n * @description - Edit Teacher Price Section Controller (edit teacher)\n */\n\nmodule app.pages.editTeacher {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditTeacherPriceController {\n        form: IEditTeacherPriceForm;\n        validate: IEditTeacherPriceValidate;\n        activate: () => void;\n    }\n\n    export interface IEditTeacherPriceForm {\n        privateClass: app.models.teacher.TypeOfPrice;\n        groupClass: app.models.teacher.TypeOfPrice;\n    }\n\n    interface IEditTeacherPriceValidate {\n        privateClassActive: app.core.util.functionsUtil.IValid;\n        privateClassPrice: app.core.util.functionsUtil.IValid;\n        groupClassActive: app.core.util.functionsUtil.IValid;\n        groupClassPrice: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditTeacherPriceController implements IEditTeacherPriceController {\n\n        static controllerId = 'mainApp.pages.editTeacher.EditTeacherPriceController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditTeacherPriceForm;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        validate: IEditTeacherPriceValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$timeout',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.price.help_text.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.description.text');\n            /*********************************/\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            // Init form\n            this.form = {\n                privateClass: new app.models.teacher.TypeOfPrice,\n                groupClass: new app.models.teacher.TypeOfPrice\n            };\n\n            // Build validate object fields\n            this.validate = {\n                privateClassPrice: {valid: true, message: ''},\n                privateClassActive: {valid: true, message: ''},\n                groupClassPrice: {valid: true, message: ''},\n                groupClassActive: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditTeacherPriceController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.teacherData) {\n                this._fillForm(this.$rootScope.teacherData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeStatus\n        * @description - change 'Private Class Switch' or 'Group Class Switch' Status\n        * @function\n        * @return void\n        */\n        changeStatus(type): void {\n            this.form[type].Active = !this.form[type].Active;\n        }\n\n\n\n        /**\n        * savePriceSection\n        * @description - save teacher prices (update teacher data on DB)\n        * @function\n        * @return void\n        */\n        savePriceSection(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Data');\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.teacher.Teacher} data - Teacher Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.teacher.Teacher): void {\n            this.form.privateClass = data.Price.PrivateClass;\n            this.form.groupClass = data.Price.GroupClass;\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const IS_NOT_ZERO_ENUM = app.core.util.functionsUtil.Validation.IsNotZero;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const TRUE_ENUM = app.core.util.functionsUtil.Validation.IsTrue;\n            const GLOBAL_MESSAGE = this.$filter('translate')('%create.teacher.price.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate price per hour If user select 'YES' private class option\n            if(this.form.privateClass.Active) {\n\n                let privateClassPrice_rules = [NULL_ENUM, EMPTY_ENUM, IS_NOT_ZERO_ENUM];\n                this.validate.privateClassPrice = this.functionsUtilService.validator(this.form.privateClass.HourPrice, privateClassPrice_rules);\n                if(!this.validate.privateClassPrice.valid) {\n                    formValid = this.validate.privateClassPrice.valid;\n                }\n\n            }\n\n            //Validate price per hour If user select 'YES' group class option\n            if(this.form.groupClass.Active) {\n\n                let groupClassPrice_rules = [NULL_ENUM, EMPTY_ENUM, IS_NOT_ZERO_ENUM];\n                this.validate.groupClassPrice = this.functionsUtilService.validator(this.form.groupClass.HourPrice, groupClassPrice_rules);\n                if(!this.validate.groupClassPrice.valid) {\n                    formValid = this.validate.groupClassPrice.valid;\n                }\n\n            }\n\n            //Validate If user selected one Type of Class (private classes)\n            let privateClassActive_rules = [TRUE_ENUM];\n            this.validate.privateClassActive = this.functionsUtilService.validator(this.form.privateClass.Active, privateClassActive_rules);\n\n            //Validate If user selected one Type of Class (group classes)\n            let groupClassActive_rules = [TRUE_ENUM];\n            this.validate.groupClassActive = this.functionsUtilService.validator(this.form.groupClass.Active, groupClassActive_rules);\n\n            //Charge a global error message if bith switches are FALSE\n            if(!this.validate.privateClassActive.valid && !this.validate.groupClassActive.valid) {\n                this.validate.globalValidate.valid = false;\n                this.validate.globalValidate.message = GLOBAL_MESSAGE;\n                formValid = this.validate.globalValidate.valid;\n            } else {\n                this.validate.globalValidate.valid = true;\n                this.validate.globalValidate.message = '';\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (price, immerison)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const PRIVATE_CLASS_TITLE = this.$filter('translate')('%create.teacher.price.help_text.private_class.title.text');\n            const PRIVATE_CLASS_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.private_class.description.text');\n            const GROUP_CLASS_TITLE = this.$filter('translate')('%create.teacher.price.help_text.group_class.title.text');\n            const GROUP_CLASS_DESCRIPTION = this.$filter('translate')('%create.teacher.price.help_text.group_class.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'privateClass':\n                    this.helpText.title = PRIVATE_CLASS_TITLE;\n                    this.helpText.description = PRIVATE_CLASS_DESCRIPTION;\n                break;\n\n                case 'groupClass':\n                    this.helpText.title = GROUP_CLASS_TITLE;\n                    this.helpText.description = GROUP_CLASS_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n\n            // Send data to parent (createTeacherPage)\n            this.$rootScope.teacherData.Price.PrivateClass = this.form.privateClass;\n            this.$rootScope.teacherData.Price.GroupClass = this.form.groupClass;\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section\n        * to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - EditTeacherController\n            * @description - Parent send teacher data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditTeacherController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editTeacher')\n        .controller(EditTeacherPriceController.controllerId,\n                    EditTeacherPriceController);\n\n}\n","/**\n* config()\n* @description - edit teacher language to teach section config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.editTeacher')\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.editTeacher.teach', {\n                url: '/teach',\n                views: {\n                    'section': {\n                        templateUrl: 'app/pages/editTeacher/editTeacherTeach/editTeacherTeach.html',\n                        controller: 'mainApp.pages.editTeacher.EditTeacherTeachController',\n                        controllerAs: 'vm'\n                    }\n                },\n                cache: false\n            });\n    }\n})();\n","/**\n * EditTeacherTeachController\n * @description - Edit Teacher Teach Controller (update teacher teach)\n */\n\nmodule app.pages.editTeacher {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IEditTeacherTeachController {\n        form: IEditTeacherTeachForm;\n        validate: IEditTeacherTeachValidate;\n        activate: () => void;\n    }\n\n    export interface IEditTeacherTeachForm {\n        teach: Array<app.core.interfaces.IKeyValue>;\n    }\n\n    interface IEditTeacherTeachValidate {\n        teach: app.core.util.functionsUtil.IValid;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class EditTeacherTeachController implements IEditTeacherTeachController {\n\n        static controllerId = 'mainApp.pages.editTeacher.EditTeacherTeachController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IEditTeacherTeachForm;\n        saving: boolean;\n        saved: boolean;\n        error: boolean;\n        validate: IEditTeacherTeachValidate;\n        helpText: app.core.interfaces.IHelpTextStep;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        TIME_SHOW_MESSAGE: number;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            '$state',\n            '$filter',\n            '$timeout',\n            '$scope',\n            '$rootScope',\n            '$uibModal'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $timeout: angular.ITimeoutService,\n            private $scope: angular.IScope,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n                this._init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            this.TIME_SHOW_MESSAGE = 6000;\n            this.HELP_TEXT_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.teach.title.text');\n            this.HELP_TEXT_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.teach.description.text');\n            /*********************************/\n\n            // Init saving loading\n            this.saving = false;\n\n            // Init saved message\n            this.saved = false;\n\n            // Init error message\n            this.error = false;\n\n            //Put Help Text Default\n            this.helpText = {\n                title: this.HELP_TEXT_TITLE,\n                description: this.HELP_TEXT_DESCRIPTION\n            };\n\n            //Init form\n            this.form = {\n                teach: []\n            };\n\n            // Build validate object fields\n            this.validate = {\n                teach: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('EditTeacherTeachController controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //FILL FORM FROM ROOTSCOPE TEACHER INFO\n            if(this.$rootScope.profileData) {\n                this._fillForm(this.$rootScope.profileData);\n            }\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * saveTeachSection\n        * @description - save teacher language to teach (update teacher data on DB)\n        * @function\n        * @return void\n        */\n        saveTeachSection(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n                this._setDataModelFromForm();\n                this.$scope.$emit('Save Profile Data');\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n        }\n\n\n\n        /**\n        * _fillForm\n        * @description - Fill form with teacher data\n        * @use - this._fillForm(data);\n        * @function\n        * @param {app.models.user.Profile} data - Profile Data\n        * @return {void}\n        */\n        private _fillForm(data: app.models.user.Profile): void {\n\n            // Form is already filled (Just take native because it's required has a native language)\n            if(this.form.teach.length === 0) {\n\n                let languageArray = this.getDataFromJson.getLanguagei18n();\n                for (let i = 0; i < languageArray.length; i++) {\n\n                    if(data.Languages.Teach) {\n                        // Build user teach language list\n                        for (let j = 0; j < data.Languages.Teach.length; j++) {\n\n                            if(data.Languages.Teach[j] == languageArray[i].code) {\n                                let obj = {key:null, value:''};\n                                obj.key = parseInt(languageArray[i].code);\n                                obj.value = languageArray[i].value;\n                                if(this.form.teach == null) {\n                                    this.form.teach = [];\n                                    this.form.teach.push(obj);\n                                } else {\n                                    this.form.teach.push(obj);\n                                }\n                            }\n\n                        }\n                    }\n\n                }\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Teach Languages List\n            let teach_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.teach = this.functionsUtil.validator(this.form.teach, teach_rules);\n            if(!this.validate.teach.valid) {\n                formValid = this.validate.teach.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * changeHelpText\n        * @description - change help block text (titles and descriptions) dynamically\n        *  based on specific field (firstName, lastName, email, etc)\n        * @use - this.changeHelpText('firstName');\n        * @function\n        * @return {void}\n        */\n        changeHelpText(type): void {\n            //CONSTANTS\n            const TEACH_TITLE = this.$filter('translate')('%create.teacher.lang.help_text.teach.title.text');\n            const TEACH_DESCRIPTION = this.$filter('translate')('%create.teacher.lang.help_text.teach.description.text');\n            /*****************************************************/\n\n            switch(type) {\n                case 'default':\n                    this.helpText.title = this.HELP_TEXT_TITLE;\n                    this.helpText.description = this.HELP_TEXT_DESCRIPTION;\n                break;\n\n                case 'teach':\n                    this.helpText.title = TEACH_TITLE;\n                    this.helpText.description = TEACH_DESCRIPTION;\n                break;\n            }\n\n        }\n\n\n\n        /**\n        * _addNewLanguages\n        * @description - open Modal in order to add a New Languages on Box\n        * @use - this._addNewLanguages();\n        * @function\n        * @return {void}\n        */\n        private _addNewLanguages(type, $event): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalLanguagesTmpl,\n                controller: 'mainApp.components.modal.ModalLanguageController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            type: type,\n                            list: self.form[type]\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the languages options list\n            modalInstance.result.then(function (newLanguagesList) {\n                self.form[type] = newLanguagesList;\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n            $event.preventDefault();\n        }\n\n\n\n        /**\n        * _removeLanguage\n        * @description - remove a language element of options array\n        * @use - this._removeLanguage(3);\n        * @function\n        * @param {string} key - languages deselected by user\n        * @param {string} type - type of languages list (native, learn, teach)\n        * @return {void}\n        */\n        private _removeLanguage(key, type): void {\n             let newArray = this.form[type].filter(function(el) {\n                 return el.key !== key;\n             });\n\n             this.form[type] = newArray;\n        }\n\n\n\n        /**\n        * _setDataModelFromForm\n        * @description - get data from form's input in order to put it on $parent.teacherData\n        * @use - this._getDataFromForm();\n        * @function\n        * @return {void}\n        */\n        private _setDataModelFromForm(): void {\n            if(this.form.teach) {\n                let teach = [];\n                for (let i = 0; i < this.form.teach.length; i++) {\n                    teach.push(this.form.teach[i].key);\n                }\n                this.$rootScope.profileData.Languages.Teach = teach;\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Teacher Location Section to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * Fill Form event\n            * @parent - EditTeacherController\n            * @description - Parent send profile data in order to\n            * Child fill the form's field\n            * @event\n            */\n            this.$scope.$on('Fill Form',\n                function(event, args) {\n                    self.error = false;\n                    if(args !== 'error') {\n                        self._fillForm(args);\n                    } else {\n                        self.error = true;\n                    }\n                }\n            );\n\n\n            /**\n            * Saved event\n            * @parent - EditTeacherController\n            * @description - Parent notify that data was saved successful\n            * @event\n            */\n            this.$scope.$on('Saved',\n                function(event, args) {\n                    //loading Off\n                    self.saving = false;\n                    self.error = false;\n                    self.saved = true;\n\n                    self.$timeout(function() {\n                        self.saved = false;\n                    }, self.TIME_SHOW_MESSAGE);\n                }\n            );\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.editTeacher')\n        .controller(EditTeacherTeachController.controllerId,\n                    EditTeacherTeachController);\n\n}\n","/**\n* config()\n* @description - landing page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.landingPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.landingPage', {\n                url: '/main',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/landingPage/landingPage.html',\n                        controller: 'mainApp.pages.landingPage.LandingPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                data: {\n                    requireLogin: false\n                },\n                params: {\n                    showLogin: false,\n                },\n                cache: false,\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = false;\n                    $rootScope.activeFooter = true;\n                }]\n            })\n            .state('page.landingPage.recommendation', {\n                url: '/main/recommendation/:id',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/landingPage/landingPage.html',\n                        controller: 'mainApp.pages.landingPage.LandingPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                params: {\n                    id: null\n                },\n                parent: 'page',\n                cache: false,\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = false;\n                    $rootScope.activeFooter = true;\n                }]\n            });\n    }\n})();\n","/**\n * LandingPageController\n * @description - Landing Page Controller\n */\n\nmodule app.pages.landingPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ILandingPageController {\n        form: ILandingForm;\n        activate: () => void;\n    }\n\n    export interface ILandingScope extends angular.IScope {\n\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n        showLogin: boolean;\n    }\n\n    export interface ILandingForm {\n        userData: IUserDataLanding;\n        language: string;\n        feedback: app.models.feedback.Feedback;\n    }\n\n    export interface IUserDataLanding {\n        name: string;\n        email: string;\n        comment: string;\n    }\n\n    export interface IFormStatus {\n        success: boolean;\n        sending: boolean;\n        sent: boolean;\n        disabled: boolean;\n    }\n\n    interface ILandingValidate {\n        country: app.core.util.functionsUtil.IValid;\n        email: app.core.util.functionsUtil.IValid;\n    }\n\n    export interface ILandingError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class LandingPageController implements ILandingPageController {\n\n        static controllerId = 'mainApp.pages.landingPage.LandingPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ILandingForm;\n        infoCountry: IFormStatus;\n        infoNewUser: IFormStatus;\n        validate: ILandingValidate;\n        isAuthenticated: boolean;\n        isTeacher: boolean;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$scope',\n                                 '$state',\n                                 '$stateParams',\n                                 'dataConfig',\n                                 '$uibModal',\n                                 'mainApp.auth.AuthService',\n                                 'mainApp.core.util.messageUtilService',\n                                 'mainApp.core.util.FunctionsUtilService',\n                                 'mainApp.pages.landingPage.LandingPageService',\n                                 'mainApp.models.feedback.FeedbackService',\n                                 'mainApp.core.util.GetDataStaticJsonService',\n                                 '$rootScope',\n                                 'mainApp.localStorageService'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $scope: angular.IScope,\n            private $state: ng.ui.IStateService,\n            private $stateParams: IParams,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private AuthService: app.auth.IAuthService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private LandingPageService: app.pages.landingPage.ILandingPageService,\n            private FeedbackService: app.models.feedback.IFeedbackService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private localStorage) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Validate if user is Authenticated\n            this.isAuthenticated = this.AuthService.isAuthenticated();\n\n            //Validate if user is teacher\n            if(this.$rootScope.profileData) {\n                this.isTeacher = this.$rootScope.profileData.IsTeacher;\n            }\n\n            //Init form\n            this.form = {\n                userData: {\n                    name: '',\n                    email: '',\n                    comment: ''\n                },\n                language: this.functionsUtil.getCurrentLanguage() || 'en',\n                feedback: new app.models.feedback.Feedback()\n            };\n\n            //Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            // Init Country form status\n            this.infoCountry = {\n                success: false,\n                sending: false,\n                sent: true,\n                disabled: false\n            };\n\n            // Init New User form status\n            this.infoNewUser = {\n                success: false,\n                sending: false,\n                sent: true,\n                disabled: false\n            };\n\n            // Build validate object fields\n            this.validate = {\n                country: {valid: true, message: ''},\n                email: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Main Landing Page';\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('landingPage controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //Validate if come from recommendation email\n            if(this.$stateParams.id) {\n\n                // modal default options\n                let options: ng.ui.bootstrap.IModalSettings = {\n                    animation: false,\n                    backdrop: 'static',\n                    keyboard: false,\n                    templateUrl: this.dataConfig.modalRecommendTeacherTmpl,\n                    controller: 'mainApp.components.modal.ModalRecommendTeacherController as vm',\n                    resolve: {\n                        //one way to send data from this scope to modal\n                        dataSetModal: function () {\n                            return {\n                                earlyId: self.$stateParams.id\n                            }\n                        }\n                    }\n                };\n\n                // Open Teacher Recommendation Modal\n                var modalInstance = this.$uibModal.open(options);\n            }\n\n            // Launch Login modal\n            if(this.$stateParams.showLogin) {\n                this._openLogInModal();\n            }\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeLanguage\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n\n        changeLanguage(): void {\n             this.functionsUtil.changeLanguage(this.form.language);\n        }\n\n\n\n        /**\n         * logout\n         * @description - Log out current logged user (call AuthService to revoke token)\n         * @use - this.logout();\n         * @function\n         * @return {void}\n        */\n\n        logout(): void {\n            //VARIABLES\n            let self = this;\n\n            this.AuthService.logout().then(\n                function(response) {\n                    // Success\n                    window.location.reload();\n                },\n                function(response) {\n                    // Error\n                    /* This can occur if connection to server is lost or server is down */\n                    DEBUG && console.log('A problem occured while logging you out.');\n                }\n            );\n        }\n\n\n\n        /**\n        * goToSearch\n        * @description - go to search page\n        * @function\n        * @param {string} target - Section user clicked\n        * @return {void}\n        */\n        goToSearch(target: string): void {\n            //CONSTANTS\n            const SEARCH_PAGE_STATE = 'page.searchPage';\n            const GOTO_MIXPANEL = 'Go to Search from: ' + target;\n            /************************/\n\n            //MIXPANEL\n            mixpanel.track(GOTO_MIXPANEL);\n\n            this.$state.go(SEARCH_PAGE_STATE, {reload: true});\n        }\n\n\n\n        /**\n        * _sendCountryFeedback\n        * @description - save country feedback to database\n        * @use - this._sendCountryFeedback();\n        * @function\n        * @return {void}\n        */\n\n        private _sendCountryFeedback(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Click: Send Country Feedback';\n            const FEEDBACK_SUCCESS_MESSAGE = '¡Gracias por tu recomendación!. La revisaremos y pondremos manos a la obra.';\n            /***************************************************/\n\n            //VARIABLES\n            let self = this;\n            this.form.feedback.NextCountry = this.countryObject.code;\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            if(this.form.feedback.NextCountry) {\n                this.infoCountry.sending = true;\n                this.infoCountry.sent = false;\n                this.infoCountry.disabled = true;\n                this.FeedbackService.createFeedback(this.form.feedback).then(\n                    function(response) {\n                        if(response.createdAt) {\n                            self.infoCountry.success = true;\n                            self.messageUtil.success(FEEDBACK_SUCCESS_MESSAGE);\n                            self.infoCountry.sent = true;\n                            self.infoCountry.sending = false;\n                            self.infoCountry.disabled = true;\n                            self.validate.country.valid = true;\n                            self.form.userData.email = '';\n                        } else {\n                            self.infoCountry.sending = false;\n                            self.infoCountry.disabled = false;\n                            self.validate.country.valid = true;\n                        }\n                    }\n                );\n            } else {\n                this.validate.country.valid = false;\n            }\n\n        }\n\n\n\n        /**\n        * _recommendTeacher\n        * @description - user could recommend a known teacher\n        * @use - this._recommendTeacher();\n        * @function\n        * @return {void}\n        */\n\n        _recommendTeacher(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Recommend Teacher';\n            //VARIABLES\n            let url = 'https://waysily.typeform.com/to/iAWFeg';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            window.open(url,'_blank');\n        }\n\n\n\n        /**\n        * _recommendSchool\n        * @description - user could recommend a known school\n        * @use - this._recommendTeacher();\n        * @function\n        * @return {void}\n        */\n\n        _recommendSchool(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Recommend School';\n            //VARIABLES\n            let url = 'https://waysily.typeform.com/to/q5uT0P';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            window.open(url,'_blank');\n        }\n\n\n\n        /**\n        * _createEarlyAdopter\n        * @description - save new user's email early adopter\n        * @use - this._createEarlyAdopter();\n        * @function\n        * @return {void}\n        */\n\n        private _createEarlyAdopter(): void {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            const NEW_MIXPANEL = 'New Early Adopter data';\n            /***************************************************/\n\n            // VARIABLES\n            let self = this;\n\n            //Validate Email field\n            let email_rules = [NULL_ENUM, EMPTY_ENUM, EMAIL_ENUM];\n            this.validate.email = this.functionsUtil.validator(this.form.userData.email, email_rules);\n\n            if(this.validate.email.valid) {\n                this.infoNewUser.sending = true;\n\n                mixpanel.track(NEW_MIXPANEL, {\n                    \"name\": this.form.userData.name || '*',\n                    \"email\": this.form.userData.email,\n                    \"comment\": this.form.userData.comment || '*'\n                });\n\n                let userData = {\n                    uid: app.core.util.functionsUtil.FunctionsUtilService.generateGuid(),\n                    name: this.form.userData.name || '*',\n                    email: this.form.userData.email,\n                    comment: this.form.userData.comment || '*'\n                };\n                this.LandingPageService.createEarlyAdopter(userData).then(\n                    function(response) {\n                        if(response.createdAt) {\n                            self.infoNewUser.sent = true;\n                            self.infoNewUser.sending = false;\n                            self.infoNewUser.disabled = true;\n                            self.infoNewUser.success = true;\n                            self.validate.country.valid = true;\n                        } else {\n                            self.infoNewUser.sending = false;\n                            self.infoNewUser.disabled = false;\n                            self.infoNewUser.success = false;\n                            self.validate.email.valid = true;\n                        }\n                    }\n                );\n            } else {\n                this.validate.email.valid = false;\n            }\n        }\n\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._openSignUpModal();\n        * @function\n        * @return {void}\n        */\n        private _openSignUpModal(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click on Sign up: main landing page';\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size:'sm',\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            mixpanel.track(CLICK_MIXPANEL);\n        }\n\n\n\n        /**\n        * _openLogInModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openLogInModal();\n        * @function\n        * @return {void}\n        */\n        private _openLogInModal(): void {\n            //VARIABLES\n            let self = this;\n\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalLogInTmpl,\n                controller: 'mainApp.components.modal.ModalLogInController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            /* When modal is closed,validate if user is Authenticated in order to\n            show current avatar user */\n            modalInstance.result.then(function () {\n                //Validate if user is Authenticated\n                self.$rootScope.$broadcast('Is Authenticated');\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Landing Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Is Authenticated event\n            * @description - Parent (LandingPageController) receive Child's\n                             event in order to know if user is authenticated\n            * @event\n            */\n            this.$scope.$on('Is Authenticated', function(event, args) {\n                //Validate if user is Authenticated\n                self.isAuthenticated = self.AuthService.isAuthenticated();\n                //Validate if user is teacher\n                if(self.$rootScope.profileData) {\n                    self.isTeacher = self.$rootScope.profileData.IsTeacher;\n                }\n            });\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.landingPage')\n        .controller(LandingPageController.controllerId, LandingPageController);\n\n}\n","/**\n * LandingPageService\n * @description - Services related on Student Landing Page Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.pages.landingPage {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ILandingPageService {\n        createEarlyAdopter: (userData) => angular.IPromise<any>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class LandingPageService implements ILandingPageService {\n\n        static serviceId = 'mainApp.pages.landingPage.LandingPageService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        EARLY_URI: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService',\n            '$q'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private restApi: app.core.restApi.IRestApi,\n            private $q: angular.IQService) {\n            //CONSTANTS\n            this.EARLY_URI = 'early';\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * createEarlyAdopter\n        * @description - create early adopter object\n        * @use - this.LandingPageService.createEarlyAdopter();\n        * @function\n        * @return {angular.IPromise<any>} promise - return early adopter object\n        */\n        createEarlyAdopter(userData): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.EARLY_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.create({url: url}, userData).$promise\n            .then(\n                function(response) {\n                    deferred.resolve(response);\n                },\n                function(error) {\n                    DEBUG && console.error(error);\n                    deferred.reject(error);\n                }\n            );\n\n            return deferred.promise;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.landingPage')\n        .service(LandingPageService.serviceId, LandingPageService);\n\n}\n","/**\r\n* config()\r\n* @description - main page config file\r\n*/\r\n\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mainApp.pages.main', [])\r\n        .config(config);\r\n\r\n    //config.$inject = ['ionic'];\r\n    //TODO: Si coloco cache=false, se rompe la navegación de: page/main/recommendation/21\r\n    function config($stateProvider: angular.ui.IStateProvider) {\r\n        $stateProvider\r\n            .state('page', {\r\n                url: '/page',\r\n                abstract: true,\r\n                templateUrl: 'app/pages/main/main.html',\r\n                controller: 'mainApp.pages.main.MainController',\r\n                controllerAs: 'vm'\r\n            });\r\n\r\n    }\r\n})();\r\n","/**\n * MainController\n * @description - Main Page Controller\n */\n\nmodule app.pages.main {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IMainController {\n        activate: () => void;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class MainController implements IMainController {\n\n        static controllerId = 'mainApp.pages.main.MainController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            '$state',\n            '$rootScope',\n            'mainApp.localStorageService',\n            'dataConfig'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $state: ng.ui.IStateService,\n                    private $rootScope: app.core.interfaces.IMainAppRootScope,\n                    private localStorage,\n                    private dataConfig: IDataConfig) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //VARIABLES\n            let self = this;\n            let earlyId = this.localStorage.getItem(this.dataConfig.earlyIdLocalStorage);\n            //Get current state\n            let currentState = this.$state.current.name;\n\n            //Show/Hide Float Message Bar\n            //TODO: Si estoy en createTeacherPage oculta el float message bar\n            // ya que molestaria al usuario si esta por crear su cuenta como profesor.\n            // Solucion temporal para no gastar mucho tiempo en este tema.\n            //Remover cuando sea necesario.\n            if(currentState.indexOf('page.createTeacherPage') !== -1) {\n                this.$rootScope.activeMessageBar = false;\n            } else {\n                this.$rootScope.activeMessageBar = earlyId ? true: false;\n            }\n\n\n            //LOG\n            console.log('main controller actived');\n\n        }\n\n    }\n\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.main')\n        .controller(MainController.controllerId, MainController);\n\n}\n","/**\n* config()\n* @description - meeting confirmation page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.meetingConfirmationPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.meetingConfirmationPage', {\n                url: '/meeting/confirmation',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/meetingConfirmationPage/meetingConfirmationPage.html',\n                        controller: 'mainApp.pages.meetingConfirmationPage.MeetingConfirmationPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    user: null\n                }\n            });\n    }\n})();\n","/**\n * MeetingConfirmationPageController\n * @description - Meeting Confirmation Page Controller\n */\n\nmodule app.pages.meetingConfirmationPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IMeetingConfirmationPageController {\n        form: IMeetingConfirmationForm;\n        error: IMeetingConfirmationError;\n        activate: () => void;\n    }\n\n    interface IMeetingConfirmationScope extends angular.IScope {\n\n    }\n\n    interface IMeetingConfirmationForm {\n        helloText: string;\n        meetingPoint: IMeetingPoint;\n    }\n\n    interface IMeetingConfirmationError {\n        message: string;\n    }\n\n    export interface IMeetingPoint {\n        name: string;\n        category: string;\n        address: string;\n        prices: IPrice;\n        position: components.map.IPosition;\n    }\n\n    export interface IPrice {\n        min: number;\n        max: number;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class MeetingConfirmationPageController implements IMeetingConfirmationPageController {\n\n        static controllerId = 'mainApp.pages.meetingConfirmationPage.MeetingConfirmationPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IMeetingConfirmationForm;\n        error: IMeetingConfirmationError;\n        mapConfig: components.map.IMapConfig;\n        processCompleted: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'dataConfig',\n            '$state',\n            '$filter',\n            '$scope',\n            '$uibModal'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private dataConfig: IDataConfig,\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService,\n            private $scope: IMeetingConfirmationScope,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init form\n            this.form = {\n                helloText: '',\n                meetingPoint: {\n                    name: 'Escoge un punto de encuentro',\n                    category: '',\n                    address: '',\n                    prices: {min:0, max:0},\n                    position: {lat: null, lng: null}\n                }\n            };\n\n            this.error = {\n                message: ''\n            };\n\n            // init map config\n            this.mapConfig = {\n                type: 'location-map',\n                data: null\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('meetingConfirmationPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        addNewMeetingPoint(): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalMeetingPointTmpl,\n                controller: 'mainApp.components.modal.ModalMeetingPointController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            model: {test: 'data'}\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            //When Modal closed, return the new meeting point\n            modalInstance.result.then(function (newMeetingPoint) {\n                /* TODO: Mostrar aqui el nuevo punto en el mapa, la info en el\n                        cuadro, habilitamos el boton: Send Request */\n            }, function () {\n                console.info('Modal dismissed at: ' + new Date());\n            });\n\n            event.preventDefault();\n        }\n\n\n        chooseMeetingPoint(): void {\n            /*TODO: Aqui deberiamos:\n                1. Tomar el punto escogido, y reemplazarlo con el\n                    texto que dice: Escoge punto de encuentro. */\n\n            //Build Meeting Point Model\n            // e.g. this.meetingPoint = new meetingPoint(this.form.meetingPoint);\n            var meetingPoint = {\n                name: 'Café Vervlet',\n                category: 'Café',\n                address: 'Trans 33 Sur',\n                prices: {min:23000, max:30000},\n                position: {lat: 6.1739743,lng: -75.5822414}\n            };\n\n            this.form.meetingPoint = meetingPoint;\n\n            /*\n                2. Validar si el usuario ya lleno el textarea de: Say Hello.\n                3. Deberia ocultar todo el bloque izquierdo, dandole\n                   protagonismo al bloque derecho, habilitando el\n                   botón: Send Request.\n                4. El texto del textarea: Decir hola!, deberia aparecer\n                   debajo del punto de encuentro, con la opción de poder\n                   editarlo, cuando presione de nuevo ahi, apareceria el\n                   bloque izquierdo (igualmente al dar clicn en el punto de\n                   encuentro).\n            */\n            if(this.form.helloText != '' &&\n               this.form.meetingPoint.position.lat != null &&\n               this.form.meetingPoint.position.lng != null) {\n\n                this.processCompleted = true;\n\n            }\n\n        }\n\n        saveMessage (): void {\n            if(this.form.helloText != '' &&\n               this.form.meetingPoint.position.lat != null &&\n               this.form.meetingPoint.position.lng != null) {\n\n                this.processCompleted = true;\n\n            }\n        }\n\n        edit(): void {\n            this.processCompleted = false;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.meetingConfirmationPage')\n        .controller(MeetingConfirmationPageController.controllerId,\n                    MeetingConfirmationPageController);\n\n}\n","/**\n* config()\n* @description - reset Password page config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.resetPasswordPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.resetPasswordPage', {\n                url: '/users/password/edit/:uid/:token',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/resetPasswordPage/resetPasswordPage.html',\n                        controller: 'mainApp.pages.resetPasswordPage.ResetPasswordPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                data: {\n                    requireLogin: false\n                },\n                params: {\n                    uid: null,\n                    token: null\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = true;\n                    $rootScope.activeFooter = true;\n                    $rootScope.activeMessageBar = false;\n                }]\n            });\n    }\n})();\n","/**\n * ResetPasswordPageController\n * @description - Create Teacher Page Controller\n */\n\nmodule app.pages.resetPasswordPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IResetPasswordPageController {\n        form: IResetPasswordForm;\n        validate: IResetPasswordValidate;\n        activate: () => void;\n    }\n\n    interface IResetPasswordForm {\n        newPassword1: string;\n        newPassword2: string;\n    }\n\n    interface IResetPasswordValidate {\n        newPassword1: app.core.util.functionsUtil.IValid;\n        newPassword2: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    interface IResetPasswordParams extends app.core.interfaces.IStateParamsData {\n        uid: string;\n        token: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class ResetPasswordPageController implements IResetPasswordPageController {\n\n        static controllerId = 'mainApp.pages.resetPasswordPage.ResetPasswordPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        uid: string;\n        token: string;\n        form: IResetPasswordForm;\n        validate: IResetPasswordValidate;\n        passwordMinLength: number;\n        passwordMaxLength: number;\n        saving: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            '$state',\n            'dataConfig',\n            '$filter',\n            '$stateParams',\n            'mainApp.auth.AuthService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.util.messageUtilService'\n        ];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $state: ng.ui.IStateService,\n            private dataConfig: IDataConfig,\n            private $filter: angular.IFilterService,\n            private $stateParams: IResetPasswordParams,\n            private AuthService: app.auth.IAuthService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService\n        ) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            // Init saving loading\n            this.saving = false;\n\n            this.uid = this.$stateParams.uid;\n\n            this.token = this.$stateParams.token;\n\n            // Password min length\n            this.passwordMinLength = this.dataConfig.passwordMinLength;\n\n            // Password max length\n            this.passwordMaxLength = this.dataConfig.passwordMaxLength;\n\n            //Init form\n            this.form = {\n                newPassword1: '',\n                newPassword2: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                newPassword1: {valid: true, message: ''},\n                newPassword2: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Reset Password Page';\n            //VARIABLES\n            let self = this;\n\n            //LOG\n            console.log('resetPasswordPage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL, {\n                \"uid\": this.uid || '*',\n                \"token\": this.token || '*'\n            });\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const PASSWORD_MESSAGE = this.$filter('translate')('%recover.password.not_match.text');\n            /***************************************************/\n\n            //VARIABLES\n            let formValid = true;\n            let password_rules = [NULL_ENUM, EMPTY_ENUM];\n\n            //Validate New Password field\n            this.validate.newPassword1 = this.functionsUtil.validator(this.form.newPassword1, password_rules);\n            if(!this.validate.newPassword1.valid) {\n                formValid = this.validate.newPassword1.valid;\n            }\n\n            //Validate Confirm Password field\n            this.validate.newPassword2 = this.functionsUtil.validator(this.form.newPassword2, password_rules);\n            if(!this.validate.newPassword2.valid) {\n                formValid = this.validate.newPassword2.valid;\n            }\n\n            //Validate if both password are equal\n            if(this.form.newPassword1 !== this.form.newPassword2) {\n                formValid = false;\n                this.validate.globalValidate.valid = false;\n                this.validate.globalValidate.message = PASSWORD_MESSAGE;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _changePassword\n        * @description - Send change password request to Auth DB\n        * @use - this._changePassword();\n        * @function\n        * @return {void}\n        */\n        private _changePassword(): void {\n            //CONSTANTS\n            const SUCCESS_CHANGE_PROCESS = this.$filter('translate')('%recover.password.success.text');\n            const LINK_EXPIRED = this.$filter('translate')('%recover.password.link_expired.text');\n            const PASSWORD_COMMON = this.$filter('translate')('%recover.password.password_common.text');\n\n            //VARIABLES\n            let self = this;\n\n            let formValid = this._validateForm();\n\n            if(formValid) {\n\n                this.validate.globalValidate.valid = true;\n\n                //loading On\n                this.saving = true;\n\n                this.AuthService.confirmResetPassword(\n                    self.uid,\n                    self.token,\n                    self.form.newPassword1,\n                    self.form.newPassword2).then(\n                        //Success\n                        function(response) {\n                            //loading Off\n                            self.saving = false;\n                            self.messageUtil.success(SUCCESS_CHANGE_PROCESS);\n                            self.$state.go('page.landingPage',{showLogin: true}, {reload: true});\n                        },\n\n                        //Error\n                        function(error) {\n                            //loading Off\n                            self.saving = false;\n                            self.validate.globalValidate.valid = false;\n                            if(error.data) {\n                                if(error.data.token) {\n                                    if(error.data.token[0] === 'Invalid value'){\n                                        self.validate.globalValidate.message = LINK_EXPIRED;\n                                    } else {\n                                        self.messageUtil.error('');\n                                    }\n                                } else if(error.data.newPassword2) {\n                                    self.validate.globalValidate.message = PASSWORD_COMMON;\n                                } else {\n                                    self.messageUtil.error('');\n                                }\n                            }\n                        }\n                    );\n\n            }\n\n        }\n\n    }\n\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.resetPasswordPage')\n        .controller(ResetPasswordPageController.controllerId,\n                    ResetPasswordPageController);\n\n}\n","/**\n* config()\n* @description - school profile page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.schoolProfilePage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.schoolProfilePage', {\n                url: '/schools/show/:id',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/schoolProfilePage/schoolProfilePage.html',\n                        controller: 'mainApp.pages.schoolProfilePage.SchoolProfilePageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                data: {\n                    requireLogin: false\n                },\n                params: {\n                    id: null\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = true;\n                    $rootScope.activeFooter = true;\n                }]\n            });\n    }\n})();\n","/**\n * SchoolProfilePageController\n * @description - School Profile Page Controller\n */\n\nmodule app.pages.schoolProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ISchoolProfilePageController {\n        activate: () => void;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ISchoolParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SchoolProfilePageController implements ISchoolProfilePageController {\n\n        static controllerId = 'mainApp.pages.schoolProfilePage.SchoolProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        mapConfig: components.map.IMapConfig;\n        data: app.models.school.School;\n        loading: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.school.SchoolService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$stateParams',\n            '$filter'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private SchoolService: app.models.school.ISchoolService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ISchoolParams,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init profile school data\n            this.data = new app.models.school.School();\n\n            //Init loading\n            this.loading = true;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: School Profile Page';\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('schoolProfilePage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            // Get School information\n            this.SchoolService.getSchoolById(this.$stateParams.id).then(\n                function(response) {\n                    self.data = new app.models.school.School(response);\n                    self.loading = false;\n                }\n            );\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * goToSite\n        * @description - this method is launched when user press some url school button\n        * @use - this.FunctionsUtilService.goToSite('http://www.school.com');\n        * @function\n        * @param {string} url - School urls such as: facebook, twitter, instagram,\n        * email, website, etc.\n        * @return {void}\n        */\n\n        goToSite (url: string): void {\n            //CONSTANTS\n            const EMAIL_REGEX = /(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/;\n\n            if(EMAIL_REGEX.test(url)) {\n                url = 'mailto:' + url;\n                window.open(url);\n            }\n\n            if(url) {\n                window.open(url,'_blank');\n            }\n        }\n\n\n\n        /**\n        * assignAmenitieIconClass\n        * @description - build amenities icons class\n        * (e.g. ma-liner-icons--default--wifi, ma-liner-icons--default--tv)\n        * @use - this.FunctionsUtilService.assignAmenitieIconClass('2');\n        * @function\n        * @param {string} url - School urls such as: facebook, twitter, instagram,\n        * email, website, etc.\n        * @return {void}\n        */\n\n        assignAmenitieIconClass (amenitie: string): string {\n            //VARIABLES\n            let amenitiePrefixClass = 'ma-liner-icons--default--';\n            let iconClass = this.functionsUtil.assignAmenitieIconClass(amenitie);\n\n            return amenitiePrefixClass + iconClass;\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.schoolProfilePage')\n        .controller(SchoolProfilePageController.controllerId, SchoolProfilePageController);\n\n}\n","/**\n* config()\n* @description - search page config file\n* @note - If requireLogin is true, this state must have 'resolve' function,\n* If requireLogin is false, this state must not have 'resolve' function:\n* resolve: {\n    waitForAuth: ['mainApp.auth.AuthService', function(AuthService) {\n        return AuthService.autoRefreshToken();\n    }]\n* }\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.searchPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.searchPage', {\n                url: '/search',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/searchPage/searchPage.html',\n                        controller: 'mainApp.pages.searchPage.SearchPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                data: {\n                    requireLogin: false\n                },\n                parent: 'page',\n                params: {\n                    country: null\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = true;\n                    $rootScope.activeFooter = false;\n                }]\n            });\n\n    }\n\n})();\n","/**\n * SearchPageController\n * @description - Search Page Controller\n */\n\nmodule app.pages.searchPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface ISearchPageController {\n        error: ISearchPageError;\n        activate: () => void;\n    }\n\n    interface ISearchPageError {\n        message: string;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ISearchPageParams extends ng.ui.IStateParamsService {\n        country: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SearchPageController implements ISearchPageController {\n\n        static controllerId = 'mainApp.pages.searchPage.SearchPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        error: ISearchPageError;\n        mapConfig: components.map.IMapConfig;\n        data: Array<app.models.student.Student>;\n        type: string;\n        VALIDATED: string;\n        loading: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.student.StudentService',\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.models.school.SchoolService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$stateParams',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$timeout'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private StudentService: app.models.student.IStudentService,\n            private TeacherService: app.models.teacher.ITeacherService,\n            private SchoolService: app.models.school.ISchoolService,\n            private FunctionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ISearchPageParams,\n            private $filter: angular.IFilterService,\n            private $scope: angular.IScope,\n            private $rootScope: angular.IRootScopeService,\n            private $timeout: angular.ITimeoutService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //TODO: Buscar una forma de crear un Enum global, donde no tenga que\n            // hacer esto cada vez que quiera usar un filtro\n            //GLOBAL CONSTANTS\n            this.VALIDATED = 'VA';\n\n            //Init users list\n            this.data = [];\n\n            //Type of results (student, teacher, school)\n            this.type = 'teacher';\n\n            //Init loading\n            this.loading = true;\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Search Page';\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('searchPage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n            //Get All Teacher of this zone (Default results)\n            this.TeacherService.getAllTeachersByStatus(this.VALIDATED).then(\n                function(response: app.models.teacher.ITeacherQueryObject) {\n\n                    self.type = 'teacher';\n                    self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                        response.results,\n                        'search-map',\n                        null,\n                        6\n                    );\n\n                    /*\n                    * Send event to child (MapController) in order to It draws\n                    * each Marker on the Map\n                    */\n                    self.$scope.$broadcast('BuildMarkers', self.mapConfig);\n\n                    self.data = self.FunctionsUtilService.splitToColumns(response.results, 2);\n\n                    self.$timeout(function(){\n                        self.loading = false;\n                    });\n\n                    //Center Map on Country selected\n                    if(self.$stateParams.country) {\n                        self.$timeout(function(){\n                            self._searchByCountry(self.$stateParams.country);\n                        });\n                    }\n                }\n            );\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * _getResultLoading\n        * @description - this method return specific loading template\n        * based on type result (students, teachers, schools, etc)\n        * @use - this._getResultTemplate('student');\n        * @function\n        * @params {string} type - type of results list (students, teachers, schools, etc)\n        * @return {string} result template path\n        */\n\n        private _getResultLoading(type: string): string {\n            //CONSTANTS\n            const STUDENT_TYPE = 'student';\n            const TEACHER_TYPE = 'teacher';\n            const SCHOOL_TYPE = 'school';\n            /*********************************/\n\n            switch (type) {\n                case STUDENT_TYPE:\n                return 'app/pages/searchPage/studentResult/studentResult.html';\n                case TEACHER_TYPE:\n                return 'app/pages/searchPage/teacherLoading/teacherLoading.html';\n                case SCHOOL_TYPE:\n                return 'app/pages/searchPage/schoolResult/schoolResult.html';\n            }\n        }\n\n\n\n        /**\n        * _searchByCountry\n        * @description - TODO: Este metodo es temporal, en realidad no deberia\n        * buscar por un pais en particular, sino con la direccion que el user\n        * especifique en el buscador. Dejar este metodo hasta cuando sea necesarios\n        * implementar el buscador completo\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _searchByCountry(country): void {\n            //VARIABLES\n            let self = this;\n\n            if(country == 'Colombia') {\n                let location = {\n                    country: country,\n                    city: 'Medellin',\n                    address: 'Transversal 31Sur #32B-64'\n                };\n                /************************************/\n\n                this.$timeout(function(){\n                    self.$rootScope.$broadcast('PositionCountry', location);\n                });\n            }\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Search Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Students event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to get\n                             students list from server\n            * @event\n            */\n\n            this.$scope.$on('Students', function(event, args) {\n                //Get All Users of this zone\n                self.StudentService.getAllStudents().then(\n                    function(response: Array<app.models.student.Student>) {\n\n                        self.type = 'student';\n                        self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                            response,\n                            'search-map',\n                            {lat: 6.175434,lng: -75.583329},\n                            6\n                        );\n\n                        /*\n                        * Send event to child (MapController) in order to It draws\n                        * each Marker on the Map\n                        */\n                        self.$scope.$broadcast('BuildMarkers', self.mapConfig);\n\n                        self.data = self.FunctionsUtilService.splitToColumns(response, 2);\n                    }\n                );\n            });\n\n\n            /**\n            * Teachers event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to get\n                             teachers list from server\n            * @event\n            */\n\n            this.$scope.$on('Teachers', function(event, args) {\n                //Get All Teachers of this zone\n                self.TeacherService.getAllTeachersByStatus(self.VALIDATED).then(\n                    function(response: app.models.teacher.ITeacherQueryObject) {\n\n                        self.type = 'teacher';\n                        self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                            response.results,\n                            'search-map',\n                            null,\n                            6\n                        );\n\n                        /*\n                        * Send event to child (MapController) in order to It draws\n                        * each Marker on the Map\n                        */\n                        self.$scope.$broadcast('BuildMarkers', self.mapConfig);\n\n                        self.data = self.FunctionsUtilService.splitToColumns(response.results, 2);\n                    }\n                );\n            });\n\n\n            /**\n            * Schools event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to get\n                             schools list from server\n            * @event\n            */\n\n            this.$scope.$on('Schools', function(event, args) {\n                //Get All Schools of this zone\n                self.SchoolService.getAllSchools().then(\n                    function(response: Array<app.models.school.School>) {\n\n                        self.type = 'school';\n                        self.mapConfig = self.FunctionsUtilService.buildMapConfig(\n                            response,\n                            'search-map',\n                            {lat: 6.175434,lng: -75.583329},\n                            6\n                        );\n\n                        /*\n                        * Send event to child (MapController) in order to It draws\n                        * each Marker on the Map\n                        */\n                        self.$scope.$broadcast('BuildMarkers', self.mapConfig);\n\n                        self.data = self.FunctionsUtilService.splitToColumns(response, 2);\n                    }\n                );\n            });\n\n\n            /**\n            * SelectContainer event\n            * @child - MapController\n            * @description - Parent (SearchPageController) receive Child's\n                             event (MapController) in order to selected\n                             specific result container\n            * @event\n            */\n\n            this.$scope.$on('SelectContainer', function(event, args) {\n                //VARIABLES\n                let containerId = '#container-' + args;\n                let containerClasses = document.querySelector(containerId).classList;\n                containerClasses.add('search-result__teacher__block--selected');\n                document.querySelector(containerId).scrollIntoView({ behavior: 'smooth' });\n            });\n\n\n            /**\n            * SearchCountry event\n            * @parent - HeaderController\n            * @description - Parent (HeaderController) send event\n                             (SearchPageController) in order to change map\n                             center position\n            * @event\n            */\n\n            this.$scope.$on('SearchCountry', function(event, args) {\n                self._searchByCountry(args);\n            });\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.searchPage')\n        .controller(SearchPageController.controllerId, SearchPageController);\n\n}\n","/**\n* MaTeacherResult\n* @description - MainApp Teacher Result on SearchPage Directive\n* @example - <ma-teacher-result></ma-teacher-result>\n*/\n\nmodule app.pages.searchPage {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherResult extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaTeacherResult implements ITeacherResult {\n\n        static directiveId = 'maTeacherResult';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = TeacherResultController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        templateUrl: string = 'app/pages/searchPage/teacherResult/teacherResult.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maTeacherResult directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maTeacherResult link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): ITeacherResult {\n            return new MaTeacherResult();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.searchPage')\n        .directive(MaTeacherResult.directiveId, MaTeacherResult.instance);\n\n\n        /*********************************************************/\n        /*                     CONTROLLER                        */\n        /*********************************************************/\n        /**\n        * TeacherResultController\n        * @description - Teacher Result Controller\n        */\n\n        /**********************************/\n        /*           INTERFACES           */\n        /**********************************/\n        interface ITeacherResultController {\n            activate: () => void;\n        }\n\n        interface ITeacherResultForm {\n        }\n\n        /****************************************/\n        /*           CLASS DEFINITION           */\n        /****************************************/\n        export class TeacherResultController implements ITeacherResultController {\n\n            static controllerId = 'mainApp.pages.searchPage.TeacherResultController';\n\n            /**********************************/\n            /*           PROPERTIES           */\n            /**********************************/\n            form: ITeacherResultForm;\n            private _hoverDetail: Array<boolean>;\n            // --------------------------------\n\n\n            /*-- INJECT DEPENDENCIES --*/\n            static $inject = [\n                'mainApp.core.util.FunctionsUtilService',\n                '$uibModal',\n                'dataConfig',\n                '$filter',\n                '$state',\n                '$rootScope'\n            ];\n\n\n            /**********************************/\n            /*           CONSTRUCTOR          */\n            /**********************************/\n            constructor(private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n                        private $uibModal: ng.ui.bootstrap.IModalService,\n                        private dataConfig: IDataConfig,\n                        private $filter: angular.IFilterService,\n                        private $state: ng.ui.IStateService,\n                        private $rootScope: angular.IRootScopeService) {\n                this.init();\n            }\n\n\n            /*-- INITIALIZE METHOD --*/\n            private init() {\n\n                //Init form\n                this.form = {\n\n                };\n\n                //Init hoverDetail array\n                this._hoverDetail = [];\n\n                this.activate();\n            }\n\n            /*-- ACTIVATE METHOD --*/\n            activate(): void {\n                //LOG\n                console.log('teacherResult controller actived');\n            }\n\n\n            /**********************************/\n            /*            METHODS             */\n            /**********************************/\n\n            /**\n            * goToDetails\n            * @description - when user clicked a specific result, go to details\n            * @use - this.goToDetails('2');\n            * @function\n            * @params {string} containerId - entity id (teacher)\n            * @return {void}\n            */\n\n            goToDetails(containerId: string): void {\n                var url = this.$state.href('page.teacherProfilePage', {id: containerId});\n                window.open(url,'_blank');\n            }\n\n\n\n            /**\n            * _assignNativeClass\n            * @description - this method return if teacher is native or not\n            * result (students, teachers, schools, etc)\n            * @use - this._assignNativeClass(languages);\n            * @function\n            * @param {native Array, learn Array and teach Array} languages\n            * teacher languages (native, teach and learn)\n            * @return {boolean} isNative\n            */\n\n            private _assignNativeClass(languages): boolean {\n                let native = languages.native;\n                let teach = languages.teach;\n                let isNative = false;\n\n                for (let i = 0; i < native.length; i++) {\n                    for (let j = 0; j < teach.length; j++) {\n                        if(teach[j] === native[i]) {\n                            isNative = true;\n                        }\n                    }\n                }\n\n                return isNative;\n            }\n\n\n\n            /**\n            * _ratingAverage\n            * @description - take teacher ranking and calculate the rating average\n            * @use - this._ratingAverage(ratingsArray);\n            * @function\n            * @param {Array<Object>} ratingsArr - list of rating objects\n            * @return {number} rating average value\n            */\n            //TODO: Analizar por que puse Array<Object> en vez de Array<Rating>\n            // y solucionar\n            private _ratingAverage(ratingsArr: Array<Object>): number {\n                return this.functionsUtil.teacherRatingAverage(ratingsArr);\n            }\n\n\n\n            /**\n            * _hoverEvent\n            * @description - this method is launched  when user launchs\n            * mouseover/mouseleave event on result container\n            * @use - this._hoverEvent('10', true);\n            * @function\n            * @param {string} id - container result id\n            * @param {boolean} status - mouseover = true / mouseleave = false\n            */\n\n            private _hoverEvent(id: string, status: boolean): void {\n                //VARIABLES\n                let args = {id: id, status: status};\n                this._hoverDetail[id] = status;\n                /*\n                * Send event to child (MapController) in order to It changes icon in\n                * specific Marker on the Map\n                */\n                this.$rootScope.$broadcast('ChangeMarker', args);\n            }\n\n\n        }\n\n        /*-- MODULE DEFINITION --*/\n        angular.module('mainApp.pages.searchPage')\n            .controller(TeacherResultController.controllerId, TeacherResultController);\n\n}\n","/**\n* config()\n* @description - student landing page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.studentLandingPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.studentLandingPage', {\n                url: '/landing/student',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/studentLandingPage/studentLandingPage.html',\n                        controller: 'mainApp.pages.studentLandingPage.StudentLandingPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                data: {\n                    requireLogin: true\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = false;\n                    $rootScope.activeFooter = true;\n                }],\n                params: {\n                    user: null,\n                    id: null\n                }\n            });\n    }\n})();\n","/**\n * StudentLandingPageController\n * @description - Student Landing Page Controller\n */\n\nmodule app.pages.studentLandingPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IStudentLandingPageController {\n        form: IStudentLandingForm;\n        error: IStudentLandingError;\n        activate: () => void;\n    }\n\n    export interface IStudentLandingScope extends angular.IScope {\n\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n    export interface IStudentLandingForm {\n        userData: IUserDataStudentLanding;\n        language: string;\n    }\n\n    export interface IUserDataStudentLanding {\n        name: string;\n        comment: string;\n        email: string;\n    }\n\n    export interface IStudentLandingError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class StudentLandingPageController implements IStudentLandingPageController {\n\n        static controllerId = 'mainApp.pages.studentLandingPage.StudentLandingPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IStudentLandingForm;\n        error: IStudentLandingError;\n        success: boolean;\n        sending: boolean;\n        addComment: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$state',\n                                 'mainApp.core.util.FunctionsUtilService',\n                                 'mainApp.pages.studentLandingPage.StudentLandingPageService'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $state: ng.ui.IStateService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private StudentLandingPageService: app.pages.studentLandingPage.IStudentLandingPageService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //Init form\n            this.form = {\n                userData: {\n                    name: '',\n                    email: '',\n                    comment: ''\n                },\n                language: this.functionsUtil.getCurrentLanguage() || 'en'\n            };\n\n            this.success = false;\n\n            this.sending = false;\n\n            this.error = {\n                message: ''\n            };\n\n            this.addComment = false;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('studentLandingPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n        changeLanguage(): void {\n             this.functionsUtil.changeLanguage(this.form.language);\n        }\n\n        goToEarlyAccessForm(): void {\n            // Scroll to a certain element\n            document.querySelector('.studentLandingPage__early-access-block').scrollIntoView({ behavior: 'smooth' });\n        }\n\n        goDown(): void {\n            // Scroll to a certain element\n            document.querySelector('.studentLandingPage__title-block').scrollIntoView({ behavior: 'smooth' });\n        }\n\n        showCommentsTextarea(): void {\n            event.preventDefault();\n            this.addComment = true;\n        }\n\n        createEarlyAdopter(): void {\n            // VARIABLES\n            let self = this;\n\n            this.sending = true;\n\n            //TODO: Validate If email is not null\n            let userData = {\n                name: this.form.userData.name || '*',\n                email: this.form.userData.email,\n                comment: this.form.userData.comment || '*'\n            };\n\n            this.StudentLandingPageService.createEarlyAdopter(userData).then(\n                function(response) {\n                    if(response.createdAt) {\n                        self.success = true;\n                    } else {\n                        self.sending = false;\n                    }\n                }\n            );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.studentLandingPage')\n        .controller(StudentLandingPageController.controllerId, StudentLandingPageController);\n\n}\n","/**\n * StudentLandingPageService\n * @description - Services related on Student Landing Page Model.\n * @constructor\n * @param {app.core.restApi.IRestApi} restApi - instance rest Api service.\n */\n\nmodule app.pages.studentLandingPage {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IStudentLandingPageService {\n        createEarlyAdopter: (userData) => angular.IPromise<any>;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class StudentLandingPageService implements IStudentLandingPageService {\n\n        static serviceId = 'mainApp.pages.studentLandingPage.StudentLandingPageService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.restApi.restApiService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private restApi: app.core.restApi.IRestApi) {\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * createEarlyAdopter\n        * @description - create early adopter object\n        * @use - this.StudentLandingPageService.createEarlyAdopter();\n        * @function\n        * @return {angular.IPromise<any>} promise - return early adopter object\n        */\n        createEarlyAdopter(userData): angular.IPromise<any> {\n            //VARIABLES\n            let url = 'early';\n\n            return this.restApi.create({url: url}, userData).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    }\n                ).catch(\n                    function(err) {\n                        console.log(err);\n                        return err;\n                    }\n                );\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.studentLandingPage')\n        .service(StudentLandingPageService.serviceId, StudentLandingPageService);\n\n}\n","/**\n* config()\n* @description - teacher landing page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.teacherLandingPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.teacherLandingPage', {\n                url: '/main/teacher',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/teacherLandingPage/teacherLandingPage.html',\n                        controller: 'mainApp.pages.teacherLandingPage.TeacherLandingPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                data: {\n                    requireLogin: false\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = false;\n                    $rootScope.activeFooter = true;\n                }]\n            });\n    }\n})();\n","/**\n * TeacherLandingPageController\n * @description - TeacherLanding Page Controller\n */\n\nmodule app.pages.teacherLandingPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherLandingPageController {\n        activate: () => void;\n    }\n\n    export interface ITeacherLandingScope extends angular.IScope {\n\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n    export interface ITeacherLandingForm {\n        language: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherLandingPageController implements ITeacherLandingPageController {\n\n        static controllerId = 'mainApp.pages.teacherLandingPage.TeacherLandingPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: ITeacherLandingForm;\n        profileFake: app.models.user.Profile;\n        teacherFake: app.models.teacher.Teacher;\n        isAuthenticated: boolean;\n        TEACHER_FAKE_TMPL: string;\n        private _hoverDetail: Array<boolean>;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = ['$scope',\n                                 'mainApp.core.util.FunctionsUtilService',\n                                 'mainApp.auth.AuthService',\n                                 '$state',\n                                 'dataConfig',\n                                 '$uibModal',\n                                 '$rootScope',\n                                 'mainApp.localStorageService'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $scope: angular.IScope,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private AuthService: app.auth.IAuthService,\n            private $state: ng.ui.IStateService,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private localStorage) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Validate if user is Authenticated\n            this.isAuthenticated = this.AuthService.isAuthenticated();\n\n            //Init form\n            this.form = {\n                language: this.functionsUtil.getCurrentLanguage() || 'en'\n            };\n\n            //Init hoverDetail array\n            this._hoverDetail = [];\n\n            // Init teacher fake data\n            this._buildFakeTeacher();\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Teacher Landing Page';\n            this.TEACHER_FAKE_TMPL = 'app/pages/teacherLandingPage/teacherContainerExample/teacherContainerExample.html';\n            //VARIABLES\n            let self = this;\n\n            //LOG\n            console.log('teacherLandingPage controller actived');\n\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeLanguage\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n\n        changeLanguage(): void {\n             this.functionsUtil.changeLanguage(this.form.language);\n        }\n\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @param {ng.IAngularEvent} event - to identify if click come from hero and bottom button page\n        * @return {void}\n        */\n\n        private _openSignUpModal(event): void {\n            let self = this;\n            let hasNextStep = false;\n\n            //If user is logged, go to createTeacher page\n            if(this.isAuthenticated){\n                this.goToCreate();\n                return\n            }\n\n            // get if come from create teacher button\n            if(event.target.id === 'hero-go-to-button') {\n                hasNextStep = true;\n            }\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: hasNextStep\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n        }\n\n\n\n        /**\n        * _openLogInModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openLogInModal();\n        * @function\n        * @return {void}\n        */\n\n        private _openLogInModal(): void {\n\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalLogInTmpl,\n                controller: 'mainApp.components.modal.ModalLogInController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            /* When modal is closed,validate if user is Authenticated in order to\n            show current avatar user */\n            modalInstance.result.then(function () {\n                //Validate if user is Authenticated\n                self.$rootScope.$broadcast('Is Authenticated', false);\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n        }\n\n\n\n        /**\n         * logout\n         * @description - Log out current logged user (call AuthService to revoke token)\n         * @use - this.logout();\n         * @function\n         * @return {void}\n        */\n\n        logout(): void {\n            //VARIABLES\n            let self = this;\n\n            this.AuthService.logout().then(\n                function(response) {\n                    // Success\n                    window.location.reload();\n                },\n                function(response) {\n                    // Error\n                    /* This can occur if connection to server is lost or server is down */\n                    DEBUG && console.log('A problem occured while logging you out.');\n                }\n            );\n        }\n\n\n\n        /**\n        * _buildFakeTeacher\n        * @description - this method build fake teacher container example\n        * @use - this._buildFakeTeacher();\n        * @function\n        * @return {void}\n        */\n\n        private _buildFakeTeacher(): void {\n\n            this.profileFake = new app.models.user.Profile();\n            this.teacherFake = new app.models.teacher.Teacher();\n\n            this.profileFake.UserId = '1';\n            this.profileFake.FirstName = 'Dianne';\n            this.profileFake.BornCity = 'New York';\n            this.profileFake.BornCountry = 'United States';\n            this.profileFake.Avatar = 'https://waysily-img.s3.amazonaws.com/b3605bad-0924-4bc1-98c8-676c664acd9d-example.jpeg';\n            this.profileFake.Languages.Native = ['6'];\n            this.profileFake.Languages.Teach = ['6', '8'];\n            this.profileFake.Languages.Learn = ['8','7'];\n            this.teacherFake.Methodology = 'I can customize the lessons to fit your needs. I teach conversational English to intermediate and advanced students with a focus on grammar, pronunciation, vocabulary and clear fluency and Business English with a focus on formal English in a business setting (role-play), business journal articles, and technical, industry based vocabulary';\n            this.teacherFake.TeacherSince = '2013';\n            this.teacherFake.Type = 'H';\n            this.teacherFake.Immersion.Active = true;\n            this.teacherFake.Price.PrivateClass.Active = true;\n            this.teacherFake.Price.PrivateClass.HourPrice = 20.00;\n            this.teacherFake.Price.GroupClass.Active = true;\n            this.teacherFake.Price.GroupClass.HourPrice = 15.00;\n\n        }\n\n\n\n        /**\n        * _hoverEvent\n        * @description - this method is launched  when user launchs\n        * mouseover/mouseleave event on teacher fake container\n        * @use - this._hoverEvent('1', true);\n        * @function\n        * @param {string} id - container result id\n        * @param {boolean} status - mouseover = true / mouseleave = false\n        */\n\n        private _hoverEvent(id: string, status: boolean): void {\n            //VARIABLES\n            let args = {id: id, status: status};\n            this._hoverDetail[id] = status;\n        }\n\n\n\n        /**\n        * _assignNativeClass\n        * @description - this method return if teacher is native or not\n        * result (students, teachers, schools, etc)\n        * @use - this._assignNativeClass(languages);\n        * @function\n        * @param {native Array, learn Array and teach Array} languages\n        * teacher languages (native, teach and learn)\n        * @return {boolean} isNative\n        */\n\n        private _assignNativeClass(languages): boolean {\n            let native = languages.native;\n            let teach = languages.teach;\n            let isNative = false;\n\n            for (let i = 0; i < native.length; i++) {\n                for (let j = 0; j < teach.length; j++) {\n                    if(teach[j] === native[i]) {\n                        isNative = true;\n                    }\n                }\n            }\n\n            return isNative;\n        }\n\n\n\n        /**\n        * goToCreate\n        * @description - go to add/create new teacher\n        * @use - this._buildFakeTeacher();\n        * @function\n        * @return {void}\n        */\n\n        goToCreate(): void {\n            //VARIABLES\n            // params object\n            let params = {\n                type: 'new'\n            };\n            this.$state.go('page.createTeacherPage.start',  params, {reload: true});\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Landing Page to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Is Authenticated event\n            * @description - Parent (LandingPageController) receive Child's\n                             event in order to know if user is authenticated\n            * @event\n            */\n            this.$scope.$on('Is Authenticated', function(event, args) {\n                //Validate if user is Authenticated\n                self.isAuthenticated = self.AuthService.isAuthenticated();\n                // If user is authenticated, go to create teacher process\n                if(self.isAuthenticated && args) {\n                    self.goToCreate();\n                }\n            });\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.teacherLandingPage')\n        .controller(TeacherLandingPageController.controllerId, TeacherLandingPageController);\n\n}\n","/**\n* config()\n* @description - teacher profile page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.teacherProfilePage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.teacherProfilePage', {\n                url: '/teachers/show/:id',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/teacherProfilePage/teacherProfilePage.html',\n                        controller: 'mainApp.pages.teacherProfilePage.TeacherProfilePageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                data: {\n                    requireLogin: false\n                },\n                params: {\n                    id: null\n                },\n                onEnter: ['$rootScope', function ($rootScope) {\n                    // Show/Hide header & footer\n                    $rootScope.activeHeader = true;\n                    $rootScope.activeFooter = true;\n                }]\n            });\n    }\n})();\n","/**\n * TeacherProfilePageController\n * @description - Teacher Profile Page Controller\n */\n\nmodule app.pages.teacherProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ITeacherProfilePageController {\n        activate: () => void;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface ITeacherParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class TeacherProfilePageController implements ITeacherProfilePageController {\n\n        static controllerId = 'mainApp.pages.teacherProfilePage.TeacherProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        mapConfig: components.map.IMapConfig;\n        nativeTooltipOptions: app.core.interfaces.ITooltipOptions;\n        data: app.models.teacher.Teacher;\n        loading: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.teacher.TeacherService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$state',\n            '$stateParams',\n            '$filter'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private TeacherService: app.models.teacher.ITeacherService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: ITeacherParams,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init profile teacher data\n            this.data = new app.models.teacher.Teacher();\n\n            //Init loading\n            this.loading = true;\n\n            //Init native tooltip\n            this._initNativeTooltip();\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Teacher Profile Page';\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('teacherProfilePage controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n\n            // Get Teacher information\n            this.TeacherService.getTeacherById(this.$stateParams.id).then(\n                function(response) {\n                    self.data = new app.models.teacher.Teacher(response);\n                    self.mapConfig = self.functionsUtil.buildMapConfig(\n                        [\n                            {\n                                id: self.data.Profile.Location.Position.Id,\n                                location: {\n                                    position: {\n                                        lat: parseFloat(self.data.Profile.Location.Position.Lat),\n                                        lng: parseFloat(self.data.Profile.Location.Position.Lng)\n                                    }\n                                }\n                            }\n                        ],\n                        'location-circle-map',\n                        {lat: parseFloat(self.data.Profile.Location.Position.Lat), lng: parseFloat(self.data.Profile.Location.Position.Lng)},\n                        null\n                    );\n                    self.loading = false;\n                }\n            );\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * _initNativeTooltip\n        * @description - this method create a default Native Tooltip Option.\n        * @use - this._initNativeTooltip();\n        * @function\n        * @return {void}\n        */\n\n        private _initNativeTooltip(): void {\n            this.nativeTooltipOptions = {\n                placement: 'top',\n                animation: false,\n                class: 'ma-tooltip ma-tooltip--primary ma-tooltip--default'\n            };\n        }\n\n        /**\n        * goToConfirm\n        * @description - go to book a class with current teacher\n        * @use - this.goToConfirm();\n        * @function\n        * @return {void}\n        */\n\n        goToConfirm (): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Book a Class';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL, {\n                \"teacher_id\": this.data.Id,\n                \"teacher_name\": this.data.Profile.FirstName + ' ' + this.data.Profile.LastName\n            });\n\n            var url = 'https://waysily.typeform.com/to/NDPRAb';\n            window.open(url,'_blank');\n        }\n\n\n        /**\n        * _assignNative\n        * @description - this method create a match between native language and\n        * teach language in order to mark it as a Native languages\n        * @use - this._assignNative(language);\n        * @function\n        * @param {string} language - current language on the ng-repeat loop\n        * @return {boolean} isNativeOfThisLanguage - He/She is native of this\n        * language\n        */\n\n        private _assignNative(language: string): boolean {\n            let native = this.data.Profile.Languages.Native;\n            let isNativeOfThisLanguage = false;\n\n            for (let i = 0; i < native.length; i++) {\n                if(language === native[i]) {\n                    isNativeOfThisLanguage = true;\n                    break;\n                }\n            }\n\n            return isNativeOfThisLanguage;\n        }\n\n\n\n        /**\n        * _assignNativeTooltip\n        * @description - this method create a tooltip on teacher native language\n        * @use - this._assignNativeTooltip(language);\n        * @function\n        * @param {string} language - current language on the ng-repeat loop\n        * @return {boolean} tooltipText - return tooltip text\n        */\n\n        private _assignNativeTooltip(language: string): string {\n            //CONSTANTS\n            const TOOLTIP_TEXT = this.$filter('translate')('%profile.teacher.native.lang.tooltip.text');\n            //VARIABLES\n            let firstName = this.data.Profile.FirstName;\n            let tooltipText = null;\n            let isNative = this._assignNative(language);\n\n            if(isNative) {\n                tooltipText = firstName + ' ' + TOOLTIP_TEXT;\n            }\n            return tooltipText;\n        }\n\n\n\n        /**\n        * _ratingTotalAverage\n        * @description - Calculate teacher rating average based on a ratings list given\n        * @use - this._ratingTotalAverage(ratingsArray);\n        * @function\n        * @param {Array<Object>} ratingsArr - list of rating objects\n        * @return {number} average - average value\n        */\n\n        private _ratingTotalAverage(ratingsArr: Array<Object>): number {\n            return this.functionsUtil.teacherRatingAverage(ratingsArr);\n        }\n\n\n\n        /**\n        * _ratingUnitAverage\n        * @description - Calculate teacher rating average per each\n        * criteria (methodology, communication, teaching)\n        * @use - this._ratingUnitAverage(language);\n        * @function\n        * @param {Array<Object>} ratingsArr - list of rating objects\n        * @return {number} average - average of type of criteria\n        */\n\n        private _ratingUnitAverage(ratingsArr: Array<Object>, type): number {\n            //VARIABLES\n            let average = 0;\n            let averageArr = [];\n            let ratings: Array<app.models.teacher.Rating> = [];\n\n            for (let i = 0; i < ratingsArr.length; i++) {\n                ratings.push(new app.models.teacher.Rating(ratingsArr[i]));\n                switch(type) {\n                    case 'methodology':\n                        averageArr.push(ratings[i].MethodologyValue);\n                        break;\n                    case 'communication':\n                        averageArr.push(ratings[i].CommunicationValue);\n                        break;\n                    case 'teaching':\n                        averageArr.push(ratings[i].TeachingValue);\n                        break;\n                }\n\n            }\n\n            average = this.functionsUtil.averageNumbersArray(averageArr);\n\n            return average;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.teacherProfilePage')\n        .controller(TeacherProfilePageController.controllerId, TeacherProfilePageController);\n\n}\n","/**\n* config()\n* @description - user inbox details page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.userInboxDetailsPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.userInboxDetailsPage', {\n                url: '/users/:userId/inbox/:messageId',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/userInboxDetailsPage/userInboxDetailsPage.html',\n                        controller: 'mainApp.pages.userInboxDetailsPage.UserInboxDetailsPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    userId: '123',\n                    messageId: '1234'\n                }\n            });\n    }\n})();\n","/**\n * UserInboxDetailsPageController\n * @description - User Inbox Details Page Controller\n */\n\nmodule app.pages.userInboxDetailsPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IUserInboxDetailsPageController {\n        form: IUserInboxDetailsForm;\n        error: IUserInboxDetailsError;\n        activate: () => void;\n    }\n\n    interface IUserInboxDetailsScope extends angular.IScope {\n\n    }\n\n    interface IUserInboxDetailsForm {\n\n    }\n\n    interface IUserInboxDetailsError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserInboxDetailsPageController implements IUserInboxDetailsPageController {\n\n        static controllerId = 'mainApp.pages.userInboxDetailsPage.UserInboxDetailsPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IUserInboxDetailsForm;\n        error: IUserInboxDetailsError;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            '$state',\n            '$scope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $state: ng.ui.IStateService,\n                    private $scope: IUserInboxDetailsScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init form\n            this.form = {};\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('userInboxDetailsPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.userInboxDetailsPage')\n        .controller(UserInboxDetailsPageController.controllerId,\n                    UserInboxDetailsPageController);\n\n}\n","/**\n* config()\n* @description - user inbox page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.userInboxPage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.userInboxPage', {\n                url: '/users/:userId/inbox',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/userInboxPage/userInboxPage.html',\n                        controller: 'mainApp.pages.userInboxPage.UserInboxPageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    userId: '123'\n                }\n            });\n    }\n})();\n","/**\n * UserInboxPageController\n * @description - User Inbox Page Controller\n */\n\nmodule app.pages.userInboxPage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IUserInboxPageController {\n        form: IUserInboxForm;\n        error: IUserInboxError;\n        activate: () => void;\n    }\n\n    interface IUserInboxScope extends angular.IScope {\n\n    }\n\n    interface IUserInboxForm {\n\n    }\n\n    interface IUserInboxError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserInboxPageController implements IUserInboxPageController {\n\n        static controllerId = 'mainApp.pages.userInboxPage.UserInboxPageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IUserInboxForm;\n        error: IUserInboxError;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            '$state',\n            '$scope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $state: ng.ui.IStateService,\n                    private $scope: IUserInboxScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init form\n            this.form = {};\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('userInboxPage controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n        goToDetail(): void {\n            this.$state.go('page.userInboxDetailsPage');\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.userInboxPage')\n        .controller(UserInboxPageController.controllerId,\n                    UserInboxPageController);\n\n}\n","/**\n* config()\n* @description - user profile page config file\n*/\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.pages.userProfilePage', [])\n        .config(config);\n\n\n    function config($stateProvider: angular.ui.IStateProvider) {\n\n        $stateProvider\n            .state('page.userProfilePage', {\n                url: '/users/show/:id',\n                views: {\n                    'container': {\n                        templateUrl: 'app/pages/userProfilePage/userProfilePage.html',\n                        controller: 'mainApp.pages.userProfilePage.UserProfilePageController',\n                        controllerAs: 'vm'\n                    }\n                },\n                parent: 'page',\n                params: {\n                    user: null,\n                    id: null\n                }\n            });\n    }\n})();\n","/**\n * UserProfilePageController\n * @description - User Profile Page Controller\n */\n\nmodule app.pages.userProfilePage {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IUserProfilePageController {\n        form: IUserProfileForm;\n        error: IUserProfileError;\n        activate: () => void;\n    }\n\n    export interface IUserProfileScope extends angular.IScope {\n        date: any;\n        datetimepickerConfig: any;\n    }\n\n    /********************************/\n    /*    STATEPARAMS INTERFACES    */\n    /********************************/\n    export interface IParams extends ng.ui.IStateParamsService {\n        id: string;\n    }\n\n    export interface IUserProfileForm {\n        username: string;\n        email: string;\n    }\n\n    export interface IUserProfileError {\n        message: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class UserProfilePageController implements IUserProfilePageController {\n\n        static controllerId = 'mainApp.pages.userProfilePage.UserProfilePageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IUserProfileForm;\n        error: IUserProfileError;\n        mapConfig: components.map.IMapConfig;\n        data: app.models.user.Profile;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        public static $inject = [\n            'mainApp.models.user.UserService',\n            '$state',\n            '$stateParams',\n            '$filter',\n            '$scope'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private UserService: app.models.user.IUserService,\n            private $state: ng.ui.IStateService,\n            private $stateParams: IParams,\n            private $filter: angular.IFilterService,\n            private $scope: IUserProfileScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init user data\n            this.data = null;\n\n            //Init form\n            this.form = {\n                username: '',\n                email: ''\n            };\n\n            this.error = {\n                message: ''\n            };\n\n            // init map config\n            this.mapConfig = {\n                type: 'location-map',\n                data: null\n            };\n\n\n            this.$scope.date;\n\n            //date time picker Config\n            this.$scope.datetimepickerConfig = {\n                minView: 'hour',\n                dropdownSelector: '.my-toggle-select'\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('userProfilePage controller actived');\n            // Get User profile information\n            this.UserService.getUserProfileById(this.$stateParams.id).then(\n                function(response) {\n                    self.data = new app.models.user.Profile(response);\n                }\n            );\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        onTimeSet (newDate, oldDate): void {\n            console.log(newDate);\n            console.log(oldDate);\n        }\n\n        beforeRender ($view, $dates, $leftDate, $upDate, $rightDate): void {\n            var index = Math.floor(Math.random() * $dates.length);\n            $dates[index].selectable = false;\n        }\n\n        goToConfirm (): void {\n            //TODO: Buscar la forma de poder recargar la pagina cuando sea\n            // necesario ya que muchas veces voy a tener que limpiar todo\n            this.$state.go('page.meetingConfirmationPage');\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.pages.userProfilePage')\n        .controller(UserProfilePageController.controllerId, UserProfilePageController);\n\n}\n","/**\n * RegisterService\n * @description - A service for handling user registration.\n */\n\nmodule app.register {\n\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IRegisterService {\n        register: (userData: IRegisterUserData) => angular.IPromise<any>;\n        checkEmail:(email) => angular.IPromise<any>;\n        checkUsername:(username) => angular.IPromise<any>;\n\n    }\n\n    export interface IRegisterUserData {\n        username: string;\n        email: string;\n        first_name: string;\n        last_name: string;\n        password: string;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class RegisterService implements IRegisterService {\n\n        static serviceId = 'mainApp.register.RegisterService';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        REGISTER_URI: string;\n        REGISTER_CHECK_EMAIL_URI: string;\n        REGISTER_CHECK_USERNAME_URI: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$q',\n            'mainApp.core.restApi.restApiService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $q: angular.IQService,\n            private restApi: app.core.restApi.IRestApi ) {\n            //LOG\n            DEBUG && console.log('register service instanced');\n\n            //CONSTANTS\n            this.REGISTER_URI = 'register';\n            this.REGISTER_CHECK_EMAIL_URI = 'register/check-email';\n            this.REGISTER_CHECK_USERNAME_URI = 'register/check-username';\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * checkEmail\n        * @description - check if email already exists on DB\n        * @use - this.RegisterService.checkEmail();\n        * @function\n        * @param {string} email - user's email\n        * @return {angular.IPromise<any>} promise\n        */\n\n        checkEmail(email): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.REGISTER_CHECK_EMAIL_URI;\n            let deferred = this.$q.defer();\n            let data = {\n                email: email\n            };\n\n            this.restApi.create({url: url}, data).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n\n                    function(error) {\n                        DEBUG && console.error(error);\n                        /* We can not reject request because in some cases Status\n                        400 is success for us */\n                        deferred.resolve(error);\n                    }\n                );\n\n            return deferred.promise;\n\n        }\n\n\n\n        /**\n        * checkUsername\n        * @description - check if username already exists on DB\n        * @use - this.RegisterService.checkUsername();\n        * @function\n        * @param {string} username - user's username\n        * @return {angular.IPromise<any>} promise\n        */\n\n        checkUsername(username): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.REGISTER_CHECK_USERNAME_URI;\n\n            return this.restApi.create({url: url}, username).$promise\n                .then(\n                    function(data) {\n                        return data;\n                    },\n\n                    function(error) {\n                        DEBUG && console.log(error);\n                        return error;\n                    }\n                );\n        }\n\n\n\n        /**\n        * register\n        * @description - Tried to create user account on DB\n        * @use - this.RegisterService.register();\n        * @function\n        * @param {IRegisterUserData} userData - user basic data to create account\n        * (username, password, first_name, last_name, email)\n        * @return {angular.IPromise<any>} promise\n        */\n\n        register(userData): angular.IPromise<any> {\n            //VARIABLES\n            let url = this.REGISTER_URI;\n            let deferred = this.$q.defer();\n\n            this.restApi.create({url: url}, userData).$promise\n                .then(\n                    function(response) {\n                        deferred.resolve(response);\n                    },\n\n                    function(error) {\n                        DEBUG && console.error(error);\n                        deferred.reject(error);\n                    }\n                );\n\n            return deferred.promise;\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.register', [])\n        .service(RegisterService.serviceId, RegisterService);\n\n}\n","/**\n* config()\n* @description - float Message Bar config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.components.floatMessageBar', [])\n        .config(config);\n\n    function config() {}\n})();\n","/**\n* MaFloatMessageBar\n* @description - MainApp FloatMessageBar Directive\n* @example - <ma-float-message-bar></ma-float-message-bar>\n*/\n\nmodule components.floatMessageBar {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IFloatMessageBar extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaFloatMessageBar implements IFloatMessageBar {\n\n        static directiveId = 'maFloatMessageBar';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = FloatMessageBarController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        scope = true;\n        templateUrl: string = 'components/floatMessageBar/floatMessageBar.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maFloatMessageBar directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maFloatMessageBar link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IFloatMessageBar {\n            return new MaFloatMessageBar();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.floatMessageBar')\n        .directive(MaFloatMessageBar.directiveId, MaFloatMessageBar.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n\n    /**\n    * FloatMessageBarController\n    * @description - FloatMessageBar Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IFloatMessageBarController {\n        activate: () => void;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class FloatMessageBarController implements IFloatMessageBarController {\n\n        static controllerId = 'mainApp.components.floatMessageBar.FloatMessageBarController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'dataConfig',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$state'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n                    private $filter: angular.IFilterService,\n                    private $scope: angular.IScope,\n                    private $rootScope: angular.IRootScopeService,\n                    private $state: ng.ui.IStateService) {\n            this.init();\n        }\n\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('floatMessageBar controller actived');\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * FIXME: Este metodo ya no funciona igual desde que agregamos el SignUp,\n        * es necesario arreglarlo ya que no esta llamando al modalSignUp sino me\n        * esta llevando de inmediato a crear un profesor, sin haber pasado antes\n        * por signUp.\n        * _join\n        * @description - \n        * @use - this._assignNativeTooltip(language);\n        * @function\n        * @param {string} language - current language on the ng-repeat loop\n        * @return {boolean} tooltipText - return tooltip text\n        */\n\n        _join(): void {\n            //CONSTANTS\n            const CREATE_TEACHER = 'page.createTeacherPage.start';\n            const CLICK_MIXPANEL = 'Click: Join as a teacher from floatMessageBar';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n            // GO TO NEXT STEP\n            this.$state.go(CREATE_TEACHER, {reload: true});\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.floatMessageBar')\n        .controller(FloatMessageBarController.controllerId, FloatMessageBarController);\n\n}\n","/**\n* config()\n* @description - footer config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.components.footer', [])\n        .config(config);\n\n    function config() {}\n})();\n","/**\n* MaFooter\n* @description - MainApp Footer Directive\n* @example - <ma-footer></ma-footer>\n*/\n\nmodule components.footer {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IFooter extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaFooter implements IFooter {\n\n        static directiveId = 'maFooter';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = FooterController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        templateUrl: string = 'components/footer/footer.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maFooter directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maFooter link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IFooter {\n            return new MaFooter();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.footer')\n        .directive(MaFooter.directiveId, MaFooter.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * FooterController\n    * @description - Footer Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IFooterController {\n        activate: () => void;\n    }\n\n    interface IFooterForm {\n        language: app.core.interfaces.IKeyValue;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class FooterController implements IFooterController {\n\n        static controllerId = 'mainApp.components.footer.FooterController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IFooterForm;\n        assignFlag: string;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.util.FunctionsUtilService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService\n        ) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //VARIABLES\n            let currentLanguageCode = this.functionsUtil.getCurrentLanguage() || 'en';\n            let languageLabel = '%header.lang.options.'+ currentLanguageCode +'.text';\n            //Init form\n            this.form = {\n                language: {\n                    key: currentLanguageCode,\n                    value: languageLabel\n                }\n            };\n\n            //Init flag class\n            this.assignFlag = 'ma-flag--default--flag-' + this.form.language.key;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('footer controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * changeLanguage\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n\n        changeLanguage(code): void {\n            //VARIABLES\n            let self = this;\n\n            this.functionsUtil.changeLanguage(code).then(\n                function(key) {\n                    if(typeof key === 'string') {\n                        self.form.language.key = code;\n                        self.form.language.value = '%header.lang.options.' + code + '.text';\n                        self.assignFlag = 'ma-flag--default--flag-' + code;\n                        window.location.reload();\n                    }\n                }\n            );\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.footer')\n        .controller(FooterController.controllerId, FooterController);\n\n}\n","/**\n* config()\n* @description - header config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.components.header', [])\n        .config(config);\n\n    function config() {}\n})();\n","/**\n* MaHeader\n* @description - MainApp Header Directive\n* @example - <ma-header></ma-header>\n*/\n\nmodule components.header {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IHeader extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaHeader implements IHeader {\n\n        static directiveId = 'maHeader';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = HeaderController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        scope = true;\n        templateUrl: string = 'components/header/header.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maHeader directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maHeader link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IHeader {\n            return new MaHeader();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.header')\n        .directive(MaHeader.directiveId, MaHeader.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * HeaderController\n    * @description - Header Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IHeaderController {\n        activate: () => void;\n        slideNavMenu: () => void;\n    }\n\n    interface IHeaderForm {\n        whereTo: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class HeaderController implements IHeaderController {\n\n        static controllerId = 'mainApp.components.header.HeaderController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        private _slideout: boolean;\n        form: IHeaderForm;\n        isAuthenticated: boolean;\n        isTeacher: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.auth.AuthService',\n            '$uibModal',\n            'dataConfig',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$state',\n            'mainApp.localStorageService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n                    private AuthService: app.auth.IAuthService,\n                    private $uibModal: ng.ui.bootstrap.IModalService,\n                    private dataConfig: IDataConfig,\n                    private $filter: angular.IFilterService,\n                    private $scope: angular.IScope,\n                    private $rootScope: app.core.interfaces.IMainAppRootScope,\n                    private $state: ng.ui.IStateService,\n                    private localStorage) {\n            this.init();\n        }\n\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n\n            //Validate if user is Authenticated\n            this.isAuthenticated = this.AuthService.isAuthenticated();\n\n            //Validate if user is teacher\n            if(this.$rootScope.profileData) {\n                this.isTeacher = this.$rootScope.profileData.IsTeacher;\n            }\n\n            //Init form\n            this.form = {\n                whereTo: this.$filter('translate')('%header.search.placeholder.text')\n            };\n\n            this._slideout = false;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('header controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * slideNavMenu method\n        * @description Show or Hide Nav Menu when user press 'menu' button\n        * (small devices)\n        */\n\n        slideNavMenu(): void {\n            this._slideout = !this._slideout;\n        }\n\n\n\n        /**\n         * logout\n         * @description - Log out current logged user (call AuthService to revoke token)\n         * @use - this.logout();\n         * @function\n         * @return {void}\n        */\n\n        logout(): void {\n            //VARIABLES\n            let self = this;\n\n            this.AuthService.logout().then(\n                function(response) {\n                    // Success\n                    window.location.reload();\n                },\n                function(response) {\n                    // Error\n                    /* This can occur if connection to server is lost or server is down */\n                    DEBUG && console.log('A problem occured while logging you out.');\n                }\n            );\n        }\n\n\n\n        /**\n        * search\n        * @description - TODO\n        * @use - this.search('Colombia');\n        * @function\n        * @return {void}\n        */\n\n        search(country): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Search Teacher on SearchBox';\n            //VARIABLES\n            //Get current state\n            let currentState = this.$state.current.name;\n            this.form.whereTo = country;\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            if(currentState !== 'page.searchPage') {\n                this.$state.go('page.searchPage', {country: country});\n            } else {\n                this.$rootScope.$broadcast('SearchCountry', country);\n            }\n\n        }\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n\n        private _openSignUpModal(): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n        }\n\n\n\n        /**\n        * _openLogInModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openLogInModal();\n        * @function\n        * @return {void}\n        */\n        private _openLogInModal(): void {\n\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalLogInTmpl,\n                controller: 'mainApp.components.modal.ModalLogInController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            /* When modal is closed,validate if user is Authenticated in order to\n            show current avatar user */\n            modalInstance.result.then(function () {\n                //Validate if user is Authenticated\n                self.$rootScope.$broadcast('Is Authenticated');\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes HeaderController to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Is Authenticated event\n            * @description - Parent (HeaderController) receive Child's\n                             event in order to know if user is authenticated\n            * @event\n            */\n            this.$scope.$on('Is Authenticated', function(event, args) {\n                //Validate if user is Authenticated\n                self.isAuthenticated = self.AuthService.isAuthenticated();\n                //Validate if user is teacher\n                if(self.$rootScope.profileData) {\n                    self.isTeacher = self.$rootScope.profileData.IsTeacher;\n                }\n            });\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.header')\n        .controller(HeaderController.controllerId, HeaderController);\n\n}\n","/**\n* config()\n* @description - map config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.components.map', [])\n        .config(config);\n\n    function config() {}\n})();\n","/**\n* MaMap\n* @description - MainApp Map Directive\n* @example - <ma-search-map></ma-search-map>\n*/\n\nmodule components.map {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IMap extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaMap implements IMap {\n\n        static directiveId = 'maMap';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = MapController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        transclude: true;\n        scope = {\n            mapConfig: '='\n        };\n        templateUrl: string = 'components/map/map.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maMap directive constructor');\n        }\n\n        link($scope: IMapScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maMap link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IMap {\n            return new MaMap();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.map')\n        .directive(MaMap.directiveId, MaMap.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * MapController\n    * @description - Map Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IMapController {\n        activate: () => void;\n    }\n\n    interface IMapForm {\n        position: IPosition;\n    }\n\n    export interface IPosition {\n        lat: number;\n        lng: number;\n    }\n\n    interface IMapScope extends angular.IScope {\n        options: IMapOptions;\n        modalOptions: IMapOptions;\n        mapConfig: IMapConfig;\n        mapId: string;\n    }\n\n    interface IMapOptions extends google.maps.MapOptions {\n        center: any;\n        zoom: number;\n        mapTypeControl: boolean;\n        zoomControl: boolean;\n        zoomControlOptions: any;\n        streetViewControl: boolean;\n    }\n\n    export interface IMapConfig {\n        type: string;\n        data: IMapDataSet;\n    }\n\n    export interface IMapDataSet {\n        position: IPosition;\n        markers: Array<IMapMarkers>;\n        zoom: number;\n    }\n\n    export interface IMapMarkers extends google.maps.Marker{\n        id: string;\n        position: IPosition;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class MapController implements IMapController {\n\n        static controllerId = 'mainApp.components.map.MapController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        private _map: google.maps.Map;\n        private _draggable: boolean;\n        private _infoWindow: google.maps.InfoWindow;\n        private _markers: Array<IMapMarkers>;\n        form: IMapForm;\n        mapId: string;\n        mapConfig: IMapConfig;\n        RED_PIN: string;\n        POSITION_PIN: string;\n        GREEN_PIN: string;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$scope', '$rootScope', '$timeout'];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(public $scope: IMapScope,\n                    public $rootScope: app.core.interfaces.IMainAppRootScope,\n                    private $timeout: angular.ITimeoutService) {\n            this.init();\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //CONSTANTS\n            this.RED_PIN = 'assets/images/red-pin.png';\n            this.POSITION_PIN = 'assets/images/red-pin.png';\n            this.GREEN_PIN = 'assets/images/green-pin.png';\n            /*********************************/\n            //VARIABLES\n            let self = this;\n            /********************/\n\n            //init properties\n            this._map;\n            this._draggable = false;\n            this.mapId = 'ma-map-' + Math.floor((Math.random() * 100) + 1);\n            this._infoWindow = null;\n            this._markers = [];\n            this.$scope.options = null;\n\n            //default map options\n            switch(this.mapConfig.type) {\n                case 'search-map':\n                    this._searchMapBuilder();\n                break;\n                case 'drag-maker-map':\n                    this._dragMarkerMapBuilder();\n                break;\n                case 'location-circle-map':\n                    this._locationCircleMapBuilder();\n                break;\n            }\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('map controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * _searchMapBuilder\n        * @description - this method builds the Map on Search Page\n        * @use - this._searchMapBuilder();\n        * @function\n        * @return {void}\n        */\n\n        private _searchMapBuilder(): void {\n            //VARIABLES\n            let self = this;\n            let zoom = this.mapConfig.data.zoom || 16;\n            let center = this.mapConfig.data.position;\n            this._draggable = false;\n            /********************/\n\n            //Map options\n            this.$scope.options = {\n                center: new google.maps.LatLng(center.lat, center.lng),\n                zoom: zoom,\n                mapTypeControl: false,\n                zoomControl: true,\n                streetViewControl: false,\n                scrollwheel: false,\n                zoomControlOptions: {\n                    position: google.maps.ControlPosition.TOP_LEFT\n                }\n            };\n\n            // Init map\n            if (this._map === void 0) {\n\n                this.$timeout(function() {\n\n                    //Init Map\n                    self._map = new google.maps.Map(\n                        document.getElementById(self.mapId),\n                        self.$scope.options\n                    );\n\n                    //Create Filter Buttons (TODO: Descomentar cuando habilitemos\n                    // mostrar profesores, escuelas y estudiantes)\n                    //self._createFilterButtons();\n\n                    //Set markers\n                    for (let i = 0; i < self.mapConfig.data.markers.length; i++) {\n                        let marker = self.mapConfig.data.markers[i];\n                        self._setMarker(marker.id,\n                                        new google.maps.LatLng(marker.position.lat, marker.position.lng),\n                                        self.GREEN_PIN);\n                    }\n\n                });\n            }\n\n        }\n\n\n\n        /**\n        * _dragMarkerMapBuilder\n        * @description - this method builds the draggable marker on Map\n        * @use - this._dragMarkerMapBuilder();\n        * @function\n        * @return {void}\n        */\n\n        _dragMarkerMapBuilder(): void {\n            //VARIABLES\n            let self = this;\n            let zoom = this.mapConfig.data.zoom || 17;\n            let center = this.mapConfig.data.position;\n            this._draggable = true;\n            /********************/\n\n            //Map options\n            this.$scope.options = {\n                center: new google.maps.LatLng(center.lat, center.lng),\n                zoom: zoom,\n                mapTypeControl: false,\n                zoomControl: true,\n                streetViewControl: false,\n                scrollwheel: false,\n                zoomControlOptions: {\n                    position: google.maps.ControlPosition.TOP_LEFT\n                }\n            };\n\n            // Init map\n            if (this._map === void 0) {\n\n                this.$timeout(function() {\n\n                    //Init Map\n                    self._map = new google.maps.Map(\n                        document.getElementById(self.mapId),\n                        self.$scope.options\n                    );\n\n                    //set markers\n                    for (let i = 0; i < self.mapConfig.data.markers.length; i++) {\n                        let marker = self.mapConfig.data.markers[i];\n                        self._setMarker(marker.id,\n                                        new google.maps.LatLng(marker.position.lat, marker.position.lng),\n                                        self.POSITION_PIN);\n                    }\n\n                });\n            }\n\n        }\n\n\n\n        /**\n        * _locationCircleMapBuilder\n        * @description - this method builds the location circle Map\n        * @use - this._locationCircleMapBuilder();\n        * @function\n        * @return {void}\n        */\n\n        _locationCircleMapBuilder(): void {\n            //VARIABLES\n            let self = this;\n            let zoom = this.mapConfig.data.zoom || 16;\n            let center = this.mapConfig.data.position;\n            let circle_strokeColor = '#ff5a5f';\n           let circle_strokeOpacity = 0.8;\n           let circle_strokeWeight = 2;\n           let circle_fillColor = '#ff5a5f';\n           let circle_fillOpacity = 0.35;\n           let circle_center = {\n               lat: 6.1739743,\n               lng: -75.5822414\n           };\n           let circle_radius = 140;\n            this._draggable = false;\n            /********************/\n\n            //Map options\n            this.$scope.options = {\n                center: new google.maps.LatLng(center.lat, center.lng),\n                zoom: zoom,\n                mapTypeControl: false,\n                zoomControl: true,\n                streetViewControl: false,\n                scrollwheel: false,\n                zoomControlOptions: {\n                    position: google.maps.ControlPosition.TOP_RIGHT\n                }\n            };\n\n            // Init map\n            if (this._map === void 0) {\n\n                this.$timeout(function() {\n\n                    //Init Map\n                    self._map = new google.maps.Map(\n                        document.getElementById(self.mapId),\n                        self.$scope.options\n                    );\n\n                    //Init Circle\n                    let circle = new google.maps.Circle ({\n                        strokeColor: circle_strokeColor,\n                        strokeOpacity: circle_strokeOpacity,\n                        strokeWeight: circle_strokeWeight,\n                        fillColor: circle_fillColor,\n                        fillOpacity: circle_fillOpacity,\n                        map: self._map,\n                        center: new google.maps.LatLng(center.lat, center.lng),\n                        radius: circle_radius\n                    });\n\n                });\n            }\n\n        }\n\n\n\n        /**\n        * _setMarker\n        * @description - this method assigns every Marker on Map\n        * @use - this._setMarker('1',\n                                 new google.maps.LatLng(34.98, 12.92),\n                                 'assets/images/meeting-point.png');\n        * @function\n        * @params {string} id - entity id\n        * @params {google.maps.LatLng} position google object - position on the map\n        * @params {string} icon - icon image route (i.e. 'assets/images/meeting-point.png')\n        * @return {void}\n        */\n\n        private _setMarker (id: string, position: google.maps.LatLng,\n                            icon: string): void {\n            // VARIABLES\n            let self = this;\n            let marker;\n            let markerOptions = {\n                id: id,\n                position: position,\n                map: this._map,\n                icon: icon,\n                draggable: this._draggable\n            };\n            /********************/\n\n            // create marker object\n            marker = new google.maps.Marker(markerOptions);\n\n            // add marker to markers array\n            this._markers.push(marker);\n\n            //center map on last marker created on the map\n            //TODO: Cuando lo comento se rompe el mapa de location en teacherLocationSection\n            // Buscar una solucion optima para no tener que centrar el marker aqui\n            if (this._map) {\n                this._map.setCenter(position);\n            }\n\n            // If marker is draggable\n            if(this._draggable) {\n                // Get position of Marker draggable\n                google.maps.event.addListener(marker, 'dragend', function (event) {\n                    let position = {\n                        lng: this.getPosition().lng(),\n                        lat: this.getPosition().lat()\n                    };\n                    self.$scope.$emit('Position', position);\n                });\n            }\n\n            // If the map is 'search-map' type\n            if(this.mapConfig.type === 'search-map') {\n\n                // Add click event\n                google.maps.event.addListener(marker, 'click', function (event) {\n                    //Change marker\n                    for (let i = 0; i < self._markers.length; i++) {\n                        if(self._markers[i].id === marker.id) {\n                            self._markers[i].setIcon(self.GREEN_PIN);\n                        } else {\n                            self._markers[i].setIcon(self.RED_PIN);\n                        }\n                    }\n                    //Emit event to parent in order to selected result container\n                    self.$scope.$emit('SelectContainer', marker.id);\n                });\n\n            }\n\n        }\n\n\n\n        /**\n        * _removeMarkers\n        * @description - this method remove all markers on Map\n        * @use - this._removeMarkers();\n        * @function\n        * @return {void}\n        */\n\n        private _removeMarkers(): void {\n            for (let i = 0; i < this._markers.length; i++) {\n                this._markers[i].setMap(null);\n            }\n        }\n\n\n        /**\n        * _createFilterButtons\n        * @description - this method builds every filter button on the Map\n        * @use - this._createFilterButtons();\n        * @function\n        * @return {void}\n        */\n\n        private _createFilterButtons(): void {\n            let buttons = ['Students', 'Teachers', 'Schools'];\n\n            for (let i = 0; i < buttons.length; i++) {\n                let controlDiv: HTMLDivElement = document.createElement('div');\n                let control = this._filterControl(controlDiv, buttons[i]);\n                this._map.controls[google.maps.ControlPosition.TOP_CENTER].push(controlDiv);\n            }\n        }\n\n\n\n        /**\n        * _filterControl\n        * @description - this method build filters button on Map\n        * @use - this._filterControl(document.createElement('div'),\n                                    'Stundents');\n        * @function\n        * @params {HTMLDivElement} controlDiv - html div element\n        * @params {string} type - filter button type\n        * @return {void}\n        */\n\n        private _filterControl(controlDiv: HTMLDivElement, type: string): void {\n            // VARIABLES\n            let self = this;\n            let defaultBtn = 'Students';\n            let className = 'filterBtnMap';\n            let background_color = 'rgb(255, 255, 255)';\n            let background_color_active = '#00B592';\n            let border_radius = '3px';\n            let box_shadow = 'rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px';\n            let cursor = 'pointer';\n            let margin_top = '10px';\n            let margin_bottom = '22px';\n            let margin_right = '10px';\n            let text_align = 'center';\n            let title = 'Click to search' + type;\n            let color = '#4E4E4E';\n            let color_active = '#FFF';\n            let font_family = 'Roboto,Arial,sans-serif';\n            let font_size = '15px';\n            let line_height = '10px';\n            let padding_top = '10px';\n            let padding_bottom = '10px';\n            let padding_left = '20px';\n            let padding_right = '20px';\n            let border_bottom = '0 hidden transparent';\n            let border_bottom_active = '2px solid #018a6f';\n            /********************/\n\n            // Set CSS for the control.\n            let controlUI = document.createElement('div');\n            controlUI.className = className;\n            controlUI.style.borderRadius = border_radius;\n            controlUI.style.boxShadow = box_shadow;\n            controlUI.style.cursor = cursor;\n            controlUI.style.marginTop = margin_top;\n            controlUI.style.marginBottom = margin_bottom;\n            controlUI.style.marginRight = margin_right;\n            controlUI.style.textAlign = text_align;\n            controlUI.title = title;\n            //Assign Active mode to Button Default\n            if(type === defaultBtn){\n                controlUI.style.backgroundColor = background_color_active;\n                controlUI.style.borderBottom = border_bottom_active;\n            } else {\n                controlUI.style.backgroundColor = background_color;\n            }\n\n            controlDiv.appendChild(controlUI);\n\n            // Set CSS for the control interior.\n            let controlText = document.createElement('div');\n            controlText.style.fontFamily = font_family;\n            controlText.style.fontSize = font_size;\n            controlText.style.lineHeight = line_height;\n            controlText.style.paddingTop = padding_top;\n            controlText.style.paddingBottom = padding_bottom;\n            controlText.style.paddingLeft = padding_left;\n            controlText.style.paddingRight = padding_right;\n            controlText.innerHTML = type;\n            // Assign Active mode to Button Default\n            if(type === defaultBtn) {\n                controlText.style.color = color_active;\n            } else {\n                controlText.style.color = color;\n            }\n\n            controlUI.appendChild(controlText);\n\n            // Click event listener\n            controlUI.addEventListener('click', function(e) {\n                // VARIABLES\n                let element = this;\n                let child:any = this.children[0];\n                let filterBtn:any = document.getElementsByClassName(className);\n\n                // Clean button state\n                for (let i = 0; i < filterBtn.length; i++) {\n                    filterBtn[i].style.backgroundColor = background_color;\n                    filterBtn[i].style.borderBottom = border_bottom;\n                    filterBtn[i].children[0].style.color = color;\n                }\n\n                // Active button\n                element.style.backgroundColor = background_color_active;\n                element.style.borderBottom = border_bottom_active;\n                child.style.color = color_active;\n\n                self.$scope.$emit(type);\n            });\n\n        }\n\n\n\n        /**\n        * _codeAddress\n        * @description - get position on map (lng, lat) based on Address,\n        * Country and zipCode.\n        * @use - this._subscribeToEvents();\n        * @function\n        * @param {google.maps.Geocoder} geocoder - geocoder object\n        * @param {string} country - country code\n        * @param {string} address - user address\n        * @param {string} city - user city\n        * @return {void}\n        */\n\n        private _codeAddress(geocoder: google.maps.Geocoder,\n                             country: string,\n                             address: string,\n                             city: string): void {\n\n            let self = this;\n\n            //Build Address joining 'Country, City, Address'\n            let location = country + ',' + city + ',' + address;\n\n            geocoder.geocode({\n              address: location\n          }, function(results, status: any) {\n\n              if (status == 'OK') {\n\n                  //self._map.setCenter(results[0].geometry.location);\n                  self._removeMarkers();\n                  self._setMarker('1',\n                                  results[0].geometry.location,\n                                  self.RED_PIN);\n                  let position = {\n                      lng: results[0].geometry.location.lng(),\n                      lat: results[0].geometry.location.lat()\n                  };\n                  self.$scope.$emit('Position', position);\n\n              } else {\n\n                  console.log(status);\n\n              }\n            });\n        }\n\n\n\n        /**\n        * TODO: El metodo _codeAddress y este hacen relativamente lo mismo, lo que\n        * el de arriba pone un PIN y este solo centra el mapa en la posicion. Crear\n        * un metodo que se encargue de devolver la posicion dependiendo de una\n        * direccion, ciudad, pais y zipCode, y que cada uno de estos metodos lo\n        * llamen y hagan lo que tienen que hacer\n        * _positionCountry\n        * @description - get position on map (lng, lat) based on Address,\n        * Country and zipCode.\n        * @use - this._subscribeToEvents();\n        * @function\n        * @param {google.maps.Geocoder} geocoder - geocoder object\n        * @param {string} country - country code\n        * @param {string} address - user address\n        * @param {string} city - user city\n        * @return {void}\n        */\n\n        private _positionCountry(geocoder: google.maps.Geocoder,\n                                 country: string,\n                                 address: string,\n                                 city: string): void {\n\n            let self = this;\n\n            //Build Address joining 'Country, City, Address'\n            let location = country + ',' + city + ',' + address;\n\n            geocoder.geocode({\n              address: location\n          }, function(results, status: any) {\n\n              if (status == 'OK') {\n\n                  self._map.setCenter(results[0].geometry.location);\n                  if(self.mapConfig.data.zoom) {\n                    self._map.setZoom(self.mapConfig.data.zoom);\n                  }\n\n              } else {\n\n                  console.log(status);\n\n              }\n            });\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes Map Component to Parent Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n\n        private _subscribeToEvents(): void {\n            //VARIABLES\n            let self = this;\n\n            /**\n            * BuildMarkers event\n            * @parent - SearchPageController\n            * @description - Parent send markers list in order to Child draws them on map\n            * @event\n            */\n            this.$scope.$on('BuildMarkers', function(event, args) {\n                self.mapConfig = args;\n                //remove last markers\n                self._removeMarkers();\n                //set markers\n                for (let i = 0; i < self.mapConfig.data.markers.length; i++) {\n                    let marker = self.mapConfig.data.markers[i];\n                    self._setMarker(marker.id,\n                                    new google.maps.LatLng(marker.position.lat, marker.position.lng),\n                                    self.RED_PIN);\n                }\n            });\n\n\n            /**\n            * ChangeMarker event\n            * @parent - SearchPageController\n            * @description - Parent send markers list in order to Child changes\n            * specific marker\n            * @event\n            */\n            this.$scope.$on('ChangeMarker', function(event, args) {\n                //VARIABLES\n                let markerId = args.id;\n                let status = args.status;\n\n                //Change marker\n                for (let i = 0; i < self._markers.length; i++) {\n                    if(self._markers[i].id === markerId) {\n                        if(status === true){\n                            self._markers[i].setIcon(self.GREEN_PIN);\n                        } else {\n                            self._markers[i].setIcon(self.RED_PIN);\n                        }\n                    } else {\n                        self._markers[i].setIcon(self.RED_PIN);\n                    }\n                }\n\n\n            });\n\n\n            /**\n            * CodeAddress event\n            * @parent - TeacherLocationSectionController\n            * @description - Parent send country, address, zipCode to child\n            * in order to get position (lng, lat) on the map.\n            * @event\n            */\n            this.$scope.$on('CodeAddress', function(event, args) {\n                //Init geoCode google map in order to get lat & lng base on teacher street\n                let geocoder = new google.maps.Geocoder();\n                self._codeAddress(geocoder, args.country, args.address, args.city);\n            });\n\n\n            /**\n            * PositionCountry event\n            * @parent - TeacherLocationSectionController\n            * @description - Parent send country, address, zipCode to child\n            * in order to get position (lng, lat) on the map.\n            * @event\n            */\n            this.$scope.$on('PositionCountry', function(event, args) {\n                //Init geoCode google map in order to get lat & lng base on teacher street\n                let geocoder = new google.maps.Geocoder();\n                self._positionCountry(geocoder, args.country, args.address, args.city);\n            });\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.map')\n        .controller(MapController.controllerId, MapController);\n\n}\n","/**\n* config()\n* @description - meter config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.components.meter', [])\n        .config(config);\n\n    function config() {}\n})();\n","/**\n* MaMeter\n* @description - MainApp Meter Directive\n* @example - <ma-meter></ma-meter>\n*/\n\nmodule components.meter {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IMeter extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaMeter implements IMeter {\n\n        static directiveId = 'maMeter';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = MeterController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        scope = {\n            meterValue: '=',\n            size: '@'\n        };\n        templateUrl: string = 'components/meter/meter.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maMeter directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maMeter link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IMeter {\n            return new MaMeter();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.meter')\n        .directive(MaMeter.directiveId, MaMeter.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * MeterController\n    * @description - Meter Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IMeterController {\n        activate: () => void;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class MeterController implements IMeterController {\n\n        static controllerId = 'mainApp.components.meter.MeterController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        CIRCLES_AMOUNT: number;\n        meterValue: number;\n        size: string;\n        private _title: string;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$filter'];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private $filter: angular.IFilterService) {\n            this.init();\n        }\n\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //CONSTANTS\n            this.CIRCLES_AMOUNT = 5;\n\n            // init label title\n            this._assignTitle();\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('meter controller actived');\n\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _assignMeterClass\n        * @description - this method assign the specific class to meter block\n        * (e.g. size class and rating class)\n        * @use - this._assignMeterClass();\n        * @function\n        * @return {string} - meter style classes\n        */\n\n        private _assignMeterClass(): string {\n            let ratingClass = 'ma-meter--rating-' + this.meterValue;\n            let meterClass = 'ma-meter--' + this.size;\n\n            return ratingClass + ' ' + meterClass;\n        }\n\n\n\n        /**\n        * _assignTitle\n        * @description - this method assign the specific title (bad, good, great, etc)\n        * to meter component\n        * @use - this._assignTitle();\n        * @function\n        * @return {void}\n        */\n\n        private _assignTitle(): void {\n            \n            //CONSTANTS\n            const BAD_TEXT = this.$filter('translate')('%global.rating.bad.label.text');\n            const REGULAR_TEXT = this.$filter('translate')('%global.rating.regular.label.text');\n            const OKAY_TEXT = this.$filter('translate')('%global.rating.okay.label.text');\n            const GOOD_TEXT = this.$filter('translate')('%global.rating.good.label.text');\n            const GREAT_TEXT = this.$filter('translate')('%global.rating.great.label.text');\n\n            let title = '';\n\n            switch (this.meterValue) {\n                case 1:\n                    title = BAD_TEXT;\n                break;\n                case 2:\n                    title = REGULAR_TEXT;\n                break;\n                case 3:\n                    title = OKAY_TEXT;\n                break;\n                case 4:\n                    title = GOOD_TEXT;\n                break;\n                case 5:\n                    title = GREAT_TEXT;\n                break;\n                default:\n                    title = GOOD_TEXT;\n                break;\n            }\n\n            this._title = title;\n        }\n\n\n\n        /**\n        * _assignCircleClass\n        * @description - this method assign the specific class to each circle\n        * @use - this._assignCircleClass();\n        * @function\n        * @return {string} circle style class\n        */\n\n        private _assignCircleClass(): string {\n            return 'circle--' + this.size;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.meter')\n        .controller(MeterController.controllerId, MeterController);\n\n}\n","/**\n * config()\n * @description - modal config file - Here init modal called dependencies\n */\n\n(function () {\n    'use strict';\n\n    angular\n        .module('mainApp.components.modal', [])\n        .config(config);\n\n    function config() { }\n})();\n","/**\n * ModalCertificateController\n * @description - modal Teacher's Certificate controller definition, generic modal in order\n * to show add new teacher's certificate form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalCertificate {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalCertificateController {\n        form: IModalCertificateForm;\n        validate: IModalCertificateValidate;\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalCertificateScope extends ng.IScope {\n\n    }\n\n    interface IModalCertificateForm {\n        name: string;\n        institution: string;\n        dateReceived: string;\n        description: string;\n    }\n\n    interface IModalCertificateValidate {\n        name: app.core.util.functionsUtil.IValid;\n        institution: app.core.util.functionsUtil.IValid;\n        dateReceived: app.core.util.functionsUtil.IValid;\n        description: app.core.util.functionsUtil.IValid;\n    }\n\n    interface IDataSet {\n        certificate: app.models.teacher.Certificate;\n        teacherId: string;\n    }\n\n\n    class ModalCertificateController implements IModalCertificateController {\n\n        static controllerId = 'mainApp.components.modal.ModalCertificateController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalCertificateForm;\n        validate: IModalCertificateValidate;\n        certificate: app.models.teacher.Certificate;\n        listReceivedYears: Array<app.core.interfaces.ISelectListElement>;\n        receivedYearObject: app.core.interfaces.ISelectListElement;\n        defaultConfig: any;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataSetModal',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.models.teacher.TeacherService',\n            '$timeout',\n            '$filter'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataSetModal: IDataSet,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private teacherService: app.models.teacher.ITeacherService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            //Create Certificate object\n            this.certificate = this.dataSetModal.certificate || new app.models.teacher.Certificate();\n\n            // Years Select List Structure\n            this.receivedYearObject = {value: this.certificate.DateReceived || ''};\n\n            //Init form\n            this.form = {\n                name: this.certificate.Name || '',\n                institution: this.certificate.Institution || '',\n                dateReceived: this.certificate.DateReceived || '',\n                description: this.certificate.Description || ''\n            };\n\n            // Build Years select lists\n            this.listReceivedYears = this.functionsUtilService.buildNumberSelectList(1957, 2017);\n\n            // Build validate object fields\n            this.validate = {\n                name: {valid: true, message: ''},\n                institution: {valid: true, message: ''},\n                dateReceived: {valid: true, message: ''},\n                description: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //LOG\n            console.log('modalCertificate controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Name field\n            let name_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.name = this.functionsUtilService.validator(this.form.name, name_rules);\n            if(!this.validate.name.valid) {\n                formValid = this.validate.name.valid;\n            }\n\n            //Validate Institution field\n            let institution_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.institution = this.functionsUtilService.validator(this.form.institution, institution_rules);\n            if(!this.validate.institution.valid) {\n                formValid = this.validate.institution.valid;\n            }\n\n            //Validate 'Received Year' fields\n            let received_year_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.dateReceived = this.functionsUtilService.validator(this.receivedYearObject.value, received_year_rules);\n            if(!this.validate.dateReceived.valid) {\n                formValid = this.validate.dateReceived.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * save\n        * @description - when user click \"Save\" button, close the modal and\n        * send the new certificate data\n        * @use - this.save();\n        * @function\n        * @return {void}\n        */\n        save(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n            //If form is valid, save data model\n            if(formValid) {\n                //VARIABLES\n                let self = this;\n                let receivedYear = this.receivedYearObject.value;\n                /*********************************/\n\n                this.form.dateReceived = receivedYear;\n\n                //Charge new data\n                this.certificate.Name = this.form.name;\n                this.certificate.Institution = this.form.institution;\n                this.certificate.DateReceived = this.form.dateReceived;\n                this.certificate.Description = this.form.description;\n\n                if(this.certificate.Id) {\n                    this.teacherService.updateCertificate(this.dataSetModal.teacherId, this.certificate)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.$uibModalInstance.close();\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                } else {\n                    this.teacherService.createCertificate(this.dataSetModal.teacherId, this.certificate)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.certificate.Id = response.id;\n                                self.$uibModalInstance.close(self.certificate);\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                }\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function TODO: deberia siempre llamarse a close, no a $uibModalInstance\n        * dejarle la funcion de cerrar a este metodo.\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalCertificateController.controllerId,\n                    ModalCertificateController);\n\n}\n","/**\n * ModalBasicInfoController\n * @description - modal get user basic information after the user signed up in Waysily\n * @constructor\n */\n\nmodule components.modal.modalBasicInfo {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalBasicInfoController {\n        close: () => void;\n        form: IModalBasicInfoForm;\n        validate: IModalBasicValidate;\n        activate: () => void;\n    }\n\n    interface IModalBasicInfoTooltip {\n        phoneNumber: string;\n        gender: string;\n        about: string;\n    }\n\n    interface IModalBasicInfoForm {\n        phoneNumber: string;\n        gender: string;\n        about: string;\n    }\n\n    interface IGenderForm {\n        gender: app.core.interfaces.IDataFromJsonI18n;\n    }\n\n    interface IModalBasicValidate {\n        phoneNumber: app.core.util.functionsUtil.IValid;\n        gender: app.core.util.functionsUtil.IValid;\n        about: app.core.util.functionsUtil.IValid;\n    }\n\n    class ModalBasicInfoController implements IModalBasicInfoController {\n\n        static controllerId = 'mainApp.components.modal.ModalBasicInfoController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalBasicInfoForm;\n        tooltip: IModalBasicInfoTooltip;\n        validate: IModalBasicValidate;\n        listGenders: Array<app.core.interfaces.IDataFromJsonI18n>;\n        genderObject: IGenderForm;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.models.user.UserService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$uibModalInstance',\n            'dataConfig',\n            '$filter',\n            '$uibModal',\n            '$rootScope'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private userService: app.models.user.IUserService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataConfig: IDataConfig,\n            private $filter: angular.IFilterService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope\n        ) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            const PHONE_NUMBER_TOOLTIP = this.$filter('translate')('%tooltip.modal_basic_info.phone_number.text');\n            const GENDER_TOOLTIP = this.$filter('translate')('%tooltip.modal_basic_info.gender.text');\n            const ABOUT_TOOLTIP = this.$filter('translate')('%tooltip.modal_basic_info.about.text');\n            //VARIABLES\n            let self = this;\n\n            // Gender Select List Structure\n            this.genderObject = {gender: {code:'', value:''}};\n\n            this.listGenders = this.getDataFromJson.getSexi18n();\n\n            //Init tooltip\n            this.tooltip = {\n                phoneNumber: PHONE_NUMBER_TOOLTIP,\n                gender: GENDER_TOOLTIP,\n                about: ABOUT_TOOLTIP\n            };\n\n            //Init form\n            this.form = {\n                phoneNumber: '',\n                gender: '',\n                about: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                phoneNumber: {valid: true, message: ''},\n                gender: {valid: true, message: ''},\n                about: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('modalBasicInfo controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * _openFinishModal\n        * @description - open Modal in order to show finish message\n        * @use - this._openFinishModal();\n        * @function\n        * @return {void}\n        */\n        private _openFinishModal(): void {\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                size: 'sm',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalFinishTmpl,\n                controller: 'mainApp.components.modal.ModalFinishController as vm'\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            this.$uibModalInstance.close();\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Phone Number field\n            let phoneNumber_rules = [NUMBER_ENUM];\n            let onlyNum: any = this.form.phoneNumber.replace(/\\D+/g, \"\");\n            //NOTE: If is empty, replace by NaN since this field is not required\n            onlyNum = parseInt(onlyNum) || NaN;\n            this.validate.phoneNumber = this.functionsUtilService.validator(onlyNum, phoneNumber_rules);\n            if(!this.validate.phoneNumber.valid) {\n                formValid = this.validate.phoneNumber.valid;\n            }\n\n            //Validate Gender field\n            let gender_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.gender = this.functionsUtilService.validator(this.genderObject.gender.code, gender_rules);\n            if(!this.validate.gender.valid) {\n                formValid = this.validate.gender.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _parseData\n        * @description - parse data in order to send to DB\n        * @use - this._parseData();\n        * @function\n        * @return {void}\n        */\n        private _parseData(): void {\n            //VARIABLES\n            let genderCode = this.genderObject.gender.code;\n            /*********************************/\n\n            // Prepare data to send to DB\n            this.$rootScope.profileData.PhoneNumber = this.form.phoneNumber;\n            this.$rootScope.profileData.Gender = genderCode;\n            this.$rootScope.profileData.About = this.form.about;\n\n        }\n\n\n\n        /**\n        * goToNext\n        * @description - go to next step (save user information on DB)\n        * @function\n        * @return void\n        */\n        private _goToNext(): void {\n            //VARIABLES\n            let self = this;\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._parseData();\n                // UPDATE EXISTING TEACHER\n                this.userService.updateUserProfile(this.$rootScope.profileData)\n                .then(\n                    function(response) {\n                        if(response.userId) {\n                            //go to next step\n                            self._openFinishModal();\n                        }\n                    }\n                );\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalBasicInfoController.controllerId,\n                    ModalBasicInfoController);\n\n}\n","/**\n * ModalBornController\n * @description - modal get user born information after the user signed up in Waysily\n * @constructor\n */\n\nmodule components.modal.modalBorn {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalBornController {\n        close: () => void;\n        form: IModalBornForm;\n        validate: IModalBornValidate;\n        activate: () => void;\n    }\n\n    interface IModalBornTooltip {\n        birthDate: string;\n        countryBirth: string;\n        cityBirth: string;\n    }\n\n    interface IModalBornForm {\n        birthDate: string;\n        country: string;\n        city: string;\n    }\n\n    interface IModalBornValidate {\n        country: app.core.util.functionsUtil.IValid;\n        city: app.core.util.functionsUtil.IValid;\n        birthDate: app.core.interfaces.IBirthdateValidate;\n    }\n\n    interface IBirthdateForm {\n        day: app.core.interfaces.ISelectListElement;\n        month: app.core.interfaces.IDataFromJsonI18n;\n        year: app.core.interfaces.ISelectListElement;\n    }\n\n    class ModalBornController implements IModalBornController {\n\n        static controllerId = 'mainApp.components.modal.ModalBornController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalBornForm;\n        validate: IModalBornValidate;\n        listMonths: Array<app.core.interfaces.IDataFromJsonI18n>;\n        listDays: Array<app.core.interfaces.ISelectListElement>;\n        listYears: Array<app.core.interfaces.ISelectListElement>;\n        dateObject: IBirthdateForm;\n        tooltip: IModalBornTooltip;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.models.user.UserService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$uibModalInstance',\n            'dataConfig',\n            '$filter',\n            '$uibModal',\n            '$rootScope'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private userService: app.models.user.IUserService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataConfig: IDataConfig,\n            private $filter: angular.IFilterService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope\n        ) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            const BIRTHDATE_TOOLTIP = this.$filter('translate')('%tooltip.modal_born.birthdate.text');\n            const COUNTRY_BIRTH_TOOLTIP = this.$filter('translate')('%tooltip.modal_born.cntry_birth.text');\n            const CITY_BIRTH_TOOLTIP = this.$filter('translate')('%tooltip.modal_born.city_birth.text');\n            //VARIABLES\n            let self = this;\n\n            //Init form\n            this.form = {\n                country: '',\n                city: '',\n                birthDate: null\n            };\n\n            //tooltips\n            this.tooltip = {\n                birthDate: BIRTHDATE_TOOLTIP,\n                countryBirth: COUNTRY_BIRTH_TOOLTIP,\n                cityBirth: CITY_BIRTH_TOOLTIP\n            };\n\n            // Birthdate Select List Structure\n            this.dateObject = {day:{value:''}, month: {code:'', value:''}, year: {value:''}};\n\n            // Country Select List Structure\n            this.countryObject = {code: '', value: ''};\n\n            // Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Build Months, Days and Years select lists\n            this.listMonths = this.getDataFromJson.getMonthi18n();\n            this.listDays = this.functionsUtilService.buildNumberSelectList(1, 31);\n            this.listYears = this.functionsUtilService.buildNumberSelectList(1916, 2017);\n\n            // Build validate object fields\n            this.validate = {\n                birthDate: {\n                    day:{valid: true, message: ''},\n                    month: {valid: true, message: ''},\n                    year: {valid: true, message: ''},\n                    valid: true,\n                    message: ''\n                },\n                country: {valid: true, message: ''},\n                city: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('modalBorn controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * _openBasicInfoModal\n        * @description - open Modal in order to ask user basic info\n        * @use - this._openBasicInfoModal();\n        * @function\n        * @return {void}\n        */\n        private _openBasicInfoModal(): void {\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                size: 'sm',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalBasicInfoTmpl,\n                controller: 'mainApp.components.modal.ModalBasicInfoController as vm'\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            this.$uibModalInstance.close();\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Reset validation\n            this.validate.birthDate.valid = true;\n\n            //Validate 'Day' Birth Date fields\n            let day_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.day = this.functionsUtilService.validator(this.dateObject.day.value, day_birthdate_rules);\n            if(!this.validate.birthDate.day.valid) {\n                formValid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.day.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Month' Birth Date fields\n            let month_birthdate_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.birthDate.month = this.functionsUtilService.validator(this.dateObject.month.code, month_birthdate_rules);\n            if(!this.validate.birthDate.month.valid) {\n                formValid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.month.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate 'Year' Birth Date fields\n            let year_birthdate_rules = [NULL_ENUM, EMPTY_ENUM, NAN_ENUM];\n            this.validate.birthDate.year = this.functionsUtilService.validator(this.dateObject.year.value, year_birthdate_rules);\n            if(!this.validate.birthDate.year.valid) {\n                formValid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.valid = this.validate.birthDate.year.valid;\n                this.validate.birthDate.message = BIRTHDATE_MESSAGE;\n            }\n\n            //Validate Country field\n            let country_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.country = this.functionsUtilService.validator(this.countryObject.code, country_rules);\n            if(!this.validate.country.valid) {\n                formValid = this.validate.country.valid;\n            }\n\n            //Validate City field\n            let city_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.city = this.functionsUtilService.validator(this.form.city, city_rules);\n            if(!this.validate.city.valid) {\n                formValid = this.validate.city.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _parseData\n        * @description - parse data in order to send to DB\n        * @use - this._parseData();\n        * @function\n        * @return {void}\n        */\n        private _parseData(): void {\n            //VARIABLES\n            let dateFormatted = this.functionsUtilService.joinDate(\n                                    this.dateObject.day.value,\n                                    this.dateObject.month.code,\n                                    this.dateObject.year.value);\n            let countryCode = this.countryObject.code;\n            /*********************************/\n\n            this.form.country = countryCode;\n            // Prepare data to send to DB\n            this.$rootScope.profileData.BirthDate = dateFormatted;\n            this.$rootScope.profileData.BornCountry = this.form.country;\n            this.$rootScope.profileData.BornCity = this.form.city;\n\n        }\n\n\n\n        /**\n        * goToNext\n        * @description - go to next step (save user information on DB)\n        * @function\n        * @return void\n        */\n        private _goToNext(): void {\n            //VARIABLES\n            let self = this;\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._parseData();\n                // UPDATE EXISTING TEACHER\n                this.userService.updateUserProfile(this.$rootScope.profileData)\n                .then(\n                    function(response) {\n                        if(response.userId) {\n                            //go to next step\n                            self._openBasicInfoModal();\n                        }\n                    }\n                );\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalBornController.controllerId,\n                    ModalBornController);\n\n}\n","/**\n * ModalFinishController\n * @description - modal welcome after the user signed up in Waysily\n * @constructor\n */\n\nmodule components.modal.modalFinish {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalFinishController {\n        close: () => void;\n        activate: () => void;\n    }\n\n    class ModalFinishController implements IModalFinishController {\n\n        static controllerId = 'mainApp.components.modal.ModalFinishController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataConfig',\n            '$uibModal'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('modalFinish controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalFinishController.controllerId,\n                    ModalFinishController);\n\n}\n","/**\n * ModalPhotoController\n * @description - modal photo after the user signed up in Waysily\n * @constructor\n */\n\nmodule components.modal.modalPhoto {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalPhotoController {\n        form: IModalPhotoForm;\n        validate: IModalPhotoValidate;\n        activate: () => void;\n    }\n\n    interface IModalPhotoForm {\n        avatar: File;\n        croppedDataUrl: string;\n        thumbnail: string;\n    }\n\n    interface IModalPhotoValidate {\n        avatar: app.core.util.functionsUtil.IValid;\n        thumbnail: app.core.util.functionsUtil.IValid;\n    }\n\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class ModalPhotoController implements IModalPhotoController {\n\n        static controllerId = 'mainApp.components.modal.ModalPhotoController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalPhotoForm;\n        validate: IModalPhotoValidate;\n        uploading: boolean;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.models.user.UserService',\n            'mainApp.core.s3Upload.S3UploadService',\n            '$uibModalInstance',\n            'mainApp.core.util.messageUtilService',\n            'Upload',\n            'dataConfig',\n            '$uibModal',\n            '$rootScope'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private userService: app.models.user.IUserService,\n            private S3UploadService: app.core.s3Upload.IS3UploadService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private Upload: app.core.interfaces.IUpload,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            // Init upload loading button\n            this.uploading = false;\n\n            // Init form\n            this.form = {\n                avatar: null,\n                croppedDataUrl: '',\n                thumbnail: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                avatar: {valid: true, message: ''},\n                thumbnail: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('modalPhoto controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _resizeImage\n        * @description - resize image base on defaults parameters\n        * @use - this._resizeImage();\n        * @function\n        * @return {void}\n        */\n        private _resizeImage(): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n            //New file name\n            let newName = app.core.util.functionsUtil.FunctionsUtilService.generateGuid() + '.jpeg';\n            // Image Options\n            let options= {\n                width: 250,\n                height: 250,\n                quality: 1.0,\n                type: 'image/jpeg',\n                pattern:'.jpg',\n                restoreExif: false\n            };\n            // Build file base on cropped data image\n            let file = this.Upload.dataUrltoBlob(this.form.croppedDataUrl, newName);\n            /****************************************************/\n\n            // Resize image (change extension to jpeg, resize and quality)\n            return this.Upload.resize(file, options).then(\n                function(resizedFile) {\n\n                    if(resizedFile) {\n                        // Upload resized file to Amazon S3\n                        return self._uploadImage(resizedFile).then(function(result) {\n                            return result;\n                        });\n                    } else {\n                        self.messageUtil.error('Hubo un problema al redimensionar la foto, intenta nuevamente por favor.');\n                    }\n                }\n            );\n\n        }\n\n\n\n        /**\n        * _uploadImage\n        * @description - upload resize image to Amazon S3\n        * @use - this._uploadImage(resizedFile);\n        * @function\n        * @param {File} resizedFile file object\n        * @return {void}\n        */\n        private _uploadImage(resizedFile): angular.IPromise<any> {\n            //VARIABLES\n            let self = this;\n\n            return this.S3UploadService.upload(resizedFile).then(function (result) {\n\n                return result;\n\n            }, function (error) {\n\n                // Mark the error\n                console.log('error', error);\n                return error;\n\n            });\n\n        }\n\n\n\n        /**\n        * _parseData\n        * @description - parse data in order to send to DB\n        * @use - this._parseData();\n        * @function\n        * @return {void}\n        */\n        private _parseData(avatar): void {\n\n            // Prepare data to send to DB\n            this.$rootScope.profileData.Avatar = avatar;\n\n        }\n\n\n\n        /**\n        * goToNext\n        * @description - go to next step (save user information on DB)\n        * @function\n        * @return void\n        */\n        private _goToNext(): void {\n            //VARIABLES\n            let self = this;\n\n            this.uploading = true;\n\n            // If this.form.avatar exists, resize and upload image\n            if(this.form.avatar) {\n\n                this._resizeImage().then(function(result) {\n\n                    if(result.Location) {\n\n                        self._parseData(result.Location);\n\n                        // Update existing profile\n                        self.userService.updateUserProfile(self.$rootScope.profileData)\n                        .then(\n                            function(response) {\n                                if(response.userId) {\n                                    //stop loading\n                                    self.uploading = false;\n\n                                    //go to next step\n                                    self._openBornModal();\n                                }\n                            }\n                        );\n\n                    } else {\n                        self.messageUtil.error('');\n                    }\n\n                });\n\n            // If this.form.avatar not exists, only go to next step\n            } else {\n                //go to next step\n                this._openBornModal();\n            }\n\n        }\n\n\n\n        /**\n        * _openBornModal\n        * @description - open Modal in order to ask user born info\n        * @use - this._openBornModal();\n        * @function\n        * @return {void}\n        */\n        private _openBornModal(): void {\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                size: 'sm',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalBornTmpl,\n                controller: 'mainApp.components.modal.ModalBornController as vm'\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            this.$uibModalInstance.close();\n        }\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalPhotoController.controllerId,\n                    ModalPhotoController);\n\n}\n","/**\n * ModalWelcomeController\n * @description - modal welcome after the user signed up in Waysily\n * @constructor\n */\n\nmodule components.modal.modalWelcome {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalWelcomeController {\n        activate: () => void;\n    }\n\n    class ModalWelcomeController implements IModalWelcomeController {\n\n        static controllerId = 'mainApp.components.modal.ModalWelcomeController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataConfig',\n            '$uibModal'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('modalWelcome controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _openPhotoModal\n        * @description - open Modal in order to upload a user avatar image\n        * @use - this._openPhotoModal();\n        * @function\n        * @return {void}\n        */\n        private _openPhotoModal(): void {\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                size: 'sm',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalPhotoTmpl,\n                controller: 'mainApp.components.modal.ModalPhotoController as vm'\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            this.$uibModalInstance.close();\n        }\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalWelcomeController.controllerId,\n                    ModalWelcomeController);\n\n}\n","/**\n * ModalEducationController\n * @description - modal Teacher's Education controller definition, generic modal\n * in order to show add new teacher's education form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalEducation {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalEducationController {\n        form: IModalEducationForm;\n        validate: IModalEducationValidate;\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalEducationScope extends ng.IScope {\n\n    }\n\n    interface IModalEducationForm {\n        school: string;\n        degree: string;\n        fieldStudy: string;\n        dateStart: string;\n        dateFinish: string;\n        description: string;\n    }\n\n    interface IModalEducationValidate {\n        school: app.core.util.functionsUtil.IValid;\n        degree: app.core.util.functionsUtil.IValid;\n        fieldStudy: app.core.util.functionsUtil.IValid;\n        dateStart: app.core.util.functionsUtil.IValid;\n        dateFinish: app.core.util.functionsUtil.IValid;\n        description: app.core.util.functionsUtil.IValid;\n    }\n\n    interface IDataSet {\n        education: app.models.teacher.Education;\n        teacherId: string;\n    }\n\n\n    class ModalEducationController implements IModalEducationController {\n\n        static controllerId = 'mainApp.components.modal.ModalEducationController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalEducationForm;\n        validate: IModalEducationValidate;\n        education: app.models.teacher.Education;\n        listStartYears: Array<app.core.interfaces.ISelectListElement>;\n        listFinishYears: Array<app.core.interfaces.ISelectListElement>;\n        startYearObject: app.core.interfaces.ISelectListElement;\n        finishYearObject: app.core.interfaces.ISelectListElement;\n        degreeObject: app.core.interfaces.IDataFromJsonI18n;\n        listDegrees: Array<app.core.interfaces.IDataFromJsonI18n>;\n        defaultConfig: any;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataSetModal',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.models.teacher.TeacherService',\n            '$timeout',\n            '$filter'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataSetModal: IDataSet,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private teacherService: app.models.teacher.ITeacherService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            //Create Education object\n            this.education = this.dataSetModal.education || new app.models.teacher.Education();\n\n            // Country Select List Structure\n            this.degreeObject = {code: this.education.Degree || '', value: ''};\n\n            // Years Select List Structure\n            this.startYearObject = {value: this.education.DateStart || ''};\n            this.finishYearObject = {value: this.education.DateFinish || ''};\n\n            //Init form\n            this.form = {\n                school: this.education.School || '',\n                degree: this.education.Degree || '',\n                fieldStudy: this.education.FieldStudy || '',\n                dateStart: this.education.DateStart || '',\n                dateFinish: this.education.DateFinish || '',\n                description: this.education.Description || ''\n            };\n\n            // Build Years select lists\n            this.listStartYears = this.functionsUtilService.buildNumberSelectList(1957, 2017);\n            this.listFinishYears = this.functionsUtilService.buildNumberSelectList(1957, 2017);\n\n            //Build Countries select lists\n            this.listDegrees = this.getDataFromJson.getDegreei18n();\n\n            // Build validate object fields\n            this.validate = {\n                school: {valid: true, message: ''},\n                degree: {valid: true, message: ''},\n                fieldStudy: {valid: true, message: ''},\n                dateStart: {valid: true, message: ''},\n                dateFinish: {valid: true, message: ''},\n                description: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //LOG\n            console.log('modalEducation controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate School field\n            let school_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.school = this.functionsUtilService.validator(this.form.school, school_rules);\n            if(!this.validate.school.valid) {\n                formValid = this.validate.school.valid;\n            }\n\n            //Validate Degree field\n            let degree_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.degree = this.functionsUtilService.validator(this.degreeObject.code, degree_rules);\n            if(!this.validate.degree.valid) {\n                formValid = this.validate.degree.valid;\n            }\n\n            //Validate FieldStudy field\n            let field_study_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.fieldStudy = this.functionsUtilService.validator(this.form.fieldStudy, field_study_rules);\n            if(!this.validate.fieldStudy.valid) {\n                formValid = this.validate.fieldStudy.valid;\n            }\n\n            //Validate 'Start Year' fields\n            let start_year_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.dateStart = this.functionsUtilService.validator(this.startYearObject.value, start_year_rules);\n            if(!this.validate.dateStart.valid) {\n                formValid = this.validate.dateStart.valid;\n            }\n\n            //Validate 'Finish Year' fields\n            let finish_year_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.dateFinish = this.functionsUtilService.validator(this.finishYearObject.value, finish_year_rules);\n            if(!this.validate.dateFinish.valid) {\n                formValid = this.validate.dateFinish.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * save\n        * @description - when user click \"Save\" button, close the modal and\n        * send the new education data\n        * @use - this.save();\n        * @function\n        * @return {void}\n        */\n        save(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n            //If form is valid, save data model\n            if(formValid) {\n                //VARIABLES\n                let self = this;\n                let degreeCode = this.degreeObject.code;\n                let startYear = this.startYearObject.value;\n                let finishYear = this.finishYearObject.value;\n                /*********************************/\n\n                this.form.degree = degreeCode;\n                this.form.dateStart = startYear;\n                this.form.dateFinish = finishYear;\n\n                //Charge new data\n                this.education.School = this.form.school;\n                this.education.Degree = this.form.degree;\n                this.education.FieldStudy = this.form.fieldStudy;\n                this.education.DateStart = this.form.dateStart;\n                this.education.DateFinish = this.form.dateFinish;\n                this.education.Description = this.form.description;\n\n                if(this.education.Id) {\n                    this.teacherService.updateEducation(this.dataSetModal.teacherId, this.education)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.$uibModalInstance.close();\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                } else {\n                    this.teacherService.createEducation(this.dataSetModal.teacherId, this.education)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.education.Id = response.id;\n                                self.$uibModalInstance.close(self.education);\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                }\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalEducationController.controllerId,\n                    ModalEducationController);\n\n}\n","/**\n * ModalExperienceController\n * @description - modal Teacher's Experience controller definition, generic modal\n * in order to show add new experience form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalExperience {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalExperienceController {\n        form: IModalExperienceForm;\n        validate: IModalExperienceValidate;\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalExperienceScope extends ng.IScope {\n\n    }\n\n    interface IModalExperienceForm {\n        position: string;\n        company: string;\n        country: string;\n        city: string;\n        dateStart: string;\n        dateFinish: string;\n        description: string;\n    }\n\n    interface IModalExperienceValidate {\n        position: app.core.util.functionsUtil.IValid;\n        company: app.core.util.functionsUtil.IValid;\n        country: app.core.util.functionsUtil.IValid;\n        city: app.core.util.functionsUtil.IValid;\n        dateStart: app.core.util.functionsUtil.IValid;\n        dateFinish: app.core.util.functionsUtil.IValid;\n        description: app.core.util.functionsUtil.IValid;\n    }\n\n    interface IDataSet {\n        experience: app.models.teacher.Experience;\n        teacherId: string;\n    }\n\n\n    class ModalExperienceController implements IModalExperienceController {\n\n        static controllerId = 'mainApp.components.modal.ModalExperienceController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalExperienceForm;\n        validate: IModalExperienceValidate;\n        experience: app.models.teacher.Experience;\n        listStartYears: Array<app.core.interfaces.ISelectListElement>;\n        listFinishYears: Array<app.core.interfaces.ISelectListElement>;\n        startYearObject: app.core.interfaces.ISelectListElement;\n        finishYearObject: app.core.interfaces.ISelectListElement;\n        countryObject: app.core.interfaces.IDataFromJsonI18n;\n        listCountries: Array<app.core.interfaces.IDataFromJsonI18n>;\n        defaultConfig: any;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataSetModal',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.models.teacher.TeacherService',\n            '$timeout',\n            '$filter'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataSetModal: IDataSet,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private teacherService: app.models.teacher.ITeacherService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            //Create Experience object\n            this.experience = this.dataSetModal.experience || new app.models.teacher.Experience();\n\n            // Country Select List Structure\n            this.countryObject = {code: this.experience.Country || '', value: ''};\n\n            // Years Select List Structure\n            this.startYearObject = {value: this.experience.DateStart || ''};\n            this.finishYearObject = {value: this.experience.DateFinish || ''};\n\n            //Init form\n            this.form = {\n                position: this.experience.Position || '',\n                company: this.experience.Company || '',\n                country: this.experience.Country || '',\n                city: this.experience.City || '',\n                dateStart: this.experience.DateStart || '',\n                dateFinish: this.experience.DateFinish || '',\n                description: this.experience.Description || ''\n            };\n\n            // Build Years select lists\n            this.listStartYears = this.functionsUtilService.buildNumberSelectList(1957, 2017);\n            this.listFinishYears = this.functionsUtilService.buildNumberSelectList(1957, 2017);\n\n            //Build Countries select lists\n            this.listCountries = this.getDataFromJson.getCountryi18n();\n\n            // Build validate object fields\n            this.validate = {\n                position: {valid: true, message: ''},\n                company: {valid: true, message: ''},\n                country: {valid: true, message: ''},\n                city: {valid: true, message: ''},\n                dateStart: {valid: true, message: ''},\n                dateFinish: {valid: true, message: ''},\n                description: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //LOG\n            console.log('modalExperience controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Position field\n            let position_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.position = this.functionsUtilService.validator(this.form.position, position_rules);\n            if(!this.validate.position.valid) {\n                formValid = this.validate.position.valid;\n            }\n\n            //Validate Company field\n            let company_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.company = this.functionsUtilService.validator(this.form.company, company_rules);\n            if(!this.validate.company.valid) {\n                formValid = this.validate.company.valid;\n            }\n\n            //Validate Country field\n            let country_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.country = this.functionsUtilService.validator(this.countryObject.code, country_rules);\n            if(!this.validate.country.valid) {\n                formValid = this.validate.country.valid;\n            }\n\n            //Validate City field\n            let city_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.city = this.functionsUtilService.validator(this.form.city, city_rules);\n            if(!this.validate.city.valid) {\n                formValid = this.validate.city.valid;\n            }\n\n            //Validate 'Start Year' fields\n            let start_year_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.dateStart = this.functionsUtilService.validator(this.startYearObject.value, start_year_rules);\n            if(!this.validate.dateStart.valid) {\n                formValid = this.validate.dateStart.valid;\n            }\n\n            //Validate 'Finish Year' fields\n            let finish_year_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.dateFinish = this.functionsUtilService.validator(this.finishYearObject.value, finish_year_rules);\n            if(!this.validate.dateFinish.valid) {\n                formValid = this.validate.dateFinish.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * save\n        * @description - when user click \"Save\" button, close the modal and\n        * send the new experience data\n        * @use - this.save();\n        * @function\n        * @return {void}\n        */\n        save(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n            //If form is valid, save data model\n            if(formValid) {\n                //VARIABLES\n                let self = this;\n                let countryCode = this.countryObject.code;\n                let startYear = this.startYearObject.value;\n                let finishYear = this.finishYearObject.value;\n                /*********************************/\n\n                this.form.country = countryCode;\n                this.form.dateStart = startYear;\n                this.form.dateFinish = finishYear;\n\n                //Charge new data\n                this.experience.Position = this.form.position;\n                this.experience.Country = this.form.country;\n                this.experience.City = this.form.city;\n                this.experience.Company = this.form.company;\n                this.experience.DateStart = this.form.dateStart;\n                this.experience.DateFinish = this.form.dateFinish;\n                this.experience.Description = this.form.description;\n\n                if(this.experience.Id) {\n                    this.teacherService.updateExperience(this.dataSetModal.teacherId, this.experience)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.$uibModalInstance.close();\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                } else {\n                    this.teacherService.createExperience(this.dataSetModal.teacherId, this.experience)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.experience.Id = response.id;\n                                self.$uibModalInstance.close(self.experience);\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                }\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalExperienceController.controllerId,\n                    ModalExperienceController);\n\n}\n","/**\n * ModalForgotPasswordController\n * @description - modal Forgot Password controller definition, generic modal\n * in order to show user forgotPassword form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalForgotPassword {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalForgotPasswordController {\n        close: () => void;\n        validate: IModalForgotPasswordValidate;\n        activate: () => void;\n    }\n\n    interface IModalForgotPasswordScope extends ng.IScope {\n\n    }\n\n    interface IModalForgotPasswordForm {\n        email: string;\n    }\n\n    interface IModalForgotPasswordValidate {\n        email: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n\n    class ModalForgotPasswordController implements IModalForgotPasswordController {\n\n        static controllerId = 'mainApp.components.modal.ModalForgotPasswordController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalForgotPasswordForm;\n        validate: IModalForgotPasswordValidate;\n        sending: boolean;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$rootScope',\n            'mainApp.auth.AuthService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.util.messageUtilService',\n            'mainApp.register.RegisterService',\n            '$filter',\n            '$uibModal',\n            '$uibModalInstance',\n            'dataConfig'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private AuthService: app.auth.IAuthService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private RegisterService: app.register.IRegisterService,\n            private $filter: angular.IFilterService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataConfig: IDataConfig) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            // Init sending loading\n            this.sending = false;\n\n            //Init form\n            this.form = {\n                email: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                email: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Forgot Passwod Modal';\n            //LOG\n            DEBUG && console.log('modalForgotPassword controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            /***************************************************/\n\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Email field\n            let email_rules = [NULL_ENUM, EMPTY_ENUM, EMAIL_ENUM];\n            this.validate.email = this.functionsUtil.validator(this.form.email, email_rules);\n            if(!this.validate.email.valid) {\n                formValid = this.validate.email.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _sendInstructions\n        * @description - Send email with link to reset password\n        * @use - this._sendInstructions();\n        * @function\n        * @return {void}\n        */\n        private _sendInstructions(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Send instructions from Forgot Password';\n            const NO_ACCOUNT_EXISTS_1 = this.$filter('translate')('%modal.forgot_password.no_account_exists.part1.text');\n            const NO_ACCOUNT_EXISTS_2 = this.$filter('translate')('%modal.forgot_password.no_account_exists.part2.text');\n            const SENT_LINK = this.$filter('translate')('%modal.forgot_password.sent_link.text');\n\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL, {\n                \"email\": this.form.email || '*'\n            });\n\n            //VARIABLES\n            let self = this;\n\n            let formValid = this._validateForm();\n\n            if(formValid) {\n\n                //loading On\n                this.sending = true;\n\n                //Validate if given email is in DB\n                this.RegisterService.checkEmail(this.form.email).then(\n\n                    //Success\n                    function(response) {\n                        //VARIABLES\n                        let emailExist = true;\n\n                        if(response.data) {\n                            //TODO: Validar mejor cuando de un error de servidor\n                            emailExist = response.data.emailExist || true;\n                        } else {\n                            emailExist = false;\n                        }\n\n                        self.validate.globalValidate.valid = emailExist;\n\n                        if(!emailExist) {\n                            //loading Off\n                            self.sending = false;\n                            self.validate.globalValidate.message = NO_ACCOUNT_EXISTS_1 + self.form.email + NO_ACCOUNT_EXISTS_2;\n                        } else {\n                            //Send instructions to reset password\n                            self.AuthService.resetPassword(self.form.email).then(\n\n                                //Success\n                                function(response) {\n                                    //loading Off\n                                    self.sending = false;\n                                    self.messageUtil.info(SENT_LINK + self.form.email);\n                                    //Open Log In modal to prepare user to log in\n                                    self._openLogInModal();\n                                },\n\n                                //Error\n                                function(error) {\n                                    //loading Off\n                                    self.sending = false;\n                                    DEBUG && console.error(error);\n                                    self.messageUtil.error('');\n                                }\n                            );\n                        }\n\n                    }\n\n                );\n\n            }\n\n        }\n\n\n\n        /**\n        * _openLogInModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openLogInModal();\n        * @function\n        * @return {void}\n        */\n        private _openLogInModal(): void {\n            //MIXPANEL\n            mixpanel.track(\"Click on 'Log in' from signUp modal\");\n\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalLogInTmpl,\n                controller: 'mainApp.components.modal.ModalLogInController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            /* When modal is closed,validate if user is Authenticated in order to\n            show current avatar user */\n            modalInstance.result.then(function () {\n                //Validate if user is Authenticated\n                self.$rootScope.$broadcast('Is Authenticated');\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n            this.$uibModalInstance.close();\n        }\n\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalForgotPasswordController.controllerId,\n                    ModalForgotPasswordController);\n\n}\n","/**\n * ModalLanguagesController\n * @description - modal Contact controller definition, generic modal in order\n * to show add new meeting point form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalLanguages {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalLanguagesController {\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalLanguagesScope extends ng.IScope {\n\n    }\n\n    interface IModalLanguagesForm {\n        options: Array<app.core.interfaces.IKeyValue>;\n    }\n\n\n    interface IModalLanguagesError {\n        message: string;\n    }\n\n    interface IDataSet {\n        list: Array<app.core.interfaces.IKeyValue>;\n    }\n\n\n    class ModalLanguagesController implements IModalLanguagesController {\n\n        static controllerId = 'mainApp.components.modal.ModalLanguageController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalLanguagesForm;\n        error: IModalLanguagesError;\n        checked: boolean;\n        defaultConfig: any;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataSetModal',\n            '$timeout'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataSetModal: IDataSet,\n            private $timeout: angular.ITimeoutService ) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            //assign respective title\n            console.log('Title');\n\n            //Init form\n            this.form = {\n                options: this.dataSetModal.list || []\n            };\n\n            // Build Languages Checked List\n            this.$timeout(function(){\n                self._buildLanguagesChecked();\n            });\n\n\n            this.error = {\n                message: ''\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //LOG\n            console.log('modalLanguages controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * addLanguages\n        * @description - add new option to options languages array\n        * @use - this.addLanguages(3);\n        * @function\n        * @param {key} option - languages selected by user\n        * @return {void}\n        */\n        addLanguages(key): void {\n\n            let check = document.getElementById('language-' + key);\n            let checkClasses = check.classList;\n            let checked = check.getAttribute('data-checked');\n            let value = check.innerText;\n\n            if(checked == 'true') {\n                this._removeLanguage(key);\n                checkClasses.remove('ma-label--box--check--active');\n                check.setAttribute('data-checked', 'false');\n            } else {\n                let option = {\n                    key: key,\n                    value: value\n                };\n                this.form.options.push(option);\n                checkClasses.add('ma-label--box--check--active');\n                check.setAttribute('data-checked', 'true');\n            }\n\n        }\n\n\n\n        /**\n        * _removeLanguage\n        * @description - remove a language element of options array\n        * @use - this._removeLanguage(3);\n        * @function\n        * @param {string} key - languages deselected by user\n        * @return {void}\n        */\n        private _removeLanguage(key): void {\n            this.form.options = this.form.options.filter(function(el) {\n                return el.key !== key;\n            });\n        }\n\n\n\n        /**\n        * _buildLanguagesChecked\n        * @description - when open modal, build languages have already checked\n        * before by the user\n        * @use - this._buildLanguagesChecked();\n        * @function\n        * @return {void}\n        */\n        private _buildLanguagesChecked(): void {\n            if(this.form.options.length > 0){\n                for (let i = 0; i < this.form.options.length; i++) {\n                    let language = this.form.options[i];\n                    let check = document.getElementById('language-' + language.key);\n                    let checkClasses = check.classList;\n                    checkClasses.add('ma-label--box--check--active');\n                    check.setAttribute('data-checked', 'true');\n                }\n            }\n        }\n\n\n\n        /**\n        * _save\n        * @description - when user click \"Save\" button, close the modal and\n        * send the new languages options list\n        * @use - this.save();\n        * @function\n        * @return {void}\n        */\n        private _save(): void {\n            this.$uibModalInstance.close(this.form.options);\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalLanguagesController.controllerId,\n                    ModalLanguagesController);\n\n}\n","/**\n * ModalLogInController\n * @description - modal User LogIn controller definition, generic modal\n * in order to show user logIn form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalLogIn {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalLogInController {\n        close: () => void;\n        validate: IModalLogInValidate;\n        activate: () => void;\n    }\n\n    interface IModalLogInScope extends ng.IScope {\n\n    }\n\n    interface IModalLogInForm {\n        username: string;\n        email: string;\n        password: string;\n    }\n\n    interface IModalLogInValidate {\n        username: app.core.util.functionsUtil.IValid;\n        email: app.core.util.functionsUtil.IValid;\n        password: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n\n    class ModalLogInController implements IModalLogInController {\n\n        static controllerId = 'mainApp.components.modal.ModalLogInController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalLogInForm;\n        validate: IModalLogInValidate;\n        saving: boolean;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$rootScope',\n            '$state',\n            'mainApp.auth.AuthService',\n            'mainApp.account.AccountService',\n            'mainApp.models.user.UserService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.util.messageUtilService',\n            '$filter',\n            'mainApp.localStorageService',\n            'dataSetModal',\n            'dataConfig',\n            '$uibModal',\n            '$uibModalInstance'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $state: ng.ui.IStateService,\n            private AuthService: app.auth.IAuthService,\n            private AccountService: app.account.IAccountService,\n            private userService: app.models.user.IUserService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private $filter: angular.IFilterService,\n            private localStorage,\n            private dataSetModal: app.core.interfaces.IDataSet,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            // Init saving loading\n            this.saving = false;\n\n            //Init form\n            this.form = {\n                username: '',\n                email: '',\n                password: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                username: {valid: true, message: ''},\n                email: {valid: true, message: ''},\n                password: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Log in modal';\n            //LOG\n            DEBUG && console.log('modalLogIn controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * login\n        * @description - Tries to login a user by calling login AuthService method\n        * @use - this.login();\n        * @function\n        * @return {void}\n        */\n        login(): void {\n            //CONSTANTS\n            const USERNAME_PASSWORD_WRONG = this.$filter('translate')('%error.username_password_wrong.text');\n            const SERVER_ERROR = this.$filter('translate')('%error.server_error.text');\n            const SERVER_CODE_ERROR = this.$filter('translate')('%error.server_error_code.text');\n\n            //VARIABLES\n            let self = this;\n\n            //loading On\n            this.saving = true;\n\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //get username given an user email\n                this.AccountService.getUsername(this.form.email).then(\n                    function(response) {\n\n                        //If username exists, add this field on request to login\n                        if(response.userExist) {\n                            self.form.username = response.username;\n                        } else {\n                            //TODO: Solucion nada optima, no esta bien asignar el email,\n                            // como si fuera el username, solo para que rompa, y devuelva\n                            // error de login, buscar una solucion mejor.\n                            self.form.username = self.form.email;\n                        }\n\n                        self.AuthService.login(self.form).then(\n\n                            //Success\n                            function(response) {\n                                self.AccountService.getAccount().then(\n                                    function(response) {\n                                        //LOG\n                                        DEBUG && console.log('Data User: ', response);\n\n                                        //loading Off\n                                        self.saving = false;\n\n                                        //Set logged User data in localStorage\n                                        self.localStorage.setItem(self.dataConfig.userDataLocalStorage, JSON.stringify(response));\n                                        //Set logged User data in $rootScope\n                                        self.$rootScope.userData = response;\n\n                                        self.userService.getUserProfileById(response.id).then(\n                                            function(response) {\n                                                if(response.userId) {\n                                                    self.$rootScope.profileData = new app.models.user.Profile(response);\n                                                    self.functionsUtil.addUserIndentifyMixpanel(self.$rootScope.profileData.UserId);\n                                                }\n\n                                                //Close modal\n                                                self.$uibModalInstance.close();\n                                            }\n                                        );\n\n                                    }\n                                );\n                            },\n\n                            // Error\n                            function(response) {\n                                //loading Off\n                                self.saving = false;\n\n                                if (response.status == 401) {\n                                    DEBUG && console.log(USERNAME_PASSWORD_WRONG);\n                                    self.validate.globalValidate.valid = false;\n                                    self.validate.globalValidate.message = USERNAME_PASSWORD_WRONG;\n                                }\n\n                                else if (response.status == -1) {\n                                    DEBUG && console.log(SERVER_ERROR);\n                                    self.messageUtil.error(SERVER_ERROR);\n                                }\n\n                                else {\n                                    DEBUG && console.log(SERVER_CODE_ERROR + response.status);\n                                    self.messageUtil.error(SERVER_CODE_ERROR + response.status);\n                                }\n                            }\n                        );\n                    }\n                );\n\n            } else {\n                //loading Off\n                this.saving = false;\n            }\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            /***************************************************/\n\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Email field\n            let email_rules = [NULL_ENUM, EMPTY_ENUM, EMAIL_ENUM];\n            this.validate.email = this.functionsUtil.validator(this.form.email, email_rules);\n            if(!this.validate.email.valid) {\n                formValid = this.validate.email.valid;\n            }\n\n            //Validate Password field\n            let password_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.password = this.functionsUtil.validator(this.form.password, password_rules);\n            if(!this.validate.password.valid) {\n                formValid = this.validate.password.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _openForgotPasswordModal\n        * @description - open Modal in order to recover password\n        * @use - this._openForgotPasswordModal();\n        * @function\n        * @return {void}\n        */\n        private _openForgotPasswordModal(): void {\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                size: 'sm',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalForgotPasswordTmpl,\n                controller: 'mainApp.components.modal.ModalForgotPasswordController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: self.dataSetModal.hasNextStep\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            this.$uibModalInstance.close();\n        }\n\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openSignUpModal();\n        * @function\n        * @return {void}\n        */\n        private _openSignUpModal(): void {\n\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                size: 'sm',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: self.dataSetModal.hasNextStep\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            this.$uibModalInstance.close();\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalLogInController.controllerId,\n                    ModalLogInController);\n\n}\n","/**\n * ModalMeetingPointController\n * @description - modal Contact controller definition, generic modal in order\n * to show add new meeting point form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalMeetingPoint {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalMeetingPointController {\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalMeetingPointScope extends ng.IScope {\n\n    }\n\n    interface IModalMeetingPointForm {\n\n    }\n\n\n    interface IModalMeetingPointError {\n        message: string;\n    }\n\n    interface IDataSet {\n        //model: app.models.Tenant;\n        model: any;\n    }\n\n\n    class ModalMeetingPointController implements IModalMeetingPointController {\n\n        static controllerId = 'mainApp.components.modal.ModalMeetingPointController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalMeetingPointForm;\n        error: IModalMeetingPointError;\n        defaultConfig: any;\n        mapConfigModal: components.map.IMapConfig;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataSetModal'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataSetModal: IDataSet) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n\n            //Init form\n            this.form = {\n            };\n\n            this.error = {\n                message: ''\n            };\n\n            // init map config\n            this.mapConfigModal = {\n                type: 'modal-assign-marker-map',\n                data: null\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //LOG\n            console.log('modalMeetingPoint controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        close(): void {\n            this.$uibModalInstance.close();\n            event.preventDefault();\n        }\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalMeetingPointController.controllerId,\n                    ModalMeetingPointController);\n\n}\n","/**\n * ModalRecommendTeacherController\n * @description - modal Teacher's Certificate controller definition, generic modal in order\n * to show add new teacher's certificate form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalRecommendTeacher {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalRecommendTeacherController {\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalRecommendTeacherScope extends ng.IScope {\n\n    }\n\n    interface IDataSet {\n        earlyId: string;\n    }\n\n\n    class ModalRecommendTeacherController implements IModalRecommendTeacherController {\n\n        static controllerId = 'mainApp.components.modal.ModalRecommendTeacherController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        defaultConfig: any;\n        rating: app.models.teacher.Rating;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataSetModal',\n            'mainApp.localStorageService',\n            'mainApp.models.student.StudentService',\n            '$state',\n            'dataConfig',\n            '$timeout',\n            '$filter',\n            '$rootScope'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataSetModal: IDataSet,\n            private localStorage,\n            private StudentService: app.models.student.IStudentService,\n            private $state: ng.ui.IStateService,\n            private dataConfig,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //VARIABLES\n            let self = this;\n            //LOG\n            console.log('modalRecommendTeacher controller actived');\n\n            //Get Early Adopter Recommendation Details\n            this.StudentService.getRatingByEarlyid(this.dataSetModal.earlyId).then(\n                function(response) {\n                    if(response.id) {\n\n                        self.rating = new app.models.teacher.Rating(response);\n\n                    }\n                }\n            );\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        //TODO: Poner descripcion\n        _join(): void {\n            //CONSTANTS\n            const CREATE_TEACHER = 'page.createTeacherPage.start';\n            const CLICK_MIXPANEL = 'Click: Join as a Teacher from recommendation modal';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n            //Save early id on localStorage to keep it while user navigate waysily\n            this.localStorage.setItem(this.dataConfig.earlyIdLocalStorage, this.dataSetModal.earlyId);\n            this.$uibModalInstance.close();\n            // GO TO NEXT STEP\n            this.$state.go(CREATE_TEACHER, {reload: true});\n        }\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click on Close recommend teacher modal button';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n            //Save early id on localStorage to keep it while user navigate waysily\n            this.localStorage.setItem(this.dataConfig.earlyIdLocalStorage, this.dataSetModal.earlyId);\n            this.$rootScope.activeMessageBar = true;\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalRecommendTeacherController.controllerId,\n                    ModalRecommendTeacherController);\n\n}\n","/**\n * ModalSignUpController\n * @description - modal User SignUp controller definition, generic modal\n * in order to show user signUp form\n * @constructor\n */\n\nmodule components.modal.modalSignUp {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalSignUpController {\n        close: () => void;\n        validate: IModalSignUpValidate;\n        activate: () => void;\n    }\n\n    interface IModalSignUpScope extends ng.IScope {\n\n    }\n\n    interface IModalSignUpForm extends app.register.IRegisterUserData {\n        username: string;\n        email: string;\n        first_name: string;\n        last_name: string;\n        password: string;\n    }\n\n    interface IModalSignUpValidate {\n        username: app.core.util.functionsUtil.IValid;\n        email: app.core.util.functionsUtil.IValid;\n        first_name: app.core.util.functionsUtil.IValid;\n        last_name: app.core.util.functionsUtil.IValid;\n        password: app.core.util.functionsUtil.IValid;\n        globalValidate: app.core.util.functionsUtil.IValid;\n    }\n\n    class ModalSignUpController implements IModalSignUpController {\n\n        static controllerId = 'mainApp.components.modal.ModalSignUpController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalSignUpForm;\n        validate: IModalSignUpValidate;\n        passwordMinLength: number;\n        passwordMaxLength: number;\n        saving: boolean;\n        defaultConfig: any;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$rootScope',\n            'mainApp.auth.AuthService',\n            'mainApp.account.AccountService',\n            'mainApp.register.RegisterService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.core.util.messageUtilService',\n            '$filter',\n            'mainApp.localStorageService',\n            'dataSetModal',\n            'dataConfig',\n            '$uibModal',\n            '$uibModalInstance'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private AuthService: app.auth.IAuthService,\n            private AccountService: app.account.IAccountService,\n            private RegisterService: app.register.IRegisterService,\n            private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n            private messageUtil: app.core.util.messageUtil.IMessageUtilService,\n            private $filter: angular.IFilterService,\n            private localStorage,\n            private dataSetModal: app.core.interfaces.IDataSet,\n            private dataConfig: IDataConfig,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            //Init form\n            this.form = {\n                username: '',\n                email: '',\n                first_name: '',\n                last_name: '',\n                password: ''\n            };\n\n            // Init saving loading\n            this.saving = false;\n\n            // Password min length\n            this.passwordMinLength = this.dataConfig.passwordMinLength;\n\n            // Password max length\n            this.passwordMaxLength = this.dataConfig.passwordMaxLength;\n\n            // Build validate object fields\n            this.validate = {\n                username: {valid: true, message: ''},\n                email: {valid: true, message: ''},\n                first_name: {valid: true, message: ''},\n                last_name: {valid: true, message: ''},\n                password: {valid: true, message: ''},\n                globalValidate: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //CONSTANTS\n            const ENTER_MIXPANEL = 'Enter: Sign up modal';\n            //LOG\n            DEBUG && console.log('modalSignUp controller actived');\n            //MIXPANEL\n            mixpanel.track(ENTER_MIXPANEL);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * registerUser\n        * @description - Tried to create a new user account\n        * @use - this.registerUser();\n        * @function\n        * @return {void}\n        */\n        registerUser(): void {\n            //VARIABLES\n            let self = this;\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                //loading On\n                this.saving = true;\n\n                //Create a username based on first name and last name\n                this.form.username = this.functionsUtil.generateUsername(this.form.first_name, this.form.last_name);\n\n                //Register current user\n                this.RegisterService.register(this.form).then(\n\n                    //Success\n                    function(response: app.core.interfaces.IUserDataAuth) {\n                        //LOG\n                        DEBUG && console.log('Welcome!, Your new account has been successfuly created.');\n                        //Log user signed up\n                        self._loginAfterRegister(\n                            response.username,\n                            response.email,\n                            response.password\n                        );\n                    },\n\n                    //Error\n                    function(error) {\n                        //LOG\n                        DEBUG && console.log(JSON.stringify(error));\n\n                        //loading Off\n                        self.saving = false;\n\n                        //Parse Error\n                        var errortext = [];\n                        for (var key in error.data) {\n                            //var line = key.toUpperCase();\n                            var line = key;\n                            line += ': '\n                            line += error.data[key];\n                            errortext.push(line);\n                        }\n\n                        //LOG Parsed Error\n                        DEBUG && console.error(errortext);\n\n                        self.validate.globalValidate.valid = false;\n                        self.validate.globalValidate.message = errortext[0];\n                    }\n                );\n\n            }\n\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const EMAIL_ENUM = app.core.util.functionsUtil.Validation.Email;\n            const PASSWORD_MESSAGE = this.$filter('translate')('%modal.signup.error.short_password.text');\n            /***************************************************/\n\n            //VARIABLES\n            let formValid = true;\n\n            //Validate First Name field\n            let firstName_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.first_name = this.functionsUtil.validator(this.form.first_name, firstName_rules);\n            if(!this.validate.first_name.valid) {\n                formValid = this.validate.first_name.valid;\n            }\n\n            //Validate Last Name field\n            let lastName_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.last_name = this.functionsUtil.validator(this.form.last_name, lastName_rules);\n            if(!this.validate.last_name.valid) {\n                formValid = this.validate.last_name.valid;\n            }\n\n            //Validate Email field\n            let email_rules = [NULL_ENUM, EMPTY_ENUM, EMAIL_ENUM];\n            this.validate.email = this.functionsUtil.validator(this.form.email, email_rules);\n            if(!this.validate.email.valid) {\n                formValid = this.validate.email.valid;\n            }\n\n            //Validate Password field\n            let password_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.password = this.functionsUtil.validator(this.form.password, password_rules);\n            if(!this.validate.password.valid) {\n                formValid = this.validate.password.valid;\n                this.validate.password.message = PASSWORD_MESSAGE;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _checkIfEmailExist\n        * @description - Check if email given exists\n        * @use - this._checkIfEmailExist();\n        * @function\n        * @return {void}\n        */\n        private _checkIfEmailExist(): void {\n            //CONSTANTS\n            const EMAIL_TAKEN_MESSAGE = this.$filter('translate')('%modal.signup.error.email_taken.text');\n\n            //VARIABLES\n            let self = this;\n\n            if(this.form.email) {\n                this.RegisterService.checkEmail(this.form.email).then(\n\n                    function(response) {\n                        if(response.data) {\n                            if(!response.data.emailExist) {\n                                self.validate.email.valid = true;\n                            } else {\n                                self.validate.email.valid = false;\n                                self.validate.email.message = EMAIL_TAKEN_MESSAGE;\n                            }\n                        } else if(response.email) {\n                            self.validate.email.valid = true;\n                        }\n                    }\n\n                );\n            }\n\n        }\n\n\n\n        /**\n        * _openLogInModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openLogInModal();\n        * @function\n        * @return {void}\n        */\n        private _openLogInModal(): void {\n            \n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalLogInTmpl,\n                controller: 'mainApp.components.modal.ModalLogInController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: self.dataSetModal.hasNextStep\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            /* When modal is closed,validate if user is Authenticated in order to\n            show current avatar user */\n            modalInstance.result.then(function () {\n\n                //Validate if user is Authenticated\n                self.$rootScope.$broadcast('Is Authenticated', self.dataSetModal.hasNextStep);\n\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n            this.$uibModalInstance.close();\n        }\n\n\n\n        /**\n        * _loginAfterRegister\n        * @description - Tries to login a user after a successful sign up\n        * @use - this._loginAfterRegister();\n        * @function\n        * @return {void}\n        */\n        private _loginAfterRegister(username, email, password): void {\n            //CONSTANTS\n            const USERNAME_PASSWORD_WRONG = this.$filter('translate')('%error.username_password_wrong.text');\n            const SERVER_ERROR = this.$filter('translate')('%error.server_error.text');\n            const SERVER_CODE_ERROR = this.$filter('translate')('%error.server_error_code.text');\n\n            //VARIABLES\n            let self = this;\n            let userData = {\n                username: username,\n                email: email,\n                password: password\n            };\n\n            this.AuthService.login(userData).then(\n\n                //Success\n                function(response) {\n                    self.AccountService.getAccount().then(\n                        function(response) {\n                            //LOG\n                            DEBUG && console.log('Data User: ', response);\n\n                            //loading Off\n                            self.saving = false;\n\n                            //Set logged User data in localStorage\n                            self.localStorage.setItem(self.dataConfig.userDataLocalStorage, JSON.stringify(response));\n                            //Set logged User data in $rootScope\n                            self.$rootScope.userData = response;\n                            /* NOTE: We received 'id' not 'userId' from this endpoint\n                                that's why we have to parse 'id' to 'userId'*/\n                            response.userId = response.id;\n                            self.$rootScope.profileData = new app.models.user.Profile(response);\n\n                            //MIXPANEL\n                            self.functionsUtil.addUserIndentifyMixpanel(self.$rootScope.profileData.UserId);\n                            self.functionsUtil.setUserMixpanel(self.$rootScope.profileData);\n\n                            //Validate if user is Authenticated\n                            self.$rootScope.$broadcast('Is Authenticated', self.dataSetModal.hasNextStep);\n\n                            if(!self.dataSetModal.hasNextStep) {\n                                //Open Welcome Modal\n                                self._openWelcomeModal();\n                            }\n\n                            self.$uibModalInstance.close();\n\n                        }\n                    );\n                },\n\n                // Error\n                function(response) {\n                    //loading Off\n                    self.saving = false;\n\n                    if (response.status == 401) {\n                        DEBUG && console.log(USERNAME_PASSWORD_WRONG);\n                        self.validate.globalValidate.valid = false;\n                        self.validate.globalValidate.message = USERNAME_PASSWORD_WRONG;\n                    }\n\n                    else if (response.status == -1) {\n                        DEBUG && console.log(SERVER_ERROR);\n                        self.messageUtil.error(SERVER_ERROR);\n                    }\n\n                    else {\n                        DEBUG && console.log(SERVER_CODE_ERROR + response.status);\n                        self.messageUtil.error(SERVER_CODE_ERROR + response.status);\n                    }\n                }\n            );\n\n        }\n\n\n\n        /**\n        * _openWelcomeModal\n        * @description - open welcome Modal after a success signUp and log In\n        * @use - this._openWelcomeModal();\n        * @function\n        * @return {void}\n        */\n        private _openWelcomeModal(): void {\n\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: true,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalWelcomeTmpl,\n                controller: 'mainApp.components.modal.ModalWelcomeController as vm'\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalSignUpController.controllerId,\n                    ModalSignUpController);\n\n}\n","/**\n* config()\n* @description - rating config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.components.rating', [])\n        .config(config);\n\n    function config() {}\n})();\n","/**\n* MaRating\n* @description - MainApp Rating Directive\n* @example - <ma-rating></ma-rating>\n*/\n\nmodule components.rating {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IRating extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaRating implements IRating {\n\n        static directiveId = 'maRating';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = RatingController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        scope = {\n            ratingValue: '=',\n            size: '@'\n        };\n        templateUrl: string = 'components/rating/rating.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maRating directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maRating link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IRating {\n            return new MaRating();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.rating')\n        .directive(MaRating.directiveId, MaRating.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * RatingController\n    * @description - Rating Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IRatingController {\n        activate: () => void;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class RatingController implements IRatingController {\n\n        static controllerId = 'mainApp.components.rating.RatingController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        ratingValue: number;\n        size: string;\n        private _ratingList: Array<string>;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = [];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            this.init();\n        }\n\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            //init stars list\n            this._ratingList = [];\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('rating controller actived');\n\n            //Create stars List\n            this._calcuteStars();\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _calcuteStars\n        * @description - this method builds each stars based on a rating value\n        * @use - this._calcuteStars();\n        * @function\n        * @return {void}\n        */\n\n        private _calcuteStars(): void {\n            let value = this.ratingValue;\n            let halfValue = value / 2;\n\n            for (let i = 0; i < 5; i++) {\n\n                if(halfValue >= 1){\n                    this._ratingList.push('star');\n                } else if (halfValue == 0.5) {\n                    this._ratingList.push('star_half');\n                } else if (halfValue <= 0) {\n                    this._ratingList.push('star_border');\n                }\n\n                halfValue = halfValue - 1;\n            }\n        }\n\n\n        /**\n        * _assignClass\n        * @description - this method assign the specific class to each stars\n        * @use - this._assignClass();\n        * @function\n        * @return {void}\n        */\n\n        private _assignClass(): string {\n            return 'ma-stars__icon--' + this.size;\n        }\n\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.rating')\n        .controller(RatingController.controllerId, RatingController);\n\n}\n","/**\n* config()\n* @description - sideMenu config file\n*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('mainApp.components.sideMenu', [])\n        .config(config);\n\n    function config() {}\n})();\n","/**\n* MaSideMenu\n* @description - MainApp SideMenu Directive\n* @example - <ma-side-menu></ma-side-menu>\n*/\n\nmodule components.sideMenu {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface ISideMenu extends angular.IDirective {}\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaSideMenu implements ISideMenu {\n\n        static directiveId = 'maSideMenu';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = SideMenuController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        scope = {\n            type: '@',\n            viewProfileBtn: '=',\n            viewProfileId: '@'\n        };\n        templateUrl: string = 'components/sideMenu/sideMenu.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            DEBUG && console.log('maSideMenu directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            DEBUG && console.log('maSideMenu link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): ISideMenu {\n            return new MaSideMenu();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.sideMenu')\n        .directive(MaSideMenu.directiveId, MaSideMenu.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * SideMenuController\n    * @description - SideMenu Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface ISideMenuController {\n        activate: () => void;\n    }\n\n    interface IOption {\n        name: string;\n        state: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class SideMenuController implements ISideMenuController {\n\n        static controllerId = 'mainApp.components.sideMenu.SideMenuController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        type: string;\n        viewProfileId: string;\n        optionsList: Array<IOption>;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = ['$state', '$filter'];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $state: ng.ui.IStateService,\n            private $filter: angular.IFilterService) {\n            this.init();\n        }\n\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('sideMenu controller actived');\n\n            //Create side menu options\n            this._buildSideMenunOptions();\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * _buildSideMenunOptions\n        * @description - build options list button\n        * @function\n        * @return void\n        */\n        private _buildSideMenunOptions(): void {\n            //VARIABLES\n            let type = this.type;\n            //CONSTANTS\n            const BASIC_INFO_OPTION = this.$filter('translate')('%profile.teacher.edit_profile.button.text');\n            const PHOTO_OPTION = this.$filter('translate')('%edit.profile.edit_photo.option.button.text');\n            const LOCATION_OPTION = this.$filter('translate')('%edit.profile.edit_location.option.button.text');\n\n            const TEACH_OPTION = this.$filter('translate')('%edit.teacher.menu.option.teach.label.text');\n            const EXPERIENCE_OPTION = this.$filter('translate')('%landing.teacher.badge_explanation.get.first_requirement.title.text');\n            const EDUCATION_OPTION = this.$filter('translate')('%edit.teacher.education.menu.option.text');\n            const METHODOLOGY_OPTION = this.$filter('translate')('%search.container.teacher.methodology.title.text');\n            const PRICE_OPTION = this.$filter('translate')('%search.container.teacher.price.title.text');\n\n            switch (type) {\n                case 'edit-teacher':\n                    this.optionsList = [\n                        {\n                            name: TEACH_OPTION,\n                            state: 'page.editTeacher.teach'\n                        },\n                        {\n                            name: EXPERIENCE_OPTION,\n                            state: 'page.editTeacher.experience'\n                        },\n                        {\n                            name: EDUCATION_OPTION,\n                            state: 'page.editTeacher.education'\n                        },\n                        {\n                            name: METHODOLOGY_OPTION,\n                            state: 'page.editTeacher.methodology'\n                        },\n                        {\n                            name: PRICE_OPTION,\n                            state: 'page.editTeacher.price'\n                        }\n\n                    ];\n                break;\n                case 'edit-profile':\n                    this.optionsList = [\n                        {\n                            name: BASIC_INFO_OPTION,\n                            state: 'page.editProfile.basicInfo'\n                        },\n                        {\n                            name: PHOTO_OPTION,\n                            state: 'page.editProfile.media'\n                        },\n                        {\n                            name: LOCATION_OPTION,\n                            state: 'page.editProfile.location'\n                        }\n                    ];\n                break;\n            }\n        }\n\n\n        /**\n        * _currentState\n        * @description - actived option based on current state\n        * @function\n        * @param state - state associated to option button\n        * @return void\n        */\n        private _currentState(state) {\n            //VARIABLES\n            let currentState = this.$state.current.name;\n            return state === currentState;\n        }\n\n\n        /**\n        * _goToSection\n        * @description - go to specific section\n        * @function\n        * @param state - state associated to option button\n        * @return void\n        */\n        private _goToSection(state) {\n            this.$state.go(state, {reload: true});\n        }\n\n\n        /**\n        * _goToViewProfile\n        * @description - go to user teacher profile\n        * @function\n        * @return void\n        */\n        private _goToViewProfile() {\n            //VARIABLES\n            let id = this.viewProfileId;\n            let state = this.type == 'edit-teacher' ? 'page.teacherProfilePage' : 'page.userProfilePage';\n            let url = this.$state.href(state, {id: id});\n            window.open(url,'_blank');\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.sideMenu')\n        .controller(SideMenuController.controllerId, SideMenuController);\n\n}\n"]}