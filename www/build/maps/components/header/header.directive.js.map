{"version":3,"sources":["components/header/header.directive.ts"],"names":[],"mappings":"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","file":"../../../www/components/header/header.directive.js","sourcesContent":["/**\n* MaHeader\n* @description - MainApp Header Directive\n* @example - <ma-header></ma-header>\n*/\n\nmodule components.header {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IHeader extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaHeader implements IHeader {\n\n        static directiveId = 'maHeader';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = HeaderController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        scope = true;\n        templateUrl: string = 'components/header/header.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maHeader directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maHeader link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IHeader {\n            return new MaHeader();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.header')\n        .directive(MaHeader.directiveId, MaHeader.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n    /**\n    * HeaderController\n    * @description - Header Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IHeaderController {\n        activate: () => void;\n        slideNavMenu: () => void;\n    }\n\n    interface IHeaderForm {\n        whereTo: string;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class HeaderController implements IHeaderController {\n\n        static controllerId = 'mainApp.components.header.HeaderController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        private _slideout: boolean;\n        form: IHeaderForm;\n        isAuthenticated: boolean;\n        isTeacher: boolean;\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.auth.AuthService',\n            '$uibModal',\n            'dataConfig',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$state',\n            'mainApp.localStorageService'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private functionsUtil: app.core.util.functionsUtil.IFunctionsUtilService,\n                    private AuthService: app.auth.IAuthService,\n                    private $uibModal: ng.ui.bootstrap.IModalService,\n                    private dataConfig: IDataConfig,\n                    private $filter: angular.IFilterService,\n                    private $scope: angular.IScope,\n                    private $rootScope: app.core.interfaces.IMainAppRootScope,\n                    private $state: ng.ui.IStateService,\n                    private localStorage) {\n            this.init();\n        }\n\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n\n            //Validate if user is Authenticated\n            this.isAuthenticated = this.AuthService.isAuthenticated();\n\n            //Validate if user is teacher\n            if(this.$rootScope.profileData) {\n                this.isTeacher = this.$rootScope.profileData.IsTeacher;\n            }\n\n            //Init form\n            this.form = {\n                whereTo: this.$filter('translate')('%header.search.placeholder.text')\n            };\n\n            this._slideout = false;\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('header controller actived');\n\n            //SUBSCRIBE TO EVENTS\n            this._subscribeToEvents();\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /*\n        * slideNavMenu method\n        * @description Show or Hide Nav Menu when user press 'menu' button\n        * (small devices)\n        */\n\n        slideNavMenu(): void {\n            this._slideout = !this._slideout;\n        }\n\n\n\n        /**\n         * logout\n         * @description - Log out current logged user (call AuthService to revoke token)\n         * @use - this.logout();\n         * @function\n         * @return {void}\n        */\n\n        logout(): void {\n            //VARIABLES\n            let self = this;\n\n            this.AuthService.logout().then(\n                function(response) {\n                    // Success\n                    window.location.reload();\n                },\n                function(response) {\n                    // Error\n                    /* This can occur if connection to server is lost or server is down */\n                    DEBUG && console.log('A problem occured while logging you out.');\n                }\n            );\n        }\n\n\n\n        /**\n        * search\n        * @description - TODO\n        * @use - this.search('Colombia');\n        * @function\n        * @return {void}\n        */\n\n        search(country): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Search Teacher on SearchBox';\n            //VARIABLES\n            //Get current state\n            let currentState = this.$state.current.name;\n            this.form.whereTo = country;\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n\n            if(currentState !== 'page.searchPage') {\n                this.$state.go('page.searchPage', {country: country});\n            } else {\n                this.$rootScope.$broadcast('SearchCountry', country);\n            }\n\n        }\n\n\n        /**\n        * _openSignUpModal\n        * @description - open Modal in order to add a New Teacher's Experience on Box\n        * @use - this._addEditExperience();\n        * @function\n        * @return {void}\n        */\n\n        private _openSignUpModal(): void {\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalSignUpTmpl,\n                controller: 'mainApp.components.modal.ModalSignUpController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n        }\n\n\n\n        /**\n        * _openLogInModal\n        * @description - open Modal in order to Log in action\n        * @use - this._openLogInModal();\n        * @function\n        * @return {void}\n        */\n        private _openLogInModal(): void {\n\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                keyboard: false,\n                size: 'sm',\n                templateUrl: this.dataConfig.modalLogInTmpl,\n                controller: 'mainApp.components.modal.ModalLogInController as vm',\n                resolve: {\n                    //one way to send data from this scope to modal\n                    dataSetModal: function () {\n                        return {\n                            hasNextStep: false\n                        }\n                    }\n                }\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            /* When modal is closed,validate if user is Authenticated in order to\n            show current avatar user */\n            modalInstance.result.then(function () {\n                //Validate if user is Authenticated\n                self.$rootScope.$broadcast('Is Authenticated');\n            }, function () {\n                DEBUG && console.info('Modal dismissed at: ' + new Date());\n            });\n\n        }\n\n\n\n        /**\n        * _subscribeToEvents\n        * @description - this method subscribes HeaderController to Child's Events\n        * @use - this._subscribeToEvents();\n        * @function\n        * @return {void}\n        */\n        private _subscribeToEvents(): void {\n            // VARIABLES\n            let self = this;\n\n            /**\n            * Is Authenticated event\n            * @description - Parent (HeaderController) receive Child's\n                             event in order to know if user is authenticated\n            * @event\n            */\n            this.$scope.$on('Is Authenticated', function(event, args) {\n                //Validate if user is Authenticated\n                self.isAuthenticated = self.AuthService.isAuthenticated();\n                //Validate if user is teacher\n                if(self.$rootScope.profileData) {\n                    self.isTeacher = self.$rootScope.profileData.IsTeacher;\n                }\n            });\n\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.header')\n        .controller(HeaderController.controllerId, HeaderController);\n\n}\n"]}