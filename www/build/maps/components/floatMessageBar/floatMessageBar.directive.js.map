{"version":3,"sources":["components/floatMessageBar/floatMessageBar.directive.ts"],"names":[],"mappings":"AAMA,IAAO,UAAU,CAuJhB;AAvJD,WAAO,UAAU;IAAC,IAAA,eAAe,CAuJhC;IAvJiB,WAAA,eAAe,EAAC,CAAC;QAC/B,YAAY,CAAC;QAYb;YAqBI;gBAdA,qBAAgB,GAAY,IAAI,CAAC;gBACjC,eAAU,GAAG,yBAAyB,CAAC,YAAY,CAAC;gBACpD,iBAAY,GAAW,IAAI,CAAC;gBAC5B,aAAQ,GAAW,GAAG,CAAC;gBACvB,UAAK,GAAG,IAAI,CAAC;gBACb,gBAAW,GAAW,iDAAiD,CAAC;gBAUpE,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YAC3D,CAAC;YAED,gCAAI,GAAJ,UAAK,MAAsB,EAAE,GAAY,EAAE,IAAyB;gBAChE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YACnD,CAAC;YAGM,0BAAQ,GAAf;gBACI,MAAM,CAAC,IAAI,iBAAiB,EAAE,CAAC;YACnC,CAAC;YA9BM,6BAAW,GAAG,mBAAmB,CAAC;YA+B7C,wBAAC;QAAD,CAjCA,AAiCC,IAAA;QAGD,OAAO;aACF,MAAM,CAAC,oCAAoC,CAAC;aAC5C,SAAS,CAAC,iBAAiB,CAAC,WAAW,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAsB1E;YAwBI,mCAAoB,UAAuB,EACvB,OAA+B,EAC/B,MAAsB,EACtB,UAAqC,EACrC,MAA2B;gBAJ3B,eAAU,GAAV,UAAU,CAAa;gBACvB,YAAO,GAAP,OAAO,CAAwB;gBAC/B,WAAM,GAAN,MAAM,CAAgB;gBACtB,eAAU,GAAV,UAAU,CAA2B;gBACrC,WAAM,GAAN,MAAM,CAAqB;gBAC3C,IAAI,CAAC,IAAI,EAAE,CAAC;YAChB,CAAC;YAIO,wCAAI,GAAZ;gBACI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC;YAGD,4CAAQ,GAAR;gBAEI,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;YACtD,CAAC;YAoBD,yCAAK,GAAL;gBAEI,IAAM,cAAc,GAAG,8BAA8B,CAAC;gBACtD,IAAM,cAAc,GAAG,+CAA+C,CAAC;gBAEvE,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAE/B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;YACnD,CAAC;YApEM,sCAAY,GAAG,8DAA8D,CAAC;YAU9E,iCAAO,GAAG;gBACb,YAAY;gBACZ,SAAS;gBACT,QAAQ;gBACR,YAAY;gBACZ,QAAQ;aACX,CAAC;YAsDN,gCAAC;QAAD,CAxEA,AAwEC,IAAA;QAxEY,yCAAyB,4BAwErC,CAAA;QAGD,OAAO,CAAC,MAAM,CAAC,oCAAoC,CAAC;aAC/C,UAAU,CAAC,yBAAyB,CAAC,YAAY,EAAE,yBAAyB,CAAC,CAAC;IAEvF,CAAC,EAvJiB,eAAe,GAAf,0BAAe,KAAf,0BAAe,QAuJhC;AAAD,CAAC,EAvJM,UAAU,KAAV,UAAU,QAuJhB","file":"../../../www/components/floatMessageBar/floatMessageBar.directive.js","sourcesContent":["/**\n* MaFloatMessageBar\n* @description - MainApp FloatMessageBar Directive\n* @example - <ma-float-message-bar></ma-float-message-bar>\n*/\n\nmodule components.floatMessageBar {\n    'use strict';\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    export interface IFloatMessageBar extends angular.IDirective {\n\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    class MaFloatMessageBar implements IFloatMessageBar {\n\n        static directiveId = 'maFloatMessageBar';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        bindToController: Boolean = true;\n        controller = FloatMessageBarController.controllerId;\n        controllerAs: string = 'vm';\n        restrict: string = 'E';\n        scope = true;\n        templateUrl: string = 'components/floatMessageBar/floatMessageBar.html';\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        //static $inject = ['dataConfig'];\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor() {\n            console.log('maFloatMessageBar directive constructor');\n        }\n\n        link($scope: angular.IScope, elm: Element, attr: angular.IAttributes): void {\n            console.log('maFloatMessageBar link function');\n        }\n\n        /*-- INSTANCE FUNCTION --*/\n        static instance(): IFloatMessageBar {\n            return new MaFloatMessageBar();\n        }\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular\n        .module('mainApp.components.floatMessageBar')\n        .directive(MaFloatMessageBar.directiveId, MaFloatMessageBar.instance);\n\n\n    /*********************************************************/\n    /*                     CONTROLLER                        */\n    /*********************************************************/\n\n    /**\n    * FloatMessageBarController\n    * @description - FloatMessageBar Controller\n    */\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IFloatMessageBarController {\n        activate: () => void;\n    }\n\n    /****************************************/\n    /*           CLASS DEFINITION           */\n    /****************************************/\n    export class FloatMessageBarController implements IFloatMessageBarController {\n\n        static controllerId = 'mainApp.components.floatMessageBar.FloatMessageBarController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n\n        // --------------------------------\n\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'dataConfig',\n            '$filter',\n            '$scope',\n            '$rootScope',\n            '$state'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(private dataConfig: IDataConfig,\n                    private $filter: angular.IFilterService,\n                    private $scope: angular.IScope,\n                    private $rootScope: angular.IRootScopeService,\n                    private $state: ng.ui.IStateService) {\n            this.init();\n        }\n\n\n        /*-- INITIALIZE METHOD --*/\n        private init() {\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            console.log('floatMessageBar controller actived');\n        }\n\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * FIXME: Este metodo ya no funciona igual desde que agregamos el SignUp,\n        * es necesario arreglarlo ya que no esta llamando al modalSignUp sino me\n        * esta llevando de inmediato a crear un profesor, sin haber pasado antes\n        * por signUp.\n        * _join\n        * @description - \n        * @use - this._assignNativeTooltip(language);\n        * @function\n        * @param {string} language - current language on the ng-repeat loop\n        * @return {boolean} tooltipText - return tooltip text\n        */\n\n        _join(): void {\n            //CONSTANTS\n            const CREATE_TEACHER = 'page.createTeacherPage.start';\n            const CLICK_MIXPANEL = 'Click: Join as a teacher from floatMessageBar';\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n            // GO TO NEXT STEP\n            this.$state.go(CREATE_TEACHER, {reload: true});\n        }\n\n    }\n\n    /*-- MODULE DEFINITION --*/\n    angular.module('mainApp.components.floatMessageBar')\n        .controller(FloatMessageBarController.controllerId, FloatMessageBarController);\n\n}\n"]}