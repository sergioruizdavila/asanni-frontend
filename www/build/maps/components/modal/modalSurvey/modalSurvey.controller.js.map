{"version":3,"sources":["components/modal/modalSurvey/modalSurvey.controller.ts"],"names":[],"mappings":"AAQA,IAAO,UAAU,CAsGhB;AAtGD,WAAO,UAAU;IAAC,IAAA,KAAK,CAsGtB;IAtGiB,WAAA,KAAK;QAAC,IAAA,WAAW,CAsGlC;QAtGuB,WAAA,WAAW,EAAC,CAAC;YAmBjC;gBAwBI,+BACY,UAAiD,EACjD,OAA+B,EAC/B,iBAAwD,EACxD,UAAuB;oBAHvB,eAAU,GAAV,UAAU,CAAuC;oBACjD,YAAO,GAAP,OAAO,CAAwB;oBAC/B,sBAAiB,GAAjB,iBAAiB,CAAuC;oBACxD,eAAU,GAAV,UAAU,CAAa;oBAE/B,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEjB,CAAC;gBAGO,qCAAK,GAAb;oBAEI,IAAI,IAAI,GAAG,IAAI,CAAC;oBAGhB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBAGrB,IAAI,CAAC,IAAI,GAAG;wBACR,MAAM,EAAE,EAAE;qBACb,CAAC;oBAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;gBAGD,wCAAQ,GAAR;oBAEI,IAAM,cAAc,GAAG,0BAA0B,CAAC;oBAElD,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;oBAEvD,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBACnC,CAAC;gBAcD,qCAAK,GAAL;oBACI,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBACnC,CAAC;gBAxEM,kCAAY,GAAG,gDAAgD,CAAC;gBAUhE,6BAAO,GAAG;oBACb,YAAY;oBACZ,SAAS;oBACT,WAAW;oBACX,mBAAmB;oBACnB,YAAY;iBACf,CAAC;gBA2DN,4BAAC;YAAD,CA7EA,AA6EC,IAAA;YAED,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC;iBACrC,UAAU,CAAC,qBAAqB,CAAC,YAAY,EAClC,qBAAqB,CAAC,CAAC;QAE3C,CAAC,EAtGuB,WAAW,GAAX,iBAAW,KAAX,iBAAW,QAsGlC;IAAD,CAAC,EAtGiB,KAAK,GAAL,gBAAK,KAAL,gBAAK,QAsGtB;AAAD,CAAC,EAtGM,UAAU,KAAV,UAAU,QAsGhB","file":"../../../../www/components/modal/modalSurvey/modalSurvey.controller.js","sourcesContent":["/**\n * ModalSurveyController\n * @description - modal Forgot Password controller definition, generic modal\n * in order to show user forgotPassword form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalSurvey {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalSurveyController {\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalSurveyScope extends ng.IScope {\n\n    }\n\n    interface IModalSurveyForm {\n        option: string;\n    }\n\n\n    class ModalSurveyController implements IModalSurveyController {\n\n        static controllerId = 'mainApp.components.modal.ModalSurveyController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalSurveyForm;\n        sending: boolean;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$rootScope',\n            '$filter',\n            '$uibModal',\n            '$uibModalInstance',\n            'dataConfig'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $rootScope: app.core.interfaces.IMainAppRootScope,\n            private $filter: angular.IFilterService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataConfig: IDataConfig) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            // Init sending loading\n            this.sending = false;\n\n            //Init form\n            this.form = {\n                option: ''\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //CONSTANTS\n            const CLICK_MIXPANEL = 'Click: Open Survey Modal';\n            //LOG\n            DEBUG && console.log('modalSurvey controller actived');\n            //MIXPANEL\n            mixpanel.track(CLICK_MIXPANEL);\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalSurveyController.controllerId,\n                    ModalSurveyController);\n\n}\n"]}