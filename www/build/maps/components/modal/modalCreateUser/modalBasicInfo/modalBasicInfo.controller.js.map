{"version":3,"sources":["components/modal/modalCreateUser/modalBasicInfo/modalBasicInfo.controller.ts"],"names":[],"mappings":"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","file":"../../../../../www/components/modal/modalCreateUser/modalBasicInfo/modalBasicInfo.controller.js","sourcesContent":["/**\n * ModalBasicInfoController\n * @description - modal get user basic information after the user signed up in Waysily\n * @constructor\n */\n\nmodule components.modal.modalBasicInfo {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalBasicInfoController {\n        close: () => void;\n        form: IModalBasicInfoForm;\n        validate: IModalBasicValidate;\n        activate: () => void;\n    }\n\n    interface IModalBasicInfoTooltip {\n        phoneNumber: string;\n        gender: string;\n        about: string;\n    }\n\n    interface IModalBasicInfoForm {\n        phoneNumber: string;\n        gender: string;\n        about: string;\n    }\n\n    interface IGenderForm {\n        gender: app.core.interfaces.IDataFromJsonI18n;\n    }\n\n    interface IModalBasicValidate {\n        phoneNumber: app.core.util.functionsUtil.IValid;\n        gender: app.core.util.functionsUtil.IValid;\n        about: app.core.util.functionsUtil.IValid;\n    }\n\n    class ModalBasicInfoController implements IModalBasicInfoController {\n\n        static controllerId = 'mainApp.components.modal.ModalBasicInfoController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalBasicInfoForm;\n        tooltip: IModalBasicInfoTooltip;\n        validate: IModalBasicValidate;\n        listGenders: Array<app.core.interfaces.IDataFromJsonI18n>;\n        genderObject: IGenderForm;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            'mainApp.models.user.UserService',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            '$uibModalInstance',\n            'dataConfig',\n            '$filter',\n            '$uibModal',\n            '$rootScope'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private userService: app.models.user.IUserService,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataConfig: IDataConfig,\n            private $filter: angular.IFilterService,\n            private $uibModal: ng.ui.bootstrap.IModalService,\n            private $rootScope: app.core.interfaces.IMainAppRootScope\n        ) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //CONSTANTS\n            const PHONE_NUMBER_TOOLTIP = this.$filter('translate')('%tooltip.modal_basic_info.phone_number.text');\n            const GENDER_TOOLTIP = this.$filter('translate')('%tooltip.modal_basic_info.gender.text');\n            const ABOUT_TOOLTIP = this.$filter('translate')('%tooltip.modal_basic_info.about.text');\n            //VARIABLES\n            let self = this;\n\n            // Gender Select List Structure\n            this.genderObject = {gender: {code:'', value:''}};\n\n            this.listGenders = this.getDataFromJson.getSexi18n();\n\n            //Init tooltip\n            this.tooltip = {\n                phoneNumber: PHONE_NUMBER_TOOLTIP,\n                gender: GENDER_TOOLTIP,\n                about: ABOUT_TOOLTIP\n            };\n\n            //Init form\n            this.form = {\n                phoneNumber: '',\n                gender: '',\n                about: ''\n            };\n\n            // Build validate object fields\n            this.validate = {\n                phoneNumber: {valid: true, message: ''},\n                gender: {valid: true, message: ''},\n                about: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        /*-- ACTIVATE METHOD --*/\n        activate(): void {\n            //LOG\n            DEBUG && console.log('modalBasicInfo controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n        /**\n        * _openFinishModal\n        * @description - open Modal in order to show finish message\n        * @use - this._openFinishModal();\n        * @function\n        * @return {void}\n        */\n        private _openFinishModal(): void {\n            //VARIABLES\n            let self = this;\n            // modal default options\n            let options: ng.ui.bootstrap.IModalSettings = {\n                animation: false,\n                backdrop: 'static',\n                size: 'sm',\n                keyboard: false,\n                templateUrl: this.dataConfig.modalFinishTmpl,\n                controller: 'mainApp.components.modal.ModalFinishController as vm'\n            };\n\n            var modalInstance = this.$uibModal.open(options);\n\n            this.$uibModalInstance.close();\n        }\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const NAN_ENUM = app.core.util.functionsUtil.Validation.IsNotNaN;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            const NUMBER_ENUM = app.core.util.functionsUtil.Validation.Number;\n            const BIRTHDATE_MESSAGE = this.$filter('translate')('%create.teacher.basic_info.form.birthdate.validation.message.text');\n\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate Phone Number field\n            let phoneNumber_rules = [NUMBER_ENUM];\n            let onlyNum: any = this.form.phoneNumber.replace(/\\D+/g, \"\");\n            //NOTE: If is empty, replace by NaN since this field is not required\n            onlyNum = parseInt(onlyNum) || NaN;\n            this.validate.phoneNumber = this.functionsUtilService.validator(onlyNum, phoneNumber_rules);\n            if(!this.validate.phoneNumber.valid) {\n                formValid = this.validate.phoneNumber.valid;\n            }\n\n            //Validate Gender field\n            let gender_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.gender = this.functionsUtilService.validator(this.genderObject.gender.code, gender_rules);\n            if(!this.validate.gender.valid) {\n                formValid = this.validate.gender.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * _parseData\n        * @description - parse data in order to send to DB\n        * @use - this._parseData();\n        * @function\n        * @return {void}\n        */\n        private _parseData(): void {\n            //VARIABLES\n            let genderCode = this.genderObject.gender.code;\n            /*********************************/\n\n            // Prepare data to send to DB\n            this.$rootScope.profileData.PhoneNumber = this.form.phoneNumber;\n            this.$rootScope.profileData.Gender = genderCode;\n            this.$rootScope.profileData.About = this.form.about;\n\n        }\n\n\n\n        /**\n        * goToNext\n        * @description - go to next step (save user information on DB)\n        * @function\n        * @return void\n        */\n        private _goToNext(): void {\n            //VARIABLES\n            let self = this;\n\n            //Validate data form\n            let formValid = this._validateForm();\n\n            if(formValid) {\n                this._parseData();\n                // UPDATE EXISTING TEACHER\n                this.userService.updateUserProfile(this.$rootScope.profileData)\n                .then(\n                    function(response) {\n                        if(response.userId) {\n                            //go to next step\n                            self._openFinishModal();\n                        }\n                    }\n                );\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalBasicInfoController.controllerId,\n                    ModalBasicInfoController);\n\n}\n"]}