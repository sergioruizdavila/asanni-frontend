{"version":3,"sources":["components/modal/modalEducation/modalEducation.controller.ts"],"names":[],"mappings":"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","file":"../../../../www/components/modal/modalEducation/modalEducation.controller.js","sourcesContent":["/**\n * ModalEducationController\n * @description - modal Teacher's Education controller definition, generic modal\n * in order to show add new teacher's education form\n * @constructor\n * @param {ng.ui.bootstrap.IModalServiceInstance} $uibModalInstance - modal boostrap instance\n */\n\nmodule components.modal.modalEducation {\n\n    /**********************************/\n    /*           INTERFACES           */\n    /**********************************/\n    interface IModalEducationController {\n        form: IModalEducationForm;\n        validate: IModalEducationValidate;\n        close: () => void;\n        activate: () => void;\n    }\n\n    interface IModalEducationScope extends ng.IScope {\n\n    }\n\n    interface IModalEducationForm {\n        school: string;\n        degree: string;\n        fieldStudy: string;\n        dateStart: string;\n        dateFinish: string;\n        description: string;\n    }\n\n    interface IModalEducationValidate {\n        school: app.core.util.functionsUtil.IValid;\n        degree: app.core.util.functionsUtil.IValid;\n        fieldStudy: app.core.util.functionsUtil.IValid;\n        dateStart: app.core.util.functionsUtil.IValid;\n        dateFinish: app.core.util.functionsUtil.IValid;\n        description: app.core.util.functionsUtil.IValid;\n    }\n\n    interface IDataSet {\n        education: app.models.teacher.Education;\n        teacherId: string;\n    }\n\n\n    class ModalEducationController implements IModalEducationController {\n\n        static controllerId = 'mainApp.components.modal.ModalEducationController';\n\n        /**********************************/\n        /*           PROPERTIES           */\n        /**********************************/\n        form: IModalEducationForm;\n        validate: IModalEducationValidate;\n        education: app.models.teacher.Education;\n        listStartYears: Array<app.core.interfaces.ISelectListElement>;\n        listFinishYears: Array<app.core.interfaces.ISelectListElement>;\n        startYearObject: app.core.interfaces.ISelectListElement;\n        finishYearObject: app.core.interfaces.ISelectListElement;\n        degreeObject: app.core.interfaces.IDataFromJsonI18n;\n        listDegrees: Array<app.core.interfaces.IDataFromJsonI18n>;\n        defaultConfig: any;\n        HELP_TEXT_TITLE: string;\n        HELP_TEXT_DESCRIPTION: string;\n        // --------------------------------\n\n        /*-- INJECT DEPENDENCIES --*/\n        static $inject = [\n            '$uibModalInstance',\n            'dataSetModal',\n            'mainApp.core.util.GetDataStaticJsonService',\n            'mainApp.core.util.FunctionsUtilService',\n            'mainApp.models.teacher.TeacherService',\n            '$timeout',\n            '$filter'\n        ];\n\n\n        /**********************************/\n        /*           CONSTRUCTOR          */\n        /**********************************/\n        constructor(\n            private $uibModalInstance: ng.ui.bootstrap.IModalServiceInstance,\n            private dataSetModal: IDataSet,\n            private getDataFromJson: app.core.util.getDataStaticJson.IGetDataStaticJsonService,\n            private functionsUtilService: app.core.util.functionsUtil.IFunctionsUtilService,\n            private teacherService: app.models.teacher.ITeacherService,\n            private $timeout: angular.ITimeoutService,\n            private $filter: angular.IFilterService) {\n\n            this._init();\n\n        }\n\n        /*-- INITIALIZE METHOD --*/\n        private _init() {\n            //VARIABLES\n            let self = this;\n\n            //Create Education object\n            this.education = this.dataSetModal.education || new app.models.teacher.Education();\n\n            // Country Select List Structure\n            this.degreeObject = {code: this.education.Degree || '', value: ''};\n\n            // Years Select List Structure\n            this.startYearObject = {value: this.education.DateStart || ''};\n            this.finishYearObject = {value: this.education.DateFinish || ''};\n\n            //Init form\n            this.form = {\n                school: this.education.School || '',\n                degree: this.education.Degree || '',\n                fieldStudy: this.education.FieldStudy || '',\n                dateStart: this.education.DateStart || '',\n                dateFinish: this.education.DateFinish || '',\n                description: this.education.Description || ''\n            };\n\n            // Build Years select lists\n            this.listStartYears = this.functionsUtilService.buildNumberSelectList(1957, 2017);\n            this.listFinishYears = this.functionsUtilService.buildNumberSelectList(1957, 2017);\n\n            //Build Countries select lists\n            this.listDegrees = this.getDataFromJson.getDegreei18n();\n\n            // Build validate object fields\n            this.validate = {\n                school: {valid: true, message: ''},\n                degree: {valid: true, message: ''},\n                fieldStudy: {valid: true, message: ''},\n                dateStart: {valid: true, message: ''},\n                dateFinish: {valid: true, message: ''},\n                description: {valid: true, message: ''}\n            };\n\n            this.activate();\n        }\n\n        //active function to handle all controller logic\n        activate(): void {\n            //LOG\n            console.log('modalEducation controller actived');\n        }\n\n        /**********************************/\n        /*            METHODS             */\n        /**********************************/\n\n\n\n        /**\n        * _validateForm\n        * @description - Validate each field on form\n        * @use - this._validateForm();\n        * @function\n        * @return {boolean} formValid - return If the complete form is valid or not.\n        */\n        private _validateForm(): boolean {\n            //CONSTANTS\n            const NULL_ENUM = app.core.util.functionsUtil.Validation.Null;\n            const EMPTY_ENUM = app.core.util.functionsUtil.Validation.Empty;\n            /***************************************************/\n            //VARIABLES\n            let formValid = true;\n\n            //Validate School field\n            let school_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.school = this.functionsUtilService.validator(this.form.school, school_rules);\n            if(!this.validate.school.valid) {\n                formValid = this.validate.school.valid;\n            }\n\n            //Validate Degree field\n            let degree_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.degree = this.functionsUtilService.validator(this.degreeObject.code, degree_rules);\n            if(!this.validate.degree.valid) {\n                formValid = this.validate.degree.valid;\n            }\n\n            //Validate FieldStudy field\n            let field_study_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.fieldStudy = this.functionsUtilService.validator(this.form.fieldStudy, field_study_rules);\n            if(!this.validate.fieldStudy.valid) {\n                formValid = this.validate.fieldStudy.valid;\n            }\n\n            //Validate 'Start Year' fields\n            let start_year_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.dateStart = this.functionsUtilService.validator(this.startYearObject.value, start_year_rules);\n            if(!this.validate.dateStart.valid) {\n                formValid = this.validate.dateStart.valid;\n            }\n\n            //Validate 'Finish Year' fields\n            let finish_year_rules = [NULL_ENUM, EMPTY_ENUM];\n            this.validate.dateFinish = this.functionsUtilService.validator(this.finishYearObject.value, finish_year_rules);\n            if(!this.validate.dateFinish.valid) {\n                formValid = this.validate.dateFinish.valid;\n            }\n\n            return formValid;\n        }\n\n\n\n        /**\n        * save\n        * @description - when user click \"Save\" button, close the modal and\n        * send the new education data\n        * @use - this.save();\n        * @function\n        * @return {void}\n        */\n        save(): void {\n            //Validate data form\n            let formValid = this._validateForm();\n            //If form is valid, save data model\n            if(formValid) {\n                //VARIABLES\n                let self = this;\n                let degreeCode = this.degreeObject.code;\n                let startYear = this.startYearObject.value;\n                let finishYear = this.finishYearObject.value;\n                /*********************************/\n\n                this.form.degree = degreeCode;\n                this.form.dateStart = startYear;\n                this.form.dateFinish = finishYear;\n\n                //Charge new data\n                this.education.School = this.form.school;\n                this.education.Degree = this.form.degree;\n                this.education.FieldStudy = this.form.fieldStudy;\n                this.education.DateStart = this.form.dateStart;\n                this.education.DateFinish = this.form.dateFinish;\n                this.education.Description = this.form.description;\n\n                if(this.education.Id) {\n                    this.teacherService.updateEducation(this.dataSetModal.teacherId, this.education)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.$uibModalInstance.close();\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                } else {\n                    this.teacherService.createEducation(this.dataSetModal.teacherId, this.education)\n                    .then(\n                        function(response) {\n                            if(response.id) {\n                                self.education.Id = response.id;\n                                self.$uibModalInstance.close(self.education);\n                            } else {\n                                //error\n                            }\n                        }\n                    );\n                }\n\n            } else {\n                //Go top pages\n                window.scrollTo(0, 0);\n            }\n\n        }\n\n\n\n        /**\n        * close\n        * @description - when user click \"X\" button, close the modal\n        * @use - this.close();\n        * @function\n        * @return {void}\n        */\n        close(): void {\n            this.$uibModalInstance.close();\n        }\n\n\n    }\n\n    angular.module('mainApp.components.modal')\n        .controller(ModalEducationController.controllerId,\n                    ModalEducationController);\n\n}\n"]}